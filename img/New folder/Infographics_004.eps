%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Infographics_004.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Tom
%%CreationDate: 4/15/2015
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 32251 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFA8FFA8A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFCFFFCFFFCFFFA8AFA8FFAEAFA8FF
%AEAFA8FFAEAFA8FFA8FFA8FFAEAFA8FFAEAFA8FFAEAFA8FFA8AFA8FFFFFF
%CFFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFCFA8CFA8FFA8A8A7FFA8CFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%84A8AE84AFA88484FF84AEA8AF84AF84AFA8AE84AFA88484FF84AEA8AF84
%AF84AEA8AEA8FFA8FFA8FF7DA8A8FFA8CFA8AEA8CFA8FFA8A8A8FFA8A8A8
%FFA8CFA8A8A8CFA8FFA8A8A8FFA8A8A8FFA8CFA8FFFFA8FFA8FFA8A8A8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFFFCF7DFFCFFFCAFFA8FFCFAFAEFFA8FFFFFFA8FFCFFFCFFF
%A8FFCFAFAEFFA8FFFFFFA8FFCFAFCAFFCFFFCFA8A8FFA8FFCFFFA8FFCFFF
%A8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%FFFD05A8FFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8CAFFA8FFA8AFA8FF84FFCAFFA8FFA8
%AEA8FFA8FFA8AFA8FF84FFA8FFA8FFA8AEA8FFA8FFA8FFA8CF7DA8A8FFA8
%FFA8A8A8FFA8FFA8CFA8FFA8FFA8CFA8FFA8A8A8FFA8CFA8AEA8CFA8FFA8
%CFA8FFA8CFFFCFFFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFAEFFA8FF
%AEFFA8FFAEFFA8FFAEFFA8FFA8FFA8FFCFFFCFFFA8FF7DFFAEAFA8FF84AF
%A8AFAEFFA8AFAEAF84FFAEAFA8FF84AFA8AFAEFFA8AFAEAFA8FFA8AFCFFF
%FFFD04A8FFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFAEFFA8FFA8FFA8
%FFA8FFAECAA7FFA8FFCFFFA8A8FFA8FFA8A8A8FFA8FFA8CFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAEFFA2A2A8FFA8FFA8FFA8FFA884
%A8FFA8FFA8AFA8FF84FFA8AFA8FFA8AEA8FFA8FFA8AFA8FF84FFA8FFA8FF
%8460A8FFA8FFA8FFA8FF7DA8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8A8FFA8CFA8AFA8CA9AC9A8CFA8FFA8CFFFA8FFA8FF7DA8CFFFA8
%FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFA8CACFFFCFFFCFCBA2CBCAFFFF
%FFA8FFCFFFA8FF7EFFA8FFFFFFA8FFFFAFA8FFFFFFCFFFA8FFA8FFFFFFA8
%FFFFAFA8FFA8A9CFAF5AFFA8FFFFFFA8FFFFA8A8FFCFFFCFFFA8FFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFA8FFA8FFCFFFA1C9CAFFA8FFA8FFA8FFA8A8CF
%FD04A87DAFA8AEA8AFA8AEA8AFA8AEA8AFA8AEA8AFA8AFA8A27DA2A8AFA8
%A87DAEA8A8A8AFA8FFA8FFA8A8A884A8AF84FFA8A8A8FF84AEA8AFA8AFA8
%AEA8AF84FFA86084FF84AFA86036FFA8AFA8AEA8FFA8FF7DA87DA8A8FFA8
%FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFA8CFA8A8A8CFA8FFA8C2A1FFA8A8A8
%CFA8CFA8FFFFA8FFCFFF84A8CFFFA8FFAEFFA8FFAEFFA8FFCFFFA1A8A8FF
%A8A8A8FFA2CAFFCAA2FFCFFFA8FFFFFFCFFFFFFFCFFF7EFFA8FFFFFFA8FF
%FFAFA8FFAFFFCFFFA8FFAEFFFFFF36AFFFAFA8FFFFFFCFFFA8FFA8FFFFFF
%CFFFFFA8A8FFCFFFCFFFA8FFA8FFCFFFA8FFFFFFA8FFCFFFA8FFA8FFA8FF
%CACAA8FFCFFFA8FFA8FFA8FFCFA8CFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA2CAA8CAA2A2A8FFCAFFA2A2A2FFA8FFCACFA8FFCAFFA8FFA8FFA8
%A8FFFFA8FFCFAFA8FFA8FFCAFFA8FFA8AFCFFFA8FFCFAFA8FF5A84CFFFA8
%FFA8AFCFFFA8FFA8FFA8FF84A8A8FFA8FFA8FFCAFFA8FFA8C2A0FFA1C9A8
%FFA8FFA8FFA8FFA1CAA8AEA8FFA8CFA8FFA8FFA8FFFFCFFFA8FFA8A8A8AF
%A8AFA8AFA8AFA8AFA8A87DAFA8AEAEFFA8AFA8CFAEAFA1FFAEAEA8AFA8AE
%A8FFAEFFCFFFA8FF7DFFA8AFA8FF84AFA8AFA8FFA8AFAEAF84FF8436A8FF
%84AFA8AFA8FFA8AFAEAF84FFA8AFCFFFFFFD04A8FFA8FFA8FFA8FFA8CAA8
%CAA8CFA8C3C3CAA8FFA8FFA8FFA8C2A8FFA8FFA8FFA8FFA8FFCFFFA8A8FF
%FD04A883AEA8AFA8AEA8AFA8A27DA8A1A8A8AEA8AFA8AEA8AEA8AFA8AEA8
%AFA8AEA8AEA8AFA8FFA8FFA8FFA884A8AF84AFA8AEA8AF84AFA86035FFA8
%AEA8AF84AFA8AEA8AF84AFA8AE84AFA884A8AFA8FFA8FFA8FF7DA8A8CFA8
%FFA8A8A8CABBCAA8AFA8FFA8AFA8C399FFA8A8A8CAA8AEA8A8A8CFFD05A8
%FFA8CFFFCFFFCFFFA8A8CFFFCFFFCAFFA8A2C9FFFFFFCFFFCAFFCFFFCAFF
%CFFFFFFFCAFFFFFFCFFFCAFD05FFCFFFFFFF7DFD05FFAEFD05FFA8FFFFFF
%84FD05FFAEFFFFAFFFFFCFFFFFFFA8FFFFFFCFFD04FFA8A8FFCFFFFFFFA8
%FFCACFCFFFA8FFCFFFAEFFA8CACAFFA8CFCAFFA8FFA8FFCFFFA8FFA8FFCF
%FFA8A8FFFD05A8FFA8FFA8FFA2A2A8CFA8FFA8CFA8CFA8FFA8CFA8CFA8FF
%A8CFA8FFA8FFA8CFA8FFA8FFA8FFFD04A8AEFFA8FFA8AFA8FF84AFA8FFA8
%FF8436A8FFA8FFA8AFA8FF84FFA8FFA8FFA8AEA8FFA8FFA8FFA8A87DA8CF
%FFA8FFA8C2A8FFA8FFA8FFA8FFA8FFA8FFA8CFA1C3A8FFA8FFA8FFA8FFA8
%FFA8CFA8FFA8CFFFA8FFA8FF83A8AEAFA8FFA8A2A8FFA8FFA8CFA8AFA8FF
%AECFA8FFA8CFA8FFA8FFA8FFAEFFA8FFAEFFA8FFFFFFA8FF7DFFA8AFAEFF
%5AAFFF6060FFAEAFA8AF84FFA8AFAEFF84AFAFAFA8FFAEAFA8AF84FFA8AF
%FFFFCFFFA8A8A8FFA8FFA8CAC3FFA8FFA8FFA8FFCFFFA8FFA8FFAECABCFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFCFA8CFA8FFCFA8A7FFA8FFA8A2A8FFA8
%CFA8FFA8FFA8CFA8FFA8CFA8FFA8FFA8CFA8FFA8FFA8CFA8FFA8FFA8FFA8
%FFA8A8FFFFA8FFCA6084FFA8FFA8FFA8FFA8AFCAFFA8FFCAAFA8FFA8FFA8
%FFA8FFA8AFCAFFA8FFA8FFA8FF7DA8A8FFA8CAA8FFA8FFA8FFA8AEA8FFA8
%CFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8CFA8FFA8CFA8FFFFA8FFA8FFA8A8
%AEFFA8A8A8FFA8FFA8FFA8FFAEFFA8FFAFFFA8FFAEFFA8FFCAFFAEFFAEFF
%A8FFAFFFCFFFFFFFA8FF84FFAEFFFFFFA8FFFFAFA8FFAFAFAEFFA8FFA8FF
%AFFFA8FFFFAFA8FFAFAFAEFFA8FFA8FD05FFA8A8A8FFFFCFCAFFA8FFA8FF
%CFFFA8FFCFFFA8FFAEFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFA8FFA8FFCFA8
%FFFD04A87DAFA8A27EAFA8AE84AEA8AEA8AEA8A8A8AFA8A884AFA8AF84AE
%A8AFA8AFA8A8A8AFA8FFA8FFA8A8A884A8AE84AFA88484AF84AEA8AF84AF
%848BA8AF84AFA88484AF84AEA8AF84AF848BA8AE84FFA8FFFD05A8C9BCFF
%A8AEA8FFA8FFA8A8A8FFA8A8A8FFA8AEA8A8A8AEA8FFA8A8A8FFA8A8A8FF
%A8FFA8FFFFCFFFA8FFA8AECACAA8FFCFFFFFFFCAFFFFFFCFFFCFFFFFFFCF
%FFCFFFFFFFCAFFFFFFCFFFCFFD05FFCFFFFFFF7DFFAF60AFFFAFFD09FFA8
%FD05FFAFFD09FFA8FFFFFFCFFD04FFA8A8FFC9CAFFFFA8FFFFFFCFFFAEFF
%FFFFCFFFCFFFFFFFA8FFFFFFCFFFA8FFCFFFCFFFA8FFCFFFA8A8FFA8FFA8
%A877A17DA8A8A8A1A8A8A7A7A8A7A884A8A7A8A7A8A8A8A7A8A8A7A8A8A7
%A8A8A8A7A8A8FFA8FFA8FFA87DA8A87EA8A8A884A87DA8A8A884A88484A8
%A884A8A8A884A87DA8A8A884A88484A8A8A8FFA8FFA8FF7DA1A1A884FD0B
%A87DA8A8A87DFD07A8A7A8A8A87DFD04A8FFA8CFFFCFFFA8FFFD25A8FD05
%FFFD23A8FD07FFFD22A883FFCFFFA8A8FFA8FFA8FFCFFFA8FFCFCFA8FFA8
%A8A8FFA8FFCAA8A8FFA8FFFFFFA8FFCFA8CFFFA8FFCFFFA8FFCFFFA8FFA8
%FFA8FFCFFFA8FFA8A8FFFFA8FFFFA8A8FFA8A8FFFFA8FFA8A8FFFFA8FFFF
%CFA8FFA8A8CFFFFFFFA8FFCFA8A8FFFFA8A8FFA8A8A8FF7DFFCFA8A8FFA8
%A8FFA87DFFA8A8A8FF7DFFA8A8A8FFA8A8A8FFA8FFA8FFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFA8FFA8FFCFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFF
%A8FFFFFFCFFFFFFFA8FFFFFFCFFFFFFFA8FFFFFFA8FD05FFA8FFCFFFFFFF
%A8FFFFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFA8FFA8FF
%FFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFFFA8FFCFFFA8FFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFD3FFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFA8FFCFFFA8FFCFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD1BFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFCFFFA8FFFFFFA8FFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFD47FFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFCFFFA8FFCFFFA8A8FFA8FFA8CFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFA8A8CFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFCFFF7DA8
%FFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFD05FF7EFD25FFCFFFFFA8A8FFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFCFAFA8FFCFFFA8FFCFA8FFA8FFCF
%A8A7FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFCFFFA8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFAFFFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA8FFA8FFA8A8A8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA884A8FFA8FFA8FFA8FF5A60CAAF84
%FFA8FFFFCFFFA8FFA8AEFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD
%13FFA8FFA8FD15FFCAFD09FFCAC9C2CAFD04FFA8A8A8FD0FFFCFFFA8AFFF
%AF60FFCFFFFFFF84AFFFFFCFFF8460CFFFCFA8FFFD05A8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%FD04A8FFFFA8FFCFFFAFFFFFFFA8FFFFFFA8FFFFFFBCBCBBBBC3FFFFFFA8
%FFFFFFC2BBB4B4C2FFCFFFA8FFA8A8CFFFCFFFA884A8FFCAFFA8FFA8FFCF
%FFCA8436FFA8FFA8FFA8FFCA6084FFAEFFA8FFA8FFA8FFFFCFFFCFFFA8A8
%CFFFCFFFA8FFFFFFA8FFFFFFA8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%8460A8FD07FF7DFD05FFCACACAFD09FFBBBBB5BBB5BBCAFD05FFBCBBC1C2
%B5C3FD05FFA8A8FD04FFAF35FFFF60A8FFFFFFCF8584FFAEFFFFFFCAFFA8
%36A8FFFFFFAFCAC3CFAEFFCFFFA8A8FFFD05A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FF84AFCAFFA8FFA8FFA8FFA8FFA83C133C84FFCAFFFD04A8CF
%FFA8FFA8C2B4BBB5C3FFFFA8FFFFCAB5BBBBBBB5BBB4BCA8FFCACABBB5C1
%C8C7C1C3FFA8FFA8AEA8A8FF8435FFCAFFA8FF60AFA8A9A8FF5A84CFFFA8
%FFA8FFA8FFA8FFA8FFA8CFA0CAA1C9A8FFA8FFFFCFFFFD04A8CFFFFFFFAE
%AFFFFFCFFFFFFFCFFFFFFFA83C60FD0AFF8BFD043CAFFFFFFFA8FF84FD04
%FFCAB5BBBBBBB5C2CAFFC9C2B5BBC1C8FD04BBB5C3C3BCB5BBBBC8C7C8C7
%CEFD04FFA8FFA8FFA8AFFD08FF5AAFFD04FFC3C9FFFFCFFFFFFFCFFFFFFF
%C9CAFFFFCAFFFFFFA8A8FFA8FFCFA8A8FFA8FFCAAE13AFCFFFA8FFCAFFCA
%FFA83C133CA8FFA8FFCFFFCAFFCFFF353C3B3C35AFFFFFA8FFA8A8FD04FF
%BBBBB5BBB5BBB4BBBBBBB4BBC1C8C7C1B5BBB5BBB4BBB5BBB5C2C7C79F7C
%84FFA8FFFFFFA8AEFFFFCFFFCFFFA8FFCFFFA8FFFFFFA8FFC3CAA1CAAEFF
%A8FFA8FFA8FFA8C3A8FFA8C9A7FFA8FFFFA8FFA8FF84A8FFFFA8FF843C3B
%AFFFFFA860608A84603C3C138BFFFFCFFF60AFFFFF843C3B3C3C3CA8FFFF
%FFA8FFA8FFFFFFC3BBC1C2BBBBB5BBC1C7C1C2C1C8C7C8C1BBB5BBB5C1C1
%BBB5BBC7C87C350D85FD05FFA8A8FFFFFFCFFFFFFFCFFFFFFFC3CACAFFC3
%CAFFCFC3FFFFFFCAC3C3FFAFCACAFFC8C8C7CFA8FFCFA8FFA8A883A8A8FF
%A8FFA860133C35AF843C133C133C133C353C35FFCAFF843C1384A860133C
%353C35AFCAFFA884A8A8FFFFA8BBB5C7C7C1BBBBC1C8C7C7C1C8C1C7C1C8
%BBBBB5BBC1C8C1BBC1A635140D135AFFA8FFFD05A8FFA8FFA8FFA8FFAFCA
%C3CAA8CAC3C9A8FFAEC9A8FFA8C3A8CAA1C9A1CFC7C7C1C7A7FFA8FFFFA8
%FFFFFFA8AEFFFFCFAFFD103C84FFA83C3C3C3B60FD063CAEFD05FFA8FFFF
%C3B5C2C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8B5BBC1C8C7CDC7A6131413
%140D85FD05FFA8A8FD05FFC3CAC9CAC3FD09FFCACAFFCAC3FFFFFFC3C9C7
%C8C7C8C7CFAFFFCFA8FFA8FFCFA8A8FFA8FF603C3B3C353C3B3C353C3B3C
%353C3B3C1360FF60133C3B3C133C3B3C353C3BAFCAFFFFFFA8A8FFC3B4BB
%C1C8C1C8C7C7C7C8C7C79F829FC8C1C8C7BBBBC8C7A658590D140D140D13
%5AFFFFFFA8FFA8A8CFFFFFFFC3FFCACAA8FFAFFFA9FFC9CFA8FFAFFFA1CA
%C3FFA8CFC9C8C1C8C7C7C1C8A7FFA8FFFFCFFFFD04A8CFFFAE3C3B3C3C3C
%3B3C3C3C3B3C3C3C3BFD043C8A3C3C3B3C3C3C3B3C3C3C3B3CAFFFFFFF84
%FF7DC3B5BBBBC8C7C8C7A659837C8335140D3635599FC8C1C7A55F13140D
%14131413140D84FFFFFFAFA8AFA8FFFFFFC9CAFFFFFFCFC9CFCACEC8C8C7
%C8C8CFFFCFBCFFCFC8C7C8C7C8C7C8C7C8C7CFFFFFA8A8FFA8CFA8A8A8FF
%CA8A133C353C353C353C353C353C353C353C353C133C353C353C353C353C
%353C35AFFFFFA8FFA89AB4BBB5C7C1C8C77C0D140D130D140D130D140D13
%58C87C130D140D130D140D130D135AFFA8FFA8FFA8A8CFFFA8C9AFFFA9C9
%C1C7C1C7C1C7C1C8C1C7C1C8A7CAA7C7C1C7C1C8C1C7C1C8C1C7A7FFA8FF
%FFCFFFCFFFA8A8FFFF60FD1F3CAFFD05FF99BBB5C1C7C8C7A61314131413
%3613141336131413143514133613141336131413361384FD06FFA8FFCFC9
%CAFFFFCEC7C8C7C8C7C8C7C8C7C8C7C8C7C8C8C8C7C8C7C8C7C8C7C8C7C8
%C7CFFFFFCFA8FFCFFD04A8FF843C3B3C353C3B3C353C3B3C353C3B3C353C
%3B3C353C3B3C353C3B3C353C3B3C35AFFFFFA8A8A89AB4C1C1C7C1820D14
%0D140D130D140D130D140D130D140D130D140D130D140D130D1360FFA8FF
%A8A8A8CAC9C3A8FFFFC9C1C8C7C7C1C8C7C7C1C8C7C7C1C8C7C7C1C8C7C7
%C1C8C7C7C1C8C7C7A7FFA8FFFFA8FFA8FFA8CFAE3C3B3C3C3C3B3C3C3C3B
%3C3C3C3B3C3C3C3B3C3C3C3B3C3C3C3B3C3C3C3B3C3C3CA8FFFFFFA8FFA0
%C8C7C8C7590D141314131413141314131413141314131413141314131413
%1413140D84FD04FFA8A8A1CAFFFFCAC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CFA9FFCFA8FFA8FFCAA8833C193C13
%3C3B3C133C3B3C133C3B3C133C3B3C133C3B3C133C3B3C133C3B3C133C3B
%AFCAFFCFFFA8A0C7C77C350D140D140D130D140D130D140D130D140D130D
%140D130D140D130D140D135AFFCFFFA8FFA8AFFFFFC9C7C1C7C7C7C1C7C7
%C7C1C7C7C7C1C7C7C7C1C7C7C7C1C7C7C7C1C7C7C7C1C7A7FFA8FFFFCFFF
%A8FFA8593559355A3559355A355935603559356035593560355935603559
%3560355935603559A8FFFFFFA8FF7C7C2E352F352F352F352F352F352F35
%2F352F352F352F352F352F352F352F352F350C84FD04FFA8A87DA8A0A6A0
%A6A0A6A0A6A0A6A0A6A0A6A0A6A0A6A0A6A0A6A0A6A0A6A0A6A0A6A0A6A0
%CFFFFFCFA8FFA8FFA8FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CFA8FFA8CF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAEFFFFFFA8FFA8FFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFFFFF
%A8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FF
%A8AFA8FFA8AFA8FFA8FFA8FFFFCFFFA8FFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFD57FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8A8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD5FFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFCFFD
%1FFFCFFFFFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFCFFFA8FFCFFFA8
%FFFFFFA8FFFFFFCFFFFFFFCFFFFFFFCFFD4BFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFA8FFFFFFA8FFCFFFA8FFCFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FF
%CFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFCFFFFFFFCFFFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFCFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFCFFFFFFFA8
%FFFFFFCFFFFFFFCFFFFFFFCFFD1DFFA8FD29FFA8FD17FFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFCFA8FFA8FFFF7D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FD22FFCF
%FFFFFFA8FFA8A8FD04FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFCFFFCFFF7DA8CFFFFFFFA8FFFFFFCF
%FFFFFFCFFD07FFCFFD13FF7EFD28FFA8A8FD0DFFCFFD07FFCFFFFFFFA8FF
%FFFFA8FFFFFFA8FFCFFFA8A8FFA87D7DA87DFFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8C9A1CAAEFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFFD04A8C9CF
%CACFA7CFCACEC9CFC9CFCACFC9CFC9CFCACFC9CFCACEC9CFC9CFA8CFC9CF
%A9FFFFFFA8FFA8A87EA8FFFFA8FFA8FFA8FFA8FFA8FFAEFFAEFFC3C9A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FF7DA8FD04FFCFFFFF
%FFCFFFFFFFA8A8A8C9B4BBC9FD13FFA8FF7DC8C7C9C8C7C8CEC1C8C9C7C7
%CFC7C7C9C8C7C9C8C7C8CEC1C8C9C7C7CFC7C7C9FD08FFA8A8FD09FFC3BC
%BCFFCAFFC9BBB4CAFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFA8FFA8
%FFFFA8A7FFA8FFA8FFA8FFA8FFCAFFFFA87DA8A1BBB4C98484A8FFCFFFA8
%FFCFFD05FFA8FD05FFA8A8C7C7C8C9C1C8C8C7C7CEC1C8C9C8C1C9C8C7C8
%C9C1C8C8C7C7CEC1C8C9C8C1C9FD04FFCFFFFFFF84A8FFFFA8FFCFFFA8FF
%FFC26FBCC2BBBBC3BBBBA1FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%FFA8FF7DA87DA8FFFFA8FFFFFFA8FFFFAF84AFA8A884C9BBBBA1140D84FD
%06FFA17070FD07FFA8FFA8C8C1CEC8C7C8CEC7C8C9C8C7CFA0C8C9C8C1CE
%C8C7C8CEC7C8C9C8C7CFC7C7C9FD07FFA8A8A8FD06FFC3BCC9C21376C3B4
%BBC2BCB5C9C3C3C9FFCFFFFFFFAFCABCC2CAFFCFFFA8FFCFA8FFA8A87DA8
%7DFFA8FFA8FFA8FFA8FF603C35A87D84A1BBB4A113135AFFA8FFA8FFFFA1
%4469A8FFCFFFA8FFFD04A8C7C7C8C9C1C8C8C7C7C9C1C8A72E057DC8C7C8
%C9C1C8C8C7C7A7517CA7C8C1CEFFFFA8FFCFFFFD04A8CAFFA8C3A0CABBB4
%BBC30D7DC2BBB5C3B5BBA1BBB4C2AFFFA8FFAFFFA0B4B4CAA8FFA8FFA8FF
%FFCFFFFFFF7DA8FFFFCAFFA8FD04FF601960A8A884CABBBBA13613847D53
%7DFFFFFF9B6945FD09FFA8C8C7CEC8C7C8A77BA0C9C8C7CA28287DCDC7CE
%C9C8A6CEC7CD7D2828A8C8C7C9FD08FFA9A1BCBBCABBBBC2C2B5C2C31376
%C9527DC2BCBBC99A9AC2FFCAFFC9C3C3C9B4BBC9FFFFFFCFFFCFA8FFFD04
%A87DFFCAFFA8FFA8CFA7CF603C3BA87D84A1BBB5A113145A520053FFFFFF
%A14469A8FFFFFFA8FFCFA8A8A8C8C7C8C9C1C8522828A7C7C8A728057DC8
%C7C8592752C8C7C7A10528A1C8C1CEFFFFCFFFFFFFA8FFA8A1B5BBC3BCB4
%C3BCBBBBC30D7DC2132FC25252C37D0DC3BCBBBCC2B4BBA07675CAA8FFA8
%FFA8FFFFCFFF7DA8A8838289A8FFA8FFC8C7C8603C60A8A884C9B5BBA114
%0D84522852FFFFFF776969CAFD06FFA8FF7DC8C7C9C8C7C87D0552A7C89F
%A828287DCDC7CE522852CEC7CD7D2827A8C8C7C9FD07FFA8AFA1BBB4C9BB
%BBC2C2B4C2A0137CC30D59C2592FC97613A0C2B4C2C2BBBBC30D59C9FFA8
%FFCFFFA8A8FFA8FFFFA87C8157A7A8A9A8C8C1C8603C3BA87DA8A1BBB4A1
%13135A520553779B779B4469A8FFA8FFCFFFA8FFA8A8C7C7C8A79FC95227
%277D27287D52057DC7C7C8530053A09F9F7D27287DC8C1C9AFFFFFFFA8FF
%FFFF84A17576A1BCB4C29A769AC30D7DC22F2EC32E2FC27D0DC29A529AC2
%B4BCA02F2ECAAEFFA8FFA8FFFFCFFFA8FFA2835D82A7FFA8FFC8C7C8673C
%60A8A884C9B5BBA1140D845228529C6B9C776969CBFD08FF7DCDC7CE5228
%527D27527D2827A82E287DCDC7CE5228527D27527D2E27A8C8C7C9FD08FF
%AFA1592FC99A76C2A113C3C2367CC30D59C2592FC97C13C2A113A1C2BCBC
%C30D59C9FFCFFFFFFFCFA8FFCF7D7DA87C8257AEA8A9A8C8C1C8603C3CA8
%7DA8A1BBB4A113135A5205537771719B4469A8FFA8FFFFFFFD04A8C7C7C8
%5305535327287D27287D52057DC8C7C85305535327287D2728A1C8C7CEAF
%FFFFFFA8FFA8A8A8C92E35C27D0DC276139AC30D7DC22F2EC32E2FC27D0D
%C276139AC20D7DC22F2ECAAFFFA8FFA8FFFFA8FFFFFF7D838182A7FFA8FF
%C8C7C8601360A8A884C9BBBBA13613845228529C6A9C9B6945CBFD08FF7E
%7C517D5228527D27527D2E28A828287D7D51A15228527D27527D2E28A8A0
%A6A7FD08FFA8A1592FC97613C2A10DC3C21376C30D59C2592FC97613C2A1
%0DC3C21376C30D59C9FFCFFFA8FFCFA8FFA8FFA8A87C825DA7A8FFA8C8C1
%C8603C3BA87D84A1BBB4A113135A5205597771719B4469A8FFCFFFA8FFCF
%FFA8A82827525905525227287D27287D2E007D2827525905525227287D27
%2E7D2E007DFFFFA8FFCFFFA8FFA8C32E35C27D0DC376139AC30D7DC2352E
%C22E35C27D0DC376139AC30D7DC2352EC9A8FFA8FFA8FFFFCFFF7D7DA883
%8182A7FFA8FFC8C8C8601A60A8A884CABBBBA13613845228529C719C9B69
%69FD07FF7DFF7E52277D5328527D27527D2E28A828287D52277D5328527D
%27527D2E28A828287DFD07FFA8AFA1592FC97636C2A10DC3C21376C30D59
%C2592FC97636C2A10DC3C21376C30D59C9FFFFFFCFFFCFA8FFA8FFA8A87C
%825DA7A8FFA8C8C1C9603C3BA87DA8A1BBB5A113145A520559777171A144
%69A8FFFFFFA8FFFFFFA8A82827527D27525228287D272E7D2E057D2E2752
%7D27525228287D272E7D2E007DFFFFCFFFFFFFA8FFA8C32E35C37D0DC376
%139AC30D7DC2352EC22E35C37D0DC376139AC30D7DC2352ECAA8FFA8FFA8
%FFFFCFFFA8FF7D835D82A7FFA8FFC8C7C8601A3CA8A884C9B4BBA1140D84
%5227529C6A9B766945CAFD08FF7D5227595227527D05527D2827A8282759
%5227595227527D05527D2827A828277DFD08FFA9A1592EC97613C2A10DA0
%C21376C30D59C2592EC97613C2A10DA0C21376C30D59C9FFA8FFCFFFA8A8
%FFA8A87DA8525851FD047D7C757C2E352E7D527D76756F7D2E2F52522752
%52764C76454C7D7D7DFFFFFFCFA8A87D5252527D287D5352527D52525953
%2E7D5252527D287D5352527D525259532E7D7DA8A8FFA8FFA8A8A8A15259
%7C7D2EA1765976A12E7D7C5352A152597C7D2EA1765976A12E7D765352A1
%7D84A8FFA8FFFFCFFFCFFFCFFFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFAF
%FFCFFFCAFFFFFFCFFFFFFFAEFFFFFFA8FD37FFAFFFFFFFAFFFFFFFCFFFAF
%FFCFFFFFFFAEFFCFFFA8FFCFFFCAFFAEFFA8FFFFFFCFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFCFFF
%FFFFCFFFFFFFA8FFFFFFCFFD1BFFCFFFFFFFCFFFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFAEFFA8FFA8FFA8FF
%A8FFA8FFA8FFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFD43FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFA8FFFFFFA8
%FFCFFFA8FFCFFFA8FFCFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFCFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFD57FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFCFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFFFCFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FD0FFFCF
%FFFFFFCFFD3BFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFA8FFFFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8A87D7D
%FD05527D7DFFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFAFFFFFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFCFFFA8FFCFFFCFFFFFFFCFFFFF
%CF7D522728282E0C5952532828277DA8FD22FFCFC9CFCAFD2BFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA87D272706
%350D130D1484AFA8AF7E59272752A8FFFFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFFFFFA8FFFFFFA8FFFFFFAEFFCACAC1C7C1C7C9FFFFFFA8FFFFFFA8
%FFFFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFF7D7D52
%FD05FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFCFFFA8FFCFFFCFFF
%7D52272F13141314131413AFAFAFA8FFAFAF7D52277DFD04FFCFFD14FFCF
%C3C2BBBBBBC8C7C8C7CFFD14FFCFFFFFFFCFFD0AFFFD04A8FD05FFCFFFCF
%FFA8FFCFFFA8FFCFFFA8FFCFA8FFA8FFA8FFA8FFA8FF522706130D140D13
%0D140D1384AFA8AF84AFA8AF84590052A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFC9C2B4BBB4BBB4BBC17574C8CFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FF
%A8FFAFFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFCFFFCFFFFFFF52
%282E14133613141336131413FD04AFFFAFAF848B85842752CFFD13FFC2BB
%B5FD06BBC84A75C9FD1FFFA8FFAFFFFFFFAFFFFFFFA9FD07FFCFFFFFFFCF
%FFCFFFA8FFCFA8FFA8FFA8FFA8FF59270C1413130D140D130D140D1384AF
%7D5952AFA884608584840552AEFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFCF
%BBBBB5BBB5BBB5BBB5BBC1C7C7CFFFFFA8FFFFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFFFFF7D527DFFA8A9A8A8A8FFA8FFA8FFA8FD
%05FFA8FFA8FFA8FFA8FFA8FFFFCFFFA8FFCFFF7D282E1413141314131413
%14131413AFA884595984AF8485848B8584277DFFFFCFFFFFFFCFFD09FFFD
%0BBBC8C7C882ADAEFD11FFCFFFFFFFCFFFFFFFA8FFA87DA8A9A8A87DA87E
%A87DA8A8FFA9FFAFFD05FFA8FFCFFFA8FFCFFFA8A8FFA8FFA8FFA8280614
%0D130D140D130D140D130D1484AFA8AFA9AF608584846085845900A8FFFF
%A8FFA8FFA8FFA8FFA8FFAFFFBBBBB5BBB5BBB5BBB5BBB5BBC1C8A5825782
%83FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8
%7DA87DA87DA87EA87DA87DA8A8FFA8FFFFFFAEFFA8FFA8FFA8FFA8FFFFCF
%FFA8FFFF7D273613141336131413361314131413AFA8AFAFAF848B848B84
%8B848B845328FD0DFFC2FD0CBBC8C7A65D88818282FD17FFA8FFA8A87EA8
%7E7D527D527D7DA8A8A87DA9FFFFA9FFFFFFCFFFCFFFA8FFCFFFA8A8FFA8
%FFA8A8272F131413130D130D130D140D130D1484AFA8AF84846085608459
%84848559277DFFA8FFCFFFA8FFCFFFA8FFC9BBB5BBB5BBB5BBB5BBB5BBB5
%BBC1C8815E5782575D82FFFFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFFFFFA8
%FFA8A87DA87DA8525227272728272E287D7DA87DA8A8FFA8FFFFFFA8FFA8
%FFA8FFA8FFFFA8FFCFFF532E131413140D06050613141314131413AFAFAF
%A88B848584842E272E8B848B2E52FFFFCFFFFFFFCFFD04FFC2B5FD0CBBC8
%C7825D572627578283FF6060FD04FFCFFFFFFFCFFD07FFA8FFA8A87EA852
%282752272E2752525227597DA87DAFFD06FFA8FFCFFFA8FFCFA8FFA8FFA8
%5206140D130D130C0D0C130D130D140D1384AFA8A9608584846084598460
%85845905A8FFFFA8FFA8FFA8FFAFCAB4BBB56F444B92BBB5BBB5BBB5BBC1
%A65782575D5782815E13130DAFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8A87E
%847DA82828FD042705270528275228537DA87DFFA8FFAFFFAEFFA8FFA8FF
%A8FFFFA8FFFFA82735131413361314133613141336131413AFAFAF848B84
%8B848B848B848B848B842E7DFD09FFC2BBBBBB6F996E99FD07BBC8A58282
%828188825F1314131460FD0FFFA8A87DA8522E282E27522827052827282E
%59527D7EA8A8FFA9FFFFFFCFFFCFFFA8FFCFA8FFA8FF7D280D140D130D14
%0D130D140D130D140D1384AF84846085848460858484608584852E52CFFF
%A8FFCFFFA8FFCFBCB4BBB5BBB5BBBBBBB5BBB5BBB5BBC1825D8281823435
%0D130D140D36A8FFCFFFA8FFCFFFA8FFCFFFA8FFA8A85252522827280552
%27527D7D2E2727272853527D7DA8A8FFA8FFFFFFA8FFA8FFA8FFFFCFFFCF
%7D2814131413141314131413141314131413AFA88B8485848B8485848B84
%858485845927FFFFFFCFFD05FFFD0FBBC88182815E35140D141314131413
%FD05FFCFFFFFFFCFFFFFFFA8FFA8525252272E27272784FD04FF7D28272E
%52537DA87DFD07FFA8FFCFFFA8A8FFA8FF522E13130D140D130D140D130D
%140D130D0D598460858484608460845A845A605A602F28A8FFA8FFA8FFA8
%FFA7BBB5BBB5BBB5BBB5BBB5BBB5BBB5BB9F8257350D140D130D140D130D
%1484FFA8FFA8FFA8FFA8FFA8FFFD04A8285227282727F87DFFFFA8FFA8FF
%5227275228597D84A8FFA8FFFFFFA8FFA8FFA8CFFFCFFFA8522E14133613
%14133613141336131413355252598B84856085FD09605A27FD08FFCAFD0F
%BBA634360D36131413361314131413AFFD0CFFA8FF7D7D525228280527A8
%FFCFFD04FFA82728525952A87DAFFD06FFA8FFCFFFA8A8FFA8CF272E1313
%0D140D130D140D130D140D140C7D532F60605A605A605A605A605A605A60
%5928A8FFA8FFA8FFA8FFA7BBB5BBB5BBB5BBB5BBB5BBB5BBBB752E140D13
%0D140D130D130606061484FFA8FFA8FFA8FFA8FFA8FFA8A8A884597D272E
%272700A8FFFFA8FFA8FF7D27275252537D84A8FFA8FFFFFFA8FFA8FFA8FF
%FFA8FFCF52061413141314131413141314133636362E2E59605A6060605A
%6060605AFD04605A27CFFD04FFCFFFFFCAB5FD0BBB935228282E14131413
%1413140C0C060C0DAFFFFFCFFFFFFFCFFD05FFA8FF7D7D7D2E272E27277D
%FFCFFFA8FFFF7D0528525352A87EA852A8FD04FFCFFFA8FFCFA8CFA8FF52
%2E0D140D130D140D130D3635363536353635605A605A605A605A605A605A
%605A602E28A8FFA8FFA8FFA8FFA8BBB4BBB5BBB5BBB5BBB5BB6F28052827
%2706140D130D140D130D141313A8FFA8FFA8FFA8FFA8FFA8FFA8A9A8A852
%7D282827280528A8FFA8FFCFA8272727522E7D7DA87D52A8FFFFFFA8FFA8
%CFA8FFFFA8FFFF7D27361314131413363660363C3660363C363C36FD0860
%6160856060605952FD05FFCFFFFFFFFD09BBBC4B2E2752282E27522E3613
%3613141336131435FFFFFFCFFFFFFFCFFD05FFA8FFA87D7D532752275227
%527DFFA8A82728275252537DA8A87E52FFFFFFCFFFCFFFA8FFCFA8FFA8FF
%7D280D141336133636363536353635363536353636605A605A605A5A2E2E
%2E605A60277DFFFFA8FFA8FFA8FFAFC2B4BBB5BBB5BBBB9927282728272E
%27282728271313140D130D140D60CAFFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%7D7D5328272E272E2728272800272728525252A87DFD04A8FFFFFFA8FFA8
%FFA8FFFFCFFFA8FF272F143C3636363C3636363C3636363C363636606060
%5A606060352E2E2E5A6159287DFFFFFFA8FFFFFFCFFFC9BBB5FD04BB7628
%2E2752282E2752282E2752273513141314131484FFCFFFFFFFCFFFFFFFA8
%FFFFFFA8FFA8A8537D522827522752272827272752525352FD04A8FFA9FF
%FFFFCFFFA8FFCFFFA8A8FFA8CFA852273635363536353635363536353635
%36353635605A605A605A605A6060605A5327AEA8FFA8FFA8FFA8FFA8FFBB
%BBB5BB934C0528272827282728272827282728272F0D140D1335FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8A9A87D527D522827282752272E28FD04527D
%527DA8A8A8FFFFFFA8FFA8CFA8FFA8CFFFCFFFA8FF7D282F60363C366036
%3C3660363C3660363C366036FD066061FD0460277DFD04FFCFFFFFFFCFFF
%FFC9B5BB752E2752282E2752282E2752282E2752282E272F13140DAFFFFF
%CFFFFFFFCFFFFFFFCFFD05FFA8FFA87D7D7D525227532E5228525253527D
%527D7EFFA8FD05FFCFFFA8FFCFFFA8A8FFA8FFA8FF522E35363536353635
%363536363635363536353636605A605A605A605A602E28A8FFA8FFA8FFA8
%FFA8FFA8FFCFBC4B2E2728272E2728272E2728272E2728272E2728272E0D
%60CFFFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FFA8A97E7D537D5253525227
%522853527E7D527DA9A8A8A8FFFFFFA8FFA8FFA8FFA8CFFFA8FFCFFFCFA8
%2735363C3636363C3636363C363C353C3636363C5A605A6060605A615928
%59FFFFFFA8FFFFFFA8FD04FFA828282752282E2752282E2752282E275228
%2E2752282E272E7DFFCFFFFFFFA8FFFFFFA8FFFFFFA8FD05FFA8FFA87E59
%FD057D537D7D7D53A8A8A9A8FFFFA852FFCFFFA8FFCFFFA8FFA8A8CFA8FF
%A8CFA87D0535353635363536352F05282F363536353635365A605A605A60
%592E27FFA8FFA8FFA8FFA8FFA8FFA8FFA82E272827282728272827282727
%00272728272827282728272753FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFFD04A87D7D527D537D527D537D7DA9FD04A852FFA8FFA8CFA8FFA8CF
%A8FFFFA8FFCFFFA8FFAE52275A363C3660363C2E2F06353660363C366036
%FD06605327A8FD04FFCFFFFFFFCFFFFFFFCFFFA82E2752282E2752282E27
%2E05270052282E2752282E272E277DFD04FFCFFFFFFFCFFFFFFFCFFD07FF
%A8FFA8FFA8A87D847DA87EA8A8FFA8FFA8FFA8A8FFFFCFFFA8FFCFFFA8FF
%CFA8CFA8FFA8CFA8FFA82E2736363635363536353C363635363536353635
%605A605A2E27A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA828052E272827
%2E2728272E2728272E2728272E2728057EFFFFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFFFFFA8A9A8A9A8FFA8A8A8FFA8A8A8FFA8FFA8FFCFCFA8
%FFA8FFA8FFA8CFA8FFFFA8FFA8FFCFFFA8FFA8522759363C363C3636363C
%3636363C3636363C3661592E27A8FFFFCFFFA8FFCFFFA8FFCFFFA8FFFFFF
%A8FFA852272E282E2752282E2752282E2752282E272828A8FD04FFA8FFFF
%FFA8FFCFFFA8FFCFFFA8FFCFFD05FFA8FFA8A9A8FFA8A9A8FFA8FD05FFA8
%FFCFFFA8FFCFFFA8FFA8FFA8A8FFA8CFA8FFA8CFA8FFA852002E35363536
%3536353635363536353635362E2727A8CFFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA87D2727272827282728272827282728052852AECFFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FF
%A8FFFFFFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFFFCFFFA8FFCFFFA8FFCF
%FFCFA828282E5A363C363C363C3660363C3559272859FFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFD05FF7D5227282728272E2728272E287DA8
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFD11FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8A8FFA8CFA8FFA8CFA8FFA8FFCACF7D522728
%2E2F2F352F352E2F2827277DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A87D7D52522852527D7DFFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFF
%A8FFA8CFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFFFA8FFA8FFA8FFA8FFA8
%FFCFFFA8FFA8A85352285227522752287D7DCFCFFFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFCFFFCFFFA8FFFFFFCF
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8A8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFCAFFA8CFA8A8A7A8A8CFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFCFFFFF
%FFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCF
%FFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Infographics003</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-04-15T01:01:43+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-04-15T01:01:43+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-04-15T01:01:43+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9EAZUlvFW8VbpireKt4q&#xA;3TCreKupireKt0xV1MVdTFW8VdTFXUxV1MVdTFXYq1irqYq6mKtYq1TFXYq1TFWsCtUxV1MVaxVr&#xA;FVpGKtkqoqxAHicVQCXMx1+S251gFpHKE2pzMjqT9wGGtkJkBgS3TFXYq3TCrdMVbxVumKuxVumK&#xA;pbr9xLDp6PbyFHa7s4WdaV4y3cUcg79VYjJRYyFhEm2PqqvrS0KsT8XgR7e+G2o49+ZWrbubuSP1&#xA;peKxowHLuxcHt/k43sxEDxkWeQ/S61t3eMs08pIkkX7XZZGUdvAYyPkuOBI3J5n7yskhkFrE4nl5&#xA;M0QJ5fzOoPb3wg78mMoHhBs/w/eFY2p9VV9aWhVifi8CPb3wWzOPfmVi27m7kj9eXisaMBy7sXB7&#xA;f5IxvbkgQPGRZ5D9Lra3d4yzTSkiSRftdlkZR28BjIrjgSNyeZ+8rJIXFrE4nl5M0QJ5fzOoPb3w&#xA;g7sZQPCDZ/h+0hWSIx3SD1HZWRyQxqKgrQ/jkb2bYxqXM8v1K7FV6kCvSuRbkr0eSe5S7aaV2Md3&#xA;cRJQgAIkhCjYdhkihFPGwhRhI9SUB3/mYA/rwKvaEgqPUfc0O/scVWiJvWdfUfiFUjfuS39MVaji&#xA;Lc6yPsxA37YqseNhCjeo9SUB3/mYA4qvaEgrSR9zvv7HBarBETMy+o9Aqkb9yW/pirUcZbnWR9mI&#xA;G+JVVSvBa7mg3wFK25W3Nu5uFDQoObgio+D4q09qVxCpUnoDzK9T6a/UIuIJKbeq/bbJi6a5V1Ka&#xA;g2v+/f8Akof64N0XDv8Atbrbf79/5KH+uO63Dv8Atbra/wC/f+Sh/rjui4d/2ura/wC/f+Sh/rh3&#xA;X0d/2qV3eadawNPNOQi0FA7MxJ2CqoNWYnYAdcIiSzhGMjQP2rNP1CwvYDIrPDIh4zW8r0kjcfsu&#xA;AzD3BBII3BpiQU5McYnc/a1e6lawSJbw8rm8kHJIElIAXpzkctRFr36nsDhET1TDHEiyaj727BJ1&#xA;eVr28WR3ClYo2Kxx9ahSTzY+JY/ILkDK5EAbAD9P6ln4dCvPr7kxj4FfgbkvjXl+JriURqtkk8wf&#xA;UlsWjiCo6ahpxuKDju99C9Sduta5KKyqk0JtfXT97+y3+7D4r74700kw4hv9vuU0Nt9el/e7elH/&#xA;ALsP80nvh3pgOHjO/Qdf6zrM23otWX/dsv8Auw/79b3xla4eGufWXXzKyU231OH97vyg/wB2H/fi&#xA;++EXfzYy4eAb/wA3r5hXJtfXT97+y3+7D4r75Hem08PEN/t9yjHNYtqNxGtwpdIoi6iU1FWkpUcs&#xA;kQeEbMIyh4h36Dr/AFli3Vla2E9zJIxSFp5GVGZmIV2PwqpqTh4SSB7mMJwjAknkZdT3lL7y+nuf&#xA;L9ldaQEeWd7VxHdSSRUjZ1JJG5qP7d+hsjACZEvPk0ZMnFhiYczw8yR1Ccr6JvI/TfkfTkqOZb9p&#xA;PEnKN6c6PDxbHoevuUtX/RCxQtqaI8ZlVYeaGT94TVaABt6jIi21CaB6Xp33JqH69dbciP8Adp98&#xA;JUI1/R+rx/H3j/bP8y++Kqj+jyT4+/8AOfA++BVg9H6w/wAe3BP2z4t74q1D6P7z4/2z+0f64lVj&#xA;+j9Xj+PvH+0f5h74qvf0eSfH3/nPgffFUANQR9Vns4UflHEjNcMSIRUttyrud+mU+KTIxA5dejl/&#xA;lhHGMkiKJ5fxf2ea/TLUWyTrJdvcNJM8gaRvshv2Vp2GGEDHmbYajNHIRURGhW3XzPmjY/7pP9Uf&#xA;qyZaFzsVjZ1UuygkItKkgdBUgb4qlCzFfM7lonq1hESqgNQ+rJsaHJgbNcp10KafWv8AimX/AIH+&#xA;3Bwo8XyKnc6pbWsXq3AeKMELzcUFWNFHXqSaDCIWmMzI0Iy+SEfzGjIBZ2V1czv/AHSmCSOMnp8U&#xA;rqEUDv38ATtkvD7yG4RP8Ww+B+wG1GLTOcjT3Ml02osoJuoqx8OtESOpT0x2Vw1epqd8iJ+sgVw0&#xA;P0pOq9IqPps7V7le0t5vrX1i+aW8lg+G1/dBFjBXdyoJBkatC222wAqaondgbUf0AsZ5wAAIkX+P&#xA;k6+iuOaXtgrQ3yKEcyITFLH/ACyBSCeJPJSNx8icjCQjDfkmGYEmJEqRFjClon93NLcStzuLh1+O&#xA;R6UqadAOiqNgOmHJuR+OhYS1HF0NIkXX75j6Mv2V/Z92ysR/eH3D/fMTl9I2PM/oREb815cWX2YU&#xA;OWEJjKwk/mSaT6jxaF1SK/03g/wkSVvYCeIBrsdt6ZKKyNBMTdfv0/cy/Zb9n3X3x4dmk5fUNj+K&#xA;WJdf6dKfRl/uotuP+VJ74eHZgMvrOx5D/fKSanDaWE9zPHKkELTySvwJoqyMxO3gMlwEkAeTGGcR&#xA;gSQaBl95U4dUgu9JtLm3SV4Jvq7xvwIqpdCOuEwMZEHzY+OJY4kA0eH7w3danfx6tZQw6dLLaSrL&#xA;9ZuahfSoFK/AftcjtjGAMSSd2U88hkiBEkG7Pc6CGyi1m7vY7NluriKETTCMc2ClwKn5AD6PbAST&#xA;EC9giBiMspCJsgdPes0I3tvbTrdSzXjPdTvGxiVOCNIaR/D1p44ctEittgjSylGJu5eqXTzV5br/&#xA;AEKEejL9qD9n/ixciI7/ADZSy+gbH+H7wrrN6l7GPTdKRyGrCg+0mRrZvjO5cjyP6F15PcQRo0Fs&#xA;90zOFZEZFKqerEuVFBkQ2pb5fl4x3w4Mf9OutwNv704SFCNkm/0eP92/WPt/lLiqjeaxaW91a20g&#xA;k+sXLN6EQUktxUk+w+nKp5YxIB5nk5OHSzyRlMfTDme61CJdU/Sk9w01IHijVbQxcgpDNvzBU/5+&#xA;2REJ8V3t3MpZcPAIiJ4gfqur+G6yz1C/t4buXVIQkUcsjLJAGYCJd6uDvX5YBOUQTOq8u5lPDjmY&#xA;jCSSa2lt6vLoiINQt7vT4Li35SQyemyOBsRyGWwkJCxyLjZsUscjCQqQUr27v2vLaC1h/cFm+uTH&#xA;Z0HH4Qg3qTlczLiAjy6t+GGMQMp3xfwjv778kREyRzMqRsFCJQU92y0RoOLKRJstxTfb+B/tnthI&#xA;Qqx/3Sf6o/VkUtyiUxOISom4n0y4JUNTbkAQaVxVKYfrI8yMH4NL+j4vUK1VeXqvXiDyNMl0Ym+i&#xA;YXl79TtnuJlHFaAKrEszE0VFHHdmJoB44Yxs0mMZyNAD5/sQcFleSsNQ1BUa5ArBAHJjtw21F+H4&#xA;nINGf7qDK80x4e3Jv4yDwxG33/juTQmeq/AvX+Y+B/ycZVY/HRoBlvsPn+xpTP6zfAv2V/aPi3+T&#xA;kRXGfcP98kmXCNup/R5NxmflJ8C/a/mP8o/yccdXL3/oCyMqG3T9J8nMZvQ+wtKD9o/805GdeH8k&#xA;xMuPl+PkvYz1X4F6/wAx8D/k5bKrH46MAZb7D5/saUz+s3wLXiv7R8W/yciK4z7h/vmRMuEbdT+j&#xA;yV15kfEAD4A1/gMsQL6pL5jF2LGshjMf6Q036uFDBgPrsFeZNf2vAZIIKakz+unwL9lv2j4r/k47&#xA;U1ky4ht3/o8kBbalJL5gvrEWzo9vBAxmcMInDlz8D8aGlf1+GWShUAb520Qyk5pRrlGPu6+S7Q5d&#xA;Wktp/rtrFAwubhYlSUuGjErcWPwjrv8A57YMoiCKPQJ00shieIAeqXXzPkpata6lPpVtHZ3AsnWW&#xA;2b1FAeqrItV4stN8OOURI2L5sM8ZnHERPDvH7x5Jmxn9dPgX7LftHxX/ACcr2pySZcQ27+vu8lND&#xA;P9em+Ba+lF+0f5pP8nDtTEGXiHboP995NWRn9FvgX+9m/aP+/W/ycZUuEyrl1l958lOYz/UofgX7&#xA;UH7R/wB+J/k4ir+bCRlwDbrH7x5K/wC8N5HyUAenJ0JP7SewwdG7fiF9x/Q68W+Ma/U2iSTmvMzK&#xA;zrw/aoFZd/DIhsS7y9z9K+oAR9fuupp/u0+2EqG9UfUWtI4LBo47pmibnIC6qvMbkCnXt/mcpymX&#xA;KH1OVphjB4soJh5cyfxz/ARi25jZDxDSFqtIzVYnie9MnGIDTPIZe7ubUyfWZPhH2E7nxb2yTW1D&#xA;6n7z4V+2e5/piVS7UItQgsVfTIY2lLRAwM3FD8SjkNtiMpyCUR6Bv3OZgnjnKsxIj3jc+5HJG8ax&#xA;qACeRLMWNSSDUnbLIig405mRtw9T6w/wj7Cdz4t7ZJg1CZP3nwj7Z7n+mAqvj/u0/wBUfqxS6WMy&#xA;QvGHaMupUSJQMtRSq1BFRirHr6/stO8xH61etExsIlQAK8spEsnRArMx/wBUZZGJI5I8GU+RI+X6&#xA;Va0P126F5e3bQRwH/QraRrcsCVo0z8Qy8iDxUfsivc0DxjcAe/72U4GMaEib5nb5ckwaWD0v+OjU&#xA;0Hw8of8AmnMaZ/d8u5jGB4/qP2fqXma3qv8AuS7/AM0Pgf8AJy2R3G3X9BYDGd/Ufs/U4TW/qt/u&#xA;R24rvyh8T/k5AH94dug/3yTjPCPUeZ7vLybSa35P/uSp8XXlDv8ACP8AJw4zvLbr+gLKBoeo8vLv&#xA;Pk00sHo/8dGpoPh5Q/8ANOQmf3fLoGUYHj+o/Z+pUM1vVf8Acl3/AJoPA/5OXSO426/oLAYzv6j/&#xA;ALH9TQlt/Vb/AHJbcV+LlD4nb7OQB/eHboP98k4zwj1Hme7y8kdbFWjqk3riv95VT9HwADLCmIoc&#xA;7SfzPB6WntM1xJxlv9NNGK8Igt5AvwVG1aVPKu+GKyGzV1fzpq9lBDP6tnMk31m79W3X0ePEp8BS&#xA;rcjttlkRHhJPP4uJMZBkiASYkGz6duXkiUmt/r0v+5L/AHVHvyg/mk/ycje3JkMZ4z6jyHd5+TrO&#xA;a39Fv9yVP3su3KD/AH63+TjI+S4cZr6jzPd3nyWSzW/1OH/cl+1Btyh/34v+T2wg78mMsZ4B6j/D&#xA;3d48lczW3rp/uT/ZbflB4r/kZG9uTacZ4h6j/sfLyU0mt/r0v+5L/dUe/KD+aT/Jw3tyYDGeM+o8&#xA;h3efk6zmt/Rb/clT97Ltyg/363+TjI+S4sZr6jzPd3nyU5Zrf6nD/uS/ag25Q/78X/Jwg78mMsZ4&#xA;B6j/AA93ePJFQPE18gS7+sH0pPhrGafEm/wKDkTy5N8YkS5k7Hu8u4K97aNcxognlt+Dq/KFgpbj&#xA;+y1Q3wnvkW1j+m3YSLUYYbpY7pr274BynBD6hoz1FforU5GcjyHNuxQH1T+m/ifd+tF2bJDp0Iud&#xA;RjkumMRnkQxhWbkvQEV2wYokDfeXVOpyRlM8AqHQdwRj3NryT/T16/zReB9sm0LBc2v1h/8AT1+w&#xA;m/KLxb2xVqG5tf3n+nKPjP7UX9MSqx7m19CP/Tl6x7cov5h7YoXvc2vJP9OXr/NF4H2wJWC5tfrD&#xA;/wCnL9hN+UXi3tirUVza/H/py/bP7UX9MSqMhoYUoajiN/owFK8YqhptL0+6kEt3awXEoBVZJI0Z&#xA;glSQtWBNN8NlUPH5e0sJIHs7RmZmMbC2jHFT9kEftcforjaKc3l7Tvq4VbOz9eorIbaPjTlv8P8A&#xA;q++NrS+Ty9pZmiaOytFhXl60Zt4yXqPho23Gh9jja02vl3ShcM7WdqYCoCxfV4wVYdTypvXDa06P&#xA;y7pvCUSWdmWZm9Jlto14qfsgg8uRHjtXG1pzeXdN+rcEs7MT7fvWtoyKct/hHH9nbrja0vfy9pJl&#xA;jKWNosQr6iG3jJatKUO1KfTja02fLuk+urCytPRp8UZt4ySe1GoKfdja0j7e1traP0raJIYga8I1&#xA;CLU+woMVdPaw3CPFcRpNbuFrFIoZSVNakGoPbFUE3l3SDNGy2NoIgGEkZt4yWJpxIagpT5Y2tOj8&#xA;u6SJpWexs2ianpILaMMtBvVt+VT7DDa0t/w3pv1WRPqdmLhlIjl+rRlVYigYptXfelcbWmpvLent&#xA;FCsVpZJIroZ3NqhDoPtKq/s8uxqaY2tKj+XdIM8bLY2ghAb1ENvGWYmnEhqbU37Y2tNR+XNJE0rP&#xA;ZWjxPx9KMW0YKUFDVqfFU79MbK0tXy5pogkU2dk055elIbaPiK/Z5KOtO+4rja06Xy5pbQqI7K0S&#xA;UU5MbaNlO3hQd9+uNrSLt9K0y2k9W2s4IJKceccaI1D2qoGC1VZ1maF1hcRylSI3ZeQDdiVqtfvx&#xA;VB3Wh6VOJXNnbfWJAT67wxueZH2jUfFiCqEl8tWjWKxR29kl6AvK4NpGyEj7X7uopX/W2w2tLpvL&#xA;mnNcwPFaWaW6c/rETW0bF6gceLbceJ9jXBa05fLmnC8eRrSzNqUASAWsYZXB3Yyb1B8OIxtaU4vL&#xA;dmILhZLayaZ2c20gtYwI1I+AMtTz4nqaiuNrS2TyzaNYpEsFml4oXncfVIyjEfa/dnoD/rY8S0un&#xA;8u2DXVu8NrZpbJz+swtaozSVA4cX+HhxPXY1xtaaTy7p4vJJHtLM2jKBFCLaMMrDqS/evhTBa0st&#xA;fLllHNcNc21nNC7VtkW1jjZF32Zqtz7b0GNrSaqiIioihUUAKoFAANgABgSuxVvFW8VXDFWxirYw&#xA;q3ireKG8VbpireKt0wq7FW6Yq6mKupirqYq6mKupirsVapirWBWqYq1irWKtHFLRxVo4FaxVrFVu&#xA;KtYq4YqhFvZDrL2PEemluk4bflyZ2Wny+HDWyEcMCWxiq7CreKt4obxVsDFW6YVbxVB6vfSWNpHM&#xA;ihme5tYCG6UuLmOFjt3AkqMICo7ArqYq3TFXUxV1MVdTFWqYq7FWqYq1iqE0+7e5SdnUL6U8sIp4&#xA;RsVBxKoojAq3FWsVaxSoXV3a2kRmupkghBCmSRgq1Y8VFTtuThjEk0GE5xiLkaCqcizWnFUDp+rW&#xA;eoC5aDmBaTPbzGRGj+OOnKnICo365ZPGY1fUW04s8cl1/Ca7uSKV0kRZEYOjgMrKagg7ggjKyKbQ&#xA;QRYU7uFZraSNpXgUipljbgygGtQ3bpiFSyyiEXmExiRpgunQgSueTN+9k+It3JyXRU8yKW8VbGFV&#xA;wxQsguLefmYZFk9JzHJxNaOvVT7jCQQwhkjK+E3Rr4qowM2xhVjup+d9N03Wv0dcKxjVR6twu/B2&#xA;3oV6kcaE0y+GnMo2HUantnHhzeHLl1PcWQ288FxCk0EiyxOKpIpqCPYjKSCNi7WE4zHFE2CkOuWk&#xA;cNvJIt1LM0uo6YXhkk5rF/p8JARf2AeX6sISyPIpSHVvPHl3SdQNhezsk6qGfijOF5bgHjXem+Yu&#xA;XW48cuGR3dppex9Rnx8cB6ffSY6Trmk6vC02nXK3CKaPSoZT/lKwDD6RluLNDILibcXVaPLgNZI8&#xA;J/HVGTSwwxPLM6xxRgs8jkKqgdSSemWEgCy48YmRAAsl5n5l/M7UHkddAXhZwkLJeunIsx6cQ2wG&#xA;3cZo9T2qeLhxvY9n+zuMAeP9Z/htCeUvzJ1FNV9PXLj17O5oplKqvot2aihRx/m+/Bpe0ZCdZDYP&#xA;2N/afs/jOK8EanHp3/Pr3PVZri3hhM80qRwgVMrsFUDx5HbN6ZACzyeIjjlI8IBJ7mAaz52utXvn&#xA;0vQJjBbxgmfUQKsSNgIwei179T+vn+0e1uEVj+b1Ok7Hjgh4uccUjyh+tS8gjzAvmm5j1S4muF+q&#xA;SGN5JHkQn1Y915HbD2TqjlyGyT6evvDPtwYPysTijGPrHIAHlJnl9apOI+VxLb8WBBifhyNQeJ8e&#xA;mdA8ggtKmigtL+eZxHDFdXLySMaKqq5JJPgBhqzQYmQAJPINXup31zosd/5bSDUHnMbQ+o5SNo2Y&#xA;B2rTqBXb/aNkYASqdhoyZpSxiWGpXXy/H46K95qM1vfWVqtnNMt2XElzGAYoeC8qyEkEcug2yMYA&#xA;gm+TOeUxlGPCTxdeg96K9SMyNGHBkUBmSo5ANUAkeBochTbYukustRfVLa9SKK4sJYZZbZZJowrc&#xA;lFBLGGqGXeoycocBHI9WnHl8QSoGJBI3H2h0Wjxy6RBp+rMuqGNU9WWeNf3joahym46jE5KkZR9K&#xA;xwA4xDJ667+q67udQivrKC3s/XtJi4u7nmq+iFWqHgd25HbbBGMSCSd/vZTnMSiBG4nme5qPT7hN&#xA;XnvjeyvbyxJEtg3H0kZSSZF2rU1/z2omY4QK371GIjIZcRoj6envQ0mrabdW8kV5EyWNwHjE0y/u&#xA;JYzVD8YJCq3bnSvbMaOoAN8u4uwydnyIMdpGt4jnv0rr51dIvT7GzsbKGzsoxFawoEhRSSAo6bkk&#xA;n55fOZkbPMuFjxRxxEYigF919X+qzfWV52/pt6ylS4KUPIcQCTt2yIZJTpn1T9Oj6mgjtP0bD6CB&#xA;DGAnqvQcCFK/KmSPJUy1e/XT9Mubxv8AdKEqD3Y7KPpYjDjhxSAcfV5xhxSn3D+xjfkjzY12Bpuo&#xA;SVuRX0JmO8g68WP8w/HMrU4K9Q5Ok7G7V8T91kPq6Hv/AGo3VvPuj2FwIIg14wP71oiOK/Jjsx+W&#xA;Qx6WUhfJydV25hxS4R6++kr1z8xIJtOMWlrJHcy1V5JAAY17laFtz2y3HpCD6uTga3t+MsdYrEj3&#xA;9EL+W2rGLUJtOkb4LoepFX/fidf+CX9WS1cLF9zR7ParhyHGf4tx7x+z7mca5rdpo9ibu4qwqFjj&#xA;WnJmPYV9t8w8eMzNB6XW6yGnhxy/tQ/+K9Jk0W41S3lEiQJVojs4c7KjDtVtsl4MuLhLV/KeI4Tl&#xA;ib4Ry633PILm4mubiS4mblLKxd28Sxqc2oFCngMmQzkZHmXq/wCXv/KLW3+vL/xM5rdT9Ze47C/x&#xA;WPvP3u106WfrAtogl8NQ0n69IImQv/pkPpVkKgSUXwJplIdsU31vVrfSNKuNQn3SBahehZjsqj5s&#xA;aZRmyjHAyPRy9HpZZ8sccf4niM+lazqkMusv++luZHkdB9s79VHh7ZxuXVAzPFzL6RDUYcJGEbCI&#xA;Aa8uW+vJfrcaY72skRo8/RR4qwP2v9WmS/NeEeIHddfPAYcOQCQPT8cvenmtab5r1aYfXdRFxCW+&#xA;xUoijxEQAXbIZe1Dk+on9DrtJm0uAeiHCfmfnzTBtFtV0iTTolojKRyPUv1DH3rmt8Y8fEXGGrkc&#xA;oyH8B560UiymIqfUDcSvfkDSmba9reoEgRfROdY0zX4rOBruaS5toUUKhdnEIp9niegHtkI6vxNi&#xA;eXJwNLnwGZ4QIyJ7vqR1pqGmeWdGWe+b/Srr94IF3kYfsgDsAOpOT0vZmfXZeHGPTHnI8h+O55f2&#xA;j7ewaY3M8uURzPf/AGpr+V/nK713zZdW/orBZx2UkiIPicsJYlBZtuzHYDOwwez2PQw4+IyyHa+Q&#xA;rnsPg8Lp/aHJrsxhwiOMRuuZuwNz8XpGr/or0Iv0lCs0XrJ6SvEZgJd+BChXoR49stDsVHRFBhvA&#xA;RUG8uAQf+MhxKo+KKKKNYokWOKMBUjUBVVRsAANgBgJtAAAocnMVUFmICgVJOwAGAsgLSOGTThqU&#xA;+sW2myyNOiwyalGoYyIm44py5svgyr8XyAOQ/NExqiYD8e9v/k2EZmRMY5SNwfuJ+kH4+/fZWknf&#xA;VXNvbFo7Fdruchkdj3hQGjD/AC27dBv9msy8TYfT1/V+v8VeIDAOKW8/4RzH9Y/oHXmdub9K/wBH&#xA;M2mtt9UI9AeNu9fS/wCBoU/2OHFtce77un6vgw1XqrL/AD+f9Yc/ntL4uu9TeK69CC3a6MaiS59M&#xA;gNGrbLQH7TGhPGvQfIFllo0BfejFphKPFKXDZoX17/cPPv8AjQe91CC9gjtrSYEXXITSDYxwp/fF&#xA;q0Ktvw33BPtkMmWJjQOx5+Q6/qbcOnljkZTH08h3yP0+8de4gealc63DEghs4wUQcVJFFAG1AuaP&#xA;VdvRj6cQvzPL4BvxdnykeLIU1i/uY9gPhGw2HTOgxG4A+Tq8n1H3uld0hd0QyuqkrGCAWIGygsQN&#xA;/fLGKVWUksnmJpJojBK+nwl4WKsUJlkqpKkqae2SPJCSfmTqXC2ttOQ/FKfWlH+Suy/ea/dmXo4b&#xA;mTzXtHqajHGOu5/R+PJgGbB5J2KuxVXsbyWzvIbuL+8gdXX34mtPpwSjYpsw5TjmJjnE2mnmzzE2&#xA;taj6iVW0hHG3jPX/ACmPu2VYMXAPNzu1NedTksfQOX60kqQCK7HrlzrXYq9c/L3/AJRa2/15f+Jn&#xA;NZqfrL3fYf8Aisfefvb826ibfTJ5ruBoLKzvNNkF0SrCRRews5VVJYcadxv2zHMhEEnkA7rHjlkk&#xA;Ix5kgB5z5k81X/mzUobGEGDTxJ+5h7nbeSSnUgV27Zy2v15yeUQ+hdn9mQ0OMzO+Stz+gMjAt7O0&#xA;ALCK3gTdmNAqqOpOc5GMskqAuUi6fNmAuczQ5ksYH5l+XvWaMpOEDELKEUqwr1+1y/DOpPsbrOEG&#xA;4X3Wb+6vteT/ANGWj4iKnXfQr77+xL9R/NKNX46dZl1B3knPGo9lWv682Gk9iSReadeUf1n9Xxdf&#xA;q/baINYYX5y/UP1/BEaZ+Z2nzyLHfW7WvLb1VPqIPc7Bh+OY+t9jM0ImWKQn5cj+r7nI0XtphnIR&#xA;yxMPPmP1/ej7iPRLO+fX7i5j+pOA9vxIblKepUCvLpXb+GaDBpNRll4EYS8Qc+lDz7ntdT2/gxaQ&#xA;GUxwd/Ox3DvY7qn5n3khZNOtkij6CWb43I8eIoo/HOx0XsXjiAc0zI90dh8+Z+x841vtrlJIwQER&#xA;3y3Py5D7WHXl5dXlw9xdStNM5qzt1/sHtnY6fT48MBDGBGI6PG6jUZM0zPITKR6l6F+Q3/KX3n/b&#xA;Pk/5PQ5idp/3Y/rfoLuPZ3+/P9Q/fF7fez3EEatb2zXTs6qURkQqp6uS5UUHtvmjezQeh/3V5/zG&#xA;XH/Jw4lQsuVXU702hHKxtCDdg7rJKRVIvcICHb34++Y8hxyr+Ec/f3fjyc7GThhx/wAcvp8h1Px5&#xA;D4+SE1CDRLR0ilE0iV5NaCV3ioOnKN240r+z0zXa3W4NORGVnyH6bLfp5Z8gJHCP6VAH5gX8VaTz&#xA;JZBKxo7N2UgKPv3yjJ7QYQPSJE/JhHs2ZO5CGj8zPU+pACvbi1CPvzEx+0Rv1Q28i3S7LHSS+5vf&#xA;WMN/p6etdQ1jktahXeOSgpU7fC4Vq9hXNth12PNUsf1DnHr+PNqhg4Lx5DUDuJdAR+sWK76Uk1GH&#xA;T4jEhFzdyMZLqYbK0jdaddh0UdgAMwtT2zDD6YeuXU9L/H9rZ+VlmNn0wG0R5fjc+aWXN09xM8pR&#xA;EeQASFFClgv2eR6mle+c9q+0Mmf6th3D8buxxYBAACzXeo5hNzL4f7iP/VH6s9IwfRH3B5XJ9R97&#xA;phMYXEJCzFT6bNuoam1adq5awSGa/XTdXmutSlTnFp0XqtGCoZ/Vk2RSSdz03yyEDLYOPqNRHDAz&#xA;mdg881vVptV1GW8lHHlRY0HRUHQZtseMQjT59rdXLPkMz+Agcm4rsVdirsVdirsVdir1z8vP+UWt&#xA;v9eX/k4c1mp+svd9hf4rH3n70L+YltqE/lnU4ZJIvq08+nx2ahWDqTdwhzI1aGrHagzA1cgMMz/R&#xA;P3PQ6GfDnhI9JD72G22naR5dha/vLj4wvH1G2G/ZFFSSc4fFjzauYx442fxzL1PavbUIYzLIRDGP&#xA;t/X7gwXzX5zuNZP1aBTBp6mvAn4pCOhen4DPSewvZ2Gj9c/Vl7+kfd+t8g7d9op6z0Q9OLu6y9/6&#xA;mNZ0rzTsVdiruRoBXYbgdt8FDmtnk7CrsVekfkN/yl95/wBs+T/k/Dmt7T/ux/W/QXfezv8Afn+o&#xA;fvi9wvVvzGgsniSTmvqGZWZfT/aoFK7+G+aN7NJtMGqym9igaO1txd3Fbg/vJCfUNeCbKvzYn/Vy&#xA;qfGTQ2Hf+Px5ORj8KIuVyl3ch8Tz+Ar3t3Gp2um24s7I+rIteUrGvxMaszH9pixqc0eu7XhhHBi9&#xA;Uu/oP1lzcelnmlxz2Hd+jyDH3d5HLuSzsasx6k5yU5mRJJsl28YgCg1kWTsVcCR02xBpDsUuxV2K&#xA;svh/uY/9Ufqz0jB9EfcHlMn1H3qmWsUl1HyZ5d1JoWu7eRjBGIYglxcRAIpJApHIgNOR3O+TjklH&#xA;k05dPjyCpgS96E/5Vr5O/wCWSf8A6TLz/qtk/Hn3tH8naf8AmR+S4flp5O/5ZJ/+ky8/6rY+PPvX&#xA;+TtP/Mj8mx+Wnk3/AJZJv+ky8/6rYfHn3r/J2n/mR+TY/LPyb/yyTf8ASZef9VsfHn3o/k7T/wAy&#xA;PybH5ZeTP+WSb/pMvP8Aqtj48+9f5O0/8yPybH5ZeTP+WSb/AKTLz/qtj48+9f5O0/8AMj8mx+WP&#xA;kv8A5Y5v+k28/wCq2Pjz71/k7T/zI/Jsflh5L/5Y5v8ApNvP+q2Pjz71/k7T/wAyPyT/AEjR7DSL&#xA;JbKwRo7ZSWVHkklILGp+KVnb8chKRJsuTixRxjhiKDWp6FpmqQTQ3sTPHcCES8JJImP1eT1YqNGy&#xA;MpVzWqnIyAIo7htBo2GPT/lH5BuJDJcafLNIeryXt6x+8zHLMWSWMVD0jy2cbLpMWQ3OIkfPdZ/y&#xA;pr8uP+rU/wD0l3n/AFWyz81k/nFr/k7T/wAyPyb/AOVM/lx/1an/AOku8/6rY/msn84r/J2n/mR+&#xA;Tv8AlTP5cf8AVqf/AKS7z/qth/NZP5xX+TtP/Mj8nf8AKmfy4/6tT/8ASXef9VsfzWT+cV/k7T/z&#xA;I/J3/Kmfy4/6tT/9Jd5/1Wx/NZP5xX+TtP8AzI/Jr/lTX5cf9Wp/+ku8/wCq2D81k/nFf5O0/wDM&#xA;j8mj+TX5cf8AVqf/AKS7z/qtj+ayfziv8naf+ZH5JloH5f8AlLy9etfaRZNbXLxmFnM9xKCjEMRx&#xA;lkdeqjtkJ5pyFSJLZi0uLGbhERPkE9uLeKeIxSryjJBIqR0II6e4ytyEsn8saRM8juLgeq7SSIl3&#xA;dIhZjViESRVFfYZXkxRmKkLHmyjMx5GkOfJmgf77uP8ApLu/+quY/wCQwfzI/INn5jJ/OPzaPk3Q&#xA;P993H/SXd/8AVXH8hg/mR+QX8xk/nH5tHyboP++7j/pLu/8Aqrj+QwfzI/IJ/MZP5x+bR8naD/Jc&#xA;f9Jd1/1Vx/IYP5kfkF/MZP5x+bR8n6F/Jcf9Jd1/1Vx/IYP5kfkF/MZP5x+bR8n6F/Jcf9Jd1/1V&#xA;wfkcH8yPyC/mMn84/No+UND/AJLj/pLuv+quP5HB/Mj/AKUL+Yyfzj81p8o6H/Jcf9Jd1/1Vx/I4&#xA;P5kf9KF/MZP5x+abRxrHGsa14oAq1JY0ApuTUn6cyQKFBpJXDCrYxVcMKtjFVwxQ2MVXDCrYxVcM&#xA;VbGKrhhVvFWxiq4Yq2BirdMKupirVMCtYq1iq3FWsVW4FaOKrTirRxVo4FWnFWjiq04paOBVpxVD&#xA;3+oWOnWkl7fzpbWkNDLPKwVFBIUFmOw3OKpPpupwX/mozWV0tzp0+lQT27xPzhcPPJSRCpKmopuM&#xA;KsjGKrhihsYqsnura2j9S4mSGOtOcjBBU9qmmCUhHcmmzHjlM1EEnybtrq2uY/Ut5kmjrTnGwcVH&#xA;aorjGQluDa5McoGpAg+asMk1rhireKrsKpHrer2kts0Nldo1zbX+nR3UcTjnGJL6JCrgGo5gMN+o&#xA;rhAQU5F5aGtJ4zTc0Zen35jjU4jylH5htOKfcfkuF5aU5evHxrSvJaV+/D+ZxVfFH5hfCn3H5N/X&#xA;LMAEzxgHoea7/jidTiH8UfmF8Kfcfku+tWvMJ6yczQBeQrU9Nq4fzGO64hfvCPDlV0aaF5ZmtJ4z&#xA;QVNHXp9+AanEeUo/MJOKfcfk19cs6cvXj41pXmtK/fj+ZxVfFH5hfCn3H5NG8swATPGA3Q8l37eO&#xA;J1OL+dH5hfCn3H5NG6tufD1U5mgC8hXfpth/MY7riF+8I8OVXRpUOWsENd39lZhDdTpAJCFQyMFB&#xA;YkAAV71ONKgPL8kkkV6XYuVvrlV5EmiiUgAV7DEqEzwK1iq3FUNc6hYWpC3NzFAzCqiR1Qke3IjI&#xA;SyRjzIDdjwZJ/TEy9wtVV0dA6EMjAFWBqCD0IOSBaiCDRccULTilo4FWnFVC+mWCyuJ2ge5EMbSf&#xA;V4lDyScBy4IpIBZqUUV64qkOk3X1vzZ9ZFvLa+to9s/1adQksfKeU8HUFgGXoRXCrJy6L9pgPmaY&#xA;oXKQRUbg9DirHZvN+j3i3WnwNJ9aMU6iqkCscbMd/wDY5ecEgLPJ1uLtXDkyeHG+Lfp3MJ8wu7eX&#xA;bjkxP7+Dqa9pM1fbH90Pe9j7Lf40f6h/QgtP/MG88p+XrOO3tI7kXc9wzGRmXjwEY2p/rZlez+kG&#xA;XCbNVJ1Xt32nLTaqIAB4ofpevaHfvqOi6fqDoI3vLaG4ZF3CmWMOQK+FcvyQ4ZEdxcDT5PExxmf4&#xA;og/MN67qsej6HqOrSRmWPTrWa7eJSAzLBGZCoJ7njkHJxY+OYj3mmJfll+benefZ7+G0sJrI2Cxu&#xA;5lZW5eqWApx8OGSIpzNb2fLTgEm7Z9gdekHmC6EkEluLaWL6vqGlf6Q6hY5ed7A37tgatx6NUdcI&#xA;QUksv93/APGF/wCGecaX+L+oXqc3T+sHL/xzpP8AjMn/ABFsR/cH+uPukp/vB/VP3hu5/wB5bT/U&#xA;b/k42Of+7x+4/wC6K4/ql7/0BLLnz15Yt/PVtos12V1I3VrAIPSlP7yT0+A5BSu/Id83o7Kzy1Ec&#xA;oHouB5jkKdcdZjGMwJ9W/wClM7L/AI+P+ML/AMM0Wl/i/qF2OXp7w5f+ObJ/xmT/AIi2I/uD/XH3&#xA;SU/3g/qn7wgNY17RNOisor+/t7SV4mdUnlSMlfUYVAYjwzIOky5cUDCJkKPIf0i1eNCE5CRA/sTc&#xA;SJJrdtIjBkd7dlYdCCEIOWzBGtiD/Oh/vWETenPul+lmZzuXn0Jf3Qt0Rzby3HJ1QLCocry/aNSK&#xA;KO5xVAeXP7m//wCY+6/5OnCVCJm1nR4br6pNfW8d1UL9XeVFkq1Co4E8qmoplJzQBokX73IjpM0o&#xA;8YhIx76NfNg+ofmJaatY6lpsNrLDKbaekpZaD00J7b9s1mTtAZIyiBWxekwdgzwThkMgRxR295YP&#xA;5Z8y6xbeXdQvLS4aCc3drEWFG+Ax3DEfED3UZLtDTnRSMYSJ+nf/AE36mPYWuh2xCGTNjiK8QUL6&#xA;eHv9q/zBqd9qWn6ZdX0pmnImUuQAaBxToBmqz5ZTjEyNnd6XQ6bHhyZIwFR9P3PQ7Pz3pFi2n6NL&#xA;DcNdejax80VDHWWJCu5cH9vfbNxDXQjwwIN0PtAeSzdiZsonmBjw8Uz1vYny8mXnNi86k3mfzFDo&#xA;NhHeTQtMskohCoQCCVZq7/6mY2p1AxR4iL3dj2b2fLVZDAGqF/d+tf5e1yLW9NW+iiaFGdk4MQT8&#xA;PyyWnzjLHiAph2hojpsvhk3smJy5wlK6N0LaY2gRroI31dZSVjMlDwDlQzBeXWgxViU2r3WmeY/r&#xA;Wpwobw6XbJcR2zFoxIZ5i3BnVGK1G1QMo1OoGKPERe7VlycAtO7PVo9UtVuY4zGoZk4sQTtQ9vnk&#xA;tJqBljxAUuLJxi1SbWJbe5S2EastEHIk1+IDNTrO1pYs/hiII2+12uDRCePjt53pP/KSz/6t7/yY&#xA;lzsMv938nzXs3/HR75fdJdr/APyjtx/xng/VJnPdsf3Q976x7Lf40f6h/QwfzP8A8cPSP+Mt3/zJ&#xA;za+y39zL+s8v/wAEv/G8f9T9KV+ZdU1OHzroUEN5PFB9U0cekkjqm9tDX4Qab5dlHql7z97Vov7n&#xA;H/Uj9we3edPPflLUPKnmTSbPUUm1BtL1FFtwsgJaO1lZxUqF2CnvlBwzAsjZ3+m0mSOSEiPTxR+8&#xA;PNP+cUP+Oh5j/wCMVr/xKXISdn29yh8f0Po3IvNpD5iN+bZhOsQtBqGl/VGRmMh/06Dn6ilQoo32&#xA;aE4QgpFbSJGtw7sEQQtVmNAOnc55zpASZAfzC9RmNV7wwD82devLHynbzaVfNBKb9Eke3koeJhlN&#xA;DxPiM6H2f0kZxmMkbFjmPe63tLMYmJge/khvLf5j6Zp3k/Rv8QXk0l9cJcSCRleUsguZEFWFenHL&#xA;O1exp5ZjwRERA9zDR6+MInjJsljmsTJP+funzpXhLqulOtdjRhbkZ0mGJjjAPQOrmbmT5vU/Mt/d&#xA;6f5X1m9s5PSuYLR3ikABowK70YEZwXYeKOTUcMhcTEvRdoTMcdjnbFvyo826trGi6rJrV6JTDc26&#xA;wlxHHQNHKWpxCV6Zt+3NBDFiiMUauW9WehcPs/UynM8Z6MW/PaWKXVdFaN1dfqLDkpBH+9Enhm07&#xA;AiY6YAitz97h9okHKae16X/vTpf+paf8m0zmdV/xo/8AJSP6HbYf8V/zT+lnedo6FDXjX4jT6kkT&#xA;ycx6gmZkAj/aI4q9W8Birxn8wXRbxeTBa3N6BU0/3ec03auOU5jhBNR6PY+zWox4sUuOUY3MAWQL&#xA;Nct1K+/5TPT/APt2/wDJiHMCf99H/M+4O4w/4nP/AJK/7qaA0p0OpaioYEi2vKgHcfunwQxyBJII&#xA;BEq+TZm1GOcYxjKJlGcLAIsbjmOiS6eSPIeqEGh+vWm4/wCMdxnY6uIPaEQdx6fuyPkvZc5Q7DyG&#xA;Jo/vOX9bArajcyxeWtBZTu5lVid9i4zXfkcebPlEhtHjIrbq77+WdRpNFppYz6shwxle+xgm2pyy&#xA;D8w9JjDERsunll7H/R4shh0+OWmnkI9cZY6P+kbtVr88O0MWCMiMU8ecyj0JHjfqCb2nnnzHeXN/&#xA;aSagWSOC5biixoylI2KkMiqwII8c1py6gC5WIyEqNVy7i78aTs8yEcfDLJCUOIcRNWeoJPNJdQ1j&#xA;U5/Kl9LdXUt00N3aemJ5HkC8o7itOR2rTHs/F+ZmMeQyoyHX+jLvtPb2oHZ2OWfBCAnHHLpsfXiG&#xA;9V3970b8q5Gk8nwSNQM0khNOm5GbXDhGIygOUZEPLazWS1Ix5p0JTxwka5bjpzZccucJSuoppbaa&#xA;KGY280iMsVwoVjGxBCuFcFSVO9CKYq8/8yQXNvqYgurlr24i060Sa7dURpWE04LssYVFLdaKAM13&#xA;av8AdfFxdX9HxTzyn/xxh/xmf9S5Lsj+6+KNJ9HxVtQ/46afKL9QznO1f8d+Mf0PUaP+4+bC9J/5&#xA;SWf/AFb3/kxLno+X+7+T5R2b/jo98vuku1//AJR24/4zwfqkznu2P7oe99Y9lv8AGj/UP6GD+Z/+&#xA;OHpP/GW7/wCZObX2W/uZf1nl/wDgl/43j/qfpSLzX/ynmhf8wmjf9Q0OX5fql7z97Vo/7nH/AFI/&#xA;cEVH/wAd/Xv+YLXP+oC6zJz/AN18nvD9EffD/dRZF/zih/x0PMf/ABitf+JS5q5OL29yh8f0PowZ&#xA;B5tIvMUFylsZZLlpYZb/AEv0bcqgWLjfQhuLABm5dfiJ9skEF4fe/mfpnmLQdc022s54ZG0+Z+ch&#xA;TjROJ/ZJzSdm9iT02UTMgXYartCOWHCBTziH/lA7z/tqWv8A1D3GdJ1dV0dr/wDyjvln/mFuP+o2&#xA;bEc1LJ7n/wAndo3/ADH6P/xC3yP8KerILz8z9M8xaDrmm21nPDI2nzPzkKcaJxP7JOc72b2JPTZR&#xA;MyBdpqu0I5YcIFPOIf8AlArz/tq2v/UPcZ0nV1XR2vf8o75Z/wCYW4/6jZsRzUvebPz95bt/Mula&#xA;HLM66izWFuI/TYrzlSIKOQFN+QzlM/ZOaWr8YVwcQPPup3OPW4xh4P4qIeunOhdYhr2C4miVYLlr&#xA;Vw6s0iKjkqOq0cMN/HEK8M/NT/eq3/5jbz/k+ct0v97P/hR+9o7S/wAXxf8AQzD7ip6nLIPzG0iM&#xA;MQjLpxK9j/o8Wa/DggdNOZA4xLHR6/wO81WtzR7Rw4YykMUsecmN7E/vuY+AS/y//wAd/Wv+Ye6/&#xA;5NPjr/8AFMP9Wf3L2J/xp6v/AIZh/wB0gbH/AJQPVP8AmOtP+Tdxm01P/GhD/N+7I832f/xhZP8A&#xA;kp/u8C/V/wDlGPL/APrS/wDExlOl/wAZz/1Z/wC6cvtH/ENH/Xw/7gpxqn/kyNH/ANTT/wDqHizG&#xA;wf4nk/rY/wDp27DW/wDGtg/4VqP+n6B0D/jv61/zD3X/ACafKtf/AIph/qz+5yexP+NPV/8ADMP+&#xA;6QltNLN5H1N5G5N9dtBX29O4zNOlx4ddGOMcMfT/ALnI6gdo59Z2LkyZ5cc6mL25ceDueuflN/yh&#xA;dt/rv/DKpf3mT+vL722P9xg/4TD7mYHFio3drBeWk1pcKWguI2imUMyEo6lWAZSGGx6g1xV5j5kv&#xA;dD066tYoedrZHS7RbKKdZg4RJZqKwlHqVApXlvmB2ljlLFQFm3G1USY7Jn5Z83+WoNKEc1/Gj+q5&#xA;4tyBoQvtkuy4ShjqQrddNEiO6re+cfLLaijrqERUCOrCtNgK9s0PaWlyy1fEIkxuL0WlzQGGid92&#xA;JaZ5i0ZPME0z3SrERd0chqfHDIF7dyc77JOJhV9z5p2fpMsdYJGJEblv8Cu1vzFosuhTxR3SvI00&#xA;LBAGJIAep6e+aLtSBnjAiL3fS/ZzNDFqCZnhHCefwYh5h1Kzm0fTI4nLvHJcmRVViQG9LjXbvQ5s&#xA;vZwjFikJ+k31ed/4IETqNVCWL1gQ6b9Ul8y3UU3nPRrmHnJbxW2krLKqOVVoreFZATT9kqQcuySB&#xA;lL3n72vSQIxQBG4jH7kSl7bjWtalq3pzWmsJE3B6M01lcJGBt+0zADMjNkicdX3PaHU4+CPqHOH+&#xA;6Ce/8406tp+i32vPq0v1FZ4rYQmdWQMVaStKjtXNdJxu2s8JiPCQeb6O03U7DUrYXVhOtxbklRIn&#xA;So6jIOgSXzLHp1rDc3QV0me70qe9mPqGPhHexqpFaoOKxnkF9ieoyQQXyt5YsL+D9LetazR+rp1x&#xA;HHyjccnbjRRt1OZJaw6Gwvx5MurY2swuG1K2kWL035FFgnUtSnQFhj1Xo7WrC/l0Ly9FHazNJBbT&#xA;rMgjclS13KwB27qwOIKlkM8cx/N7StREUhsYr3SnkueDcFWJYPUJanReJrkf4V6se8sWF/B+lvWt&#xA;Zo/V024jj5RuOTtxoo26nJEoDorC/Hku6tjazC4bUraRYvTfkUWCdS1KdAWGN7p6O1qwv5dC8vRR&#xA;2szSQW06zII3JUtdysAdu6sDiFZDcRzH83dK1ARSGxivdKeS54NwVYlg5ktTovE1yP8ACvV9PWWv&#xA;aPfzGG0ukmlCliinegoK/jmOQ22u1S3sp7dTeI8kcUiSKI/U5cwaKaR/Eeu/bxxCvDvzQkV7+OJA&#xA;zSRXt0ZFCsSoaYstaDuMt0+2SRPXER8WnXgywYwNyNRGR91HdDaldQP+YGlXSkm3jWx5yhW4j04I&#xA;w1TTsQa5jYYkaScT9Rlj293Bf3Ow1chLtPDkH0Rx5wT0F+NXzsfNB6HPHHrmrySclSSC5WNirUJa&#xA;NwoG3euV62BlpsURzEZ38nI7IyRh2hqZyNRlPFR6GjvXuQdk4XyVqNuysJ3vLV0j4tUqsc4YgU7c&#xA;hmx1BvXRmPp9O/wn+t0GhgY9jZMRFZDx+nrvLD+o/Jdqkgfy7ocShmkiaT1ECtVatUV2ynT7Z8xP&#xA;IidfEuVrhxaLSwG8oTxcQ7qibv3JrqN3A/n7SrpSTbxrZc5QrcRwgjDVNOxBrlGGJGknE/UZY9vd&#xA;wX9zm6uQl2nhyD6I484J6C/Gr52Pmg9Dnjj1vV5H5KkkFwsbFWoS0bhQNu9cq1sDLTYojmIzv5OR&#xA;2RkjDtDUzkajKeKj0NHevcg7OQL5M1G3YMJ3vLZ0j4tUqsc4YgU7chmx1BB10Zj6fTv8J/rdBoYG&#xA;PY2TERWQ8fp67yw/qPyepfllrukWXlK3gu7lYJg7kxvUGhp2pmLKJ8SZ75yc8H9zhHUYoA+8BnqS&#xA;JIiyIQyOAysOhB3BwIbGKrhirYxVsYVXDFDYxVcMVbGFWxirYxVcMVbxVvCrdcVdirdcVdXFWsVd&#xA;XFWsVawK0cVaOKrTirWKtYFW4q0cVaOKVuBWjiq04q4Yq2MVbGKrhhVLtU8y+XtJNNU1O1smPRZ5&#xA;o42PyViCcIBKLSf/AJWv+XQP/Hetf+Cb+mS4D3I4gnGlebPLGrME0zVrS8kP+64Zo3f/AIAHl+GR&#xA;MSE2m2BW8KrsVbBxVsHFW8VdXCreKurirq4q7FWq4q7ArVcVaxVrFWsVWnArRxVo4qtOKWjirRwK&#xA;tOKtHFWsVXYqkvmzzjoXlXTDqGrTcENVggSjSyuP2Y1qK/PoO+SjElBNPCPM35redvMzvHaTHQ9J&#xA;bZYYGPruv+XKOLb/AOTQfPNlp9AZbnk6XW9s48J4R6pdw/SWJJpVoHMkgM0pJLPISxJPc5soaLGO&#xA;e7z+btvUS5ER937Xon5TeVvLmpvqq6hptvdCMQ+n6iBuPL1K8fCtMxddjjGqFOw7H1WTIZ8UieX6&#xA;WWap+S/kO9BaG0k0+bqstrKykHqPhfmn4Zr7d4MhSh5PzQ/L4rNbXv8Aijy+p+O0uORuUQdeJPJx&#xA;QeBYf5OA4xJsGoA2L0ryT590Dzfp/wBa0yUrPHQXVlJQTQsf5h3U9mGx+e2Y8okOSDbJcCW8VdXF&#xA;W8VbrirHdb8/eW9IdopZzcXK7NBbgOwPgxqFHyrXMTNrsePYmz5O30fYmoziwOGPfLb9rFbn85JO&#xA;RFrpgC9mllJJ+hVH68wJdrnpH7Xd4/ZQfxZPkP2oyLzYh1JtOj1VG1EbtY+urTAEchWIkt9k16dM&#xA;5z83qh6hKdX5kfa4JwYeREbZ9EHESCRuThQHbbc03O2d3jBEQJGzW7zsqs1yXVyTFrFXVxVrFWsV&#xA;axVvj44aVuOS3UnmR+vDSCWMWMXnxNRt3vL/AE2ew9Z/rMKQyRP6LElSjUNGXwPbvX4saW2Vm3gk&#xA;FUP0g1GCltDywPHud18RkSE2o4EtYqtxVoYqlvmXzFp/l3RLrV79qW9steI+07nZEX3ZtsMRZpBN&#xA;PmPV9Y1TzTrMmu6w3KSTa1tRX04Yx9lVB7frO53zeaPSADiLyvbHapBOPGfef0frazaPMOxV6b+S&#xA;n95rHyt/1yZre0f4fi7/ALC5z+H6WTWH/KyU1e2N6dOfRgkYu/trclvQT1GQiqU9blQU6d81e70Z&#xA;4aRl7cmect+wNkHtmTGNB1eWfEWAeafLuoaNqK+cfKh+r6pafvLy1QfBcR9Xqo61H2h36/a6wyQs&#xA;OXpdSQeEvXfJPm/T/Nfl631ez+Hn8FzBWrRTLTnGfvqPEEHMGUaLuAbT7ArdcVbJAFSaAdTil5R5&#xA;3/MS4vJZNO0iQxWSkrLcoaNL48T2T9eaHW9oGR4YfT3973PY/YUcYGTMLn0Hd+37mBZqXqHYqz8a&#xA;D5astZTzHJpsc2pRSiYXDVMnIoITwZuXGqClBtmLptTMTESfQDy9xv73zvtCUcWOU69X69noOkeZ&#xA;dL1T4IHKT94JKBvo7H6M7PT63Hl2HPuecx5oz5JrXMttaxVquKuxVrFVk88VvGXkPyHcn2yQCsU8&#xA;26p5jLRW+mSwWVlOhaXUnJeRKVBjSHieTHkpU9NmrTY5KmNoeLzTNBaxQAG6ljUK91NRGcj9oomw&#xA;+/DStp5vugfjgQjwBIP8cNKmuneZrO4cKSbeY9Ax2Pyb+uClZHb3Yk/dy/aOwPY5EhVO6g9M8l+w&#xA;fwyBDIFDHIpaOKtYq8H/AD28wtqfmW08sxP/AKJpqi5vVB+1NIKqD/qxsKf6xzO0WHjk63tPV+Di&#xA;Mhz5D3/jdgzkrGxUbqDQb9h7Z0XIPADc7pXY6pq89xFHcaY0ELgF5uYPA+mGoVoP2jx2ymGSZO8a&#xA;cvNp8UYkxnZ7q802y9w3pv5Kf3msfK3/AFyZre0f4fi7/sLnP4fpeharc8I/RU/E/wBr2X+3MDHH&#xA;q7jUZKFd7GdbvNRs7L1rC1F5MHAaIllopBq3wq7bGnQZaS4kACd0L5Y1XXNRtZX1jSm0qeN6JGZF&#xA;kDoR1qOhB6jp4E4IknmyyRAOxtK/JFyfJ/5pS6KDw0XzKnq20f7CXK1IA8Nwy/7JfDMfPB2+jy8U&#xA;d3t+YjmN1wqwr80PML2GlJp1u/G4v6iQjqIRs3/BHb781naeo4IcI5y+56T2c0Ay5Tkl9MP91+z9&#xA;TxO81/RrKYw3d3HBIvGqyHjQPXianahod+maOOGchYFva5dXixmpSAKOjdJEWRDVHAZT4g7jKyKc&#xA;gEEWG8CXoWty0iii/mPI/QKfxzB00fUS+U+0Gaoxh37sIsNc82/pe1il0b0rNghlv451DRSeirki&#xA;NuJ4rIeNQ1fbNqYQAsS9Q/X3vOVECwd3p6/mhpOnaR6usOfryfDHDGtXm8CBsB71NM6Xskz1Uare&#xA;PM9GeTtTHihcz6u7vZL5a8wWmv6LbapagrHODyiJqUdTRkPyIzNzYjjkYlzNJqY58YnHqmeVOQ1X&#xA;Ara9KnJBWN6zqka8ppGpGp4xL0qT0HzOWgIedecPOVrotr9cvSZZ5ara2qmhcjsP5VFdz/HCBbEl&#xA;45rf5jeZb+Uk3j2cVapb2pMdB0+0vxt9JydAMbKE07zdqcR5jVrrkx5KwlkKggH7SueLfSMBUPQv&#xA;Kf5iXNw5ttXCyRqwRNQQcKk/zoNtu5WnywEJBezeWtaaQrZzvyqKwSE12H7Nf1ZAhkzS3kE8BR9y&#xA;Nm/gciQqBdSrFT1BplTNZirQxV8q6tetqPmvX9Rckme9lVAeyIxCD6FoM33Z0KBLyXtFl3jH3n9X&#xA;6VPNm807FXYq9F/Ju/sre41WKaeNJnWExxMyh34+oTxUmpp7Zre0N+EO/wCxAQJyPLb9LNp5mmla&#xA;RurHp4DwzFApzZy4jamzKoqxCjxOwwsVF760TrKv0fF+quHhLEzHewP8zdQigXRdatg31jSr6ORX&#xA;AA+H7e1T/NGuV5YbOb2flHGQH0GrAgFTVTuCOhGa13i6uKvFfzIvWuvNl0tapbKkMfsAoZv+GY5z&#xA;XaM+LMfLZ9H9n8PBpInrKz+PgGG3GkaZcytLcWsc0jgBmkUNUKCAN+wDH7zmLHLICgXaz0+ORuUQ&#xA;SiYYYoYUhhQRxRKEjjUUVVUUAAHQAZAkk2WyMREADYBdgZMz1y8hjneSaRUiiAUuTQeP6zkdJp5z&#xA;9MBxSPc+J9t6mJzyJPpjt+PiwzVfOJNYtOWg6fWHH/EVP8fuztOzvZgD1Zz/AJo/Sf1fN5LU9q9M&#xA;fzYxNNLNIZJXaSRvtMxqT9+dbjxxhERiKA7nTykZGybL2D8hdTdrXVdMY/DE8dxEK/78BR/+ILmq&#xA;7VhvGT1Ps3luM4d1F6xmoemariqnfOY7KQjqRT/gtssirxj83NZuoBYWFrII5pXUqTxO7krXiSK0&#xA;APTxyZYl4b5p1y71C8nu5pTMsX7u3qagIDRaffXLOQa2Vfk7+Wuo+c0nvGmOnadbymO51BBzmmbi&#xA;D6MYaqigark7fZ+HKZSpnEM/8xf84y6MNMdvLuoXK6hGpKRXrRyRysN6FkSMoT47j2wDL3pMXjGi&#xA;XF1Z38mmXasjqzRtE+xjkQkMpHbpvl7B7V5D1WabTEBb99ZSBUbvxHxJ93T6MiWQe2aXOHMbr9mZ&#xA;AR9I5ZWUr75aT1/mAP8ADKpMghjgS1gV8kW0Lw3moxP9qO7lRj7q1DnR9nn0F4z2hH72P9X9KKzP&#xA;dA2kbyNxRSzeAFTgtIBKOh0e4feQiMeH2j+G345EzDbHATzVdM0m4h1GGGO1tT/p8N6mquX+sqsQ&#xA;FYAK8eLEeHz7U1mXBIz4uj0un12OOAY9+KqeiPe3bmplb6DT9VMPCHEMyokkmpNT44WLsUMU/MqR&#xA;V8slT1knjVPnu36lyrNydh2aP3nwfRlojRWsMbfaRFVvmABmoekVa4q8M87qy+a9SDCh9Wv0FQR+&#xA;GctrR++l730/sY3pMfuSPMV2bsVSDXPNltZcoLWk910J6oh9z3Ptm30XZUsnqn6Y/aXme1faLHgu&#xA;GL15PsH6ygR5nudalL3spNzufT6L7lB0Gdv2Zjw4o8EIiJ+/4vh/bOkzCZyEmUSflf45qmbV0SW6&#xA;kdcMyrpwiCcRyeYVHLl2AIPTKcnHfpcrB4NfvLvyevf848pfG61KS7VBOsEazGIkpyLtTjyAO4XN&#xA;b2kTwRvm77sAR8WZhfDQ583tmad6l1cVUNUBNkx8CpP35ZFXkX5gQltXWo2eBeLU6EM36iMsYSfO&#xA;WpW0pRo6Ukib4lO32agjLJMA+kf+ca9XsJfI0mko6C/sLiRp4gfiZJiGSSnh1X6Mxsg3bYl6zNNF&#xA;DE80riOKNS8kjGiqqipJJ6ADK2T431vUrbWPzD1LUrJf9Eur2eaEgEVjLMQ5B6cup+eZURs0nm9O&#xA;/LuNhbXshrwZ0UDtVQSf+JDEsg9Z8oeYmvNdk0VLeQJpkEXrXRFIy7Rg8FPcgEVyBZMp1A/vV/1f&#xA;45VJIQeQS0MVfNfnHQ5NP/MnWbAUSO9f69bFtlYTfvG4/JmYfRm57Oy1t3/oed7e0xnASH8J+9dD&#xA;o9sm8hMp9/hH3D+ubQzLzUcAHNGoiIvFFCr1oooPwyLaBTeBLgSDUbEdDirIrG6Fxbhz9sbOPf8A&#xA;tzFnGi5UJWF9yZltpWgXnMEYxLsKtT4Rvt18cgWYq90j0h/PBv4xqkdn9QKfvDFyWVX4ChA5Opq1&#xA;aiu3YtkI8V7t+QYq9N2s1a1OuedfLflyMc1e5W6uwN6RRnk3/CK+U6mVB2PZWLnL4Poiua13jdcU&#xA;PJ/zV0toNbiv1X91eRgM3/FkXwkf8DxzQdqYqnxd73vsxqRLAcfWB+w/ttgl1d21pC01xII416sf&#xA;1DxzAxYZZJcMRZd9qNTjww48h4YsJ1zzbc3nKC0rBbdC3R3HvToPbOm0XZccfqn6pfYHge1faHJn&#xA;uGP0Y/tP6vcx7Nq822rMpDKSGG4I2IOFSARRT3TdYWWkNyQsn7MnQN8/A5stPq72k8t2l2OY3PFy&#xA;6j9Sa5sHnnu/5L6G9h5Zkv5V4y6nJ6i12Pox1VPvJYj2OaDtLLxZK/mva9gacww8R5zP2Dl+l6BX&#xA;Nc7xquKV0sfrWzx92BA+fbJxKHm/nrSpJ7JLtFrJaEiQd+DdT/sSMtYkPAPOehyWt697EtbW5NXI&#xA;/Zc/aB/1uuTiWspXo2p6rp1wLrSpJre9t0Po3FqSkgG2zU+0pPUb1wGKQUy1nzz+ZXmS1+oalqFz&#xA;PakAPCFSCNgP9+emsYfp+1XAIgJst6BoMkMgUD1bub4QF6AeA/ickh7N5Hs7CSxjtbGdLlYnIu5Y&#xA;zVfU2L7/ACIp7UyF2zAel+T/AC/Z2Fxf38CkPfSc5WahJatT8RHKg6AVoO1MgUpndyc52I6DYfRl&#xA;RKQoHIpaGKvMfzv8p3N7ptt5l01OWpaLUzKoqXtq1b5+md6eBbL8GThLTnxCcSDyLANOv4L+0juY&#xA;T8Ljde6sOqn5Z0GOYkLDxWowSxTMSicm0oG91zSLGURXl3HbuSo/eNxHx141J2FeJyEskRzLbDBO&#xA;QuItGo6uiuh5KwBUjoQdxk2oikXp119XnBY/u32f+B+jITjYZwlRZBmM5KG1HULXTrKW8un4QwrV&#xA;j3PgB7k7DATQtsx4zOQiOZTD8kfLl3cz3vnjVIylxqVYdNiavwW4Iq4r/NxCr7Anvmrz5LL1OnxC&#xA;EQA9crlDkOrirC/zfvI7LyTdXbWUl68LoYjFT9yxNPVcn9j9k0Hf6RVm00cw4S5mh189Lk447+Xe&#xA;+VtR1S81Cb1bl+RH2UGyqPYZl6fTQxRqIcfWa7LqZ8WQ39w9yEy9w2nkRBV2CgkAEmm52A3xStin&#xA;gmBMUiyAdShDdfljar8UMg8saxp8WoWkOtmT9FiRRPLEOUix13FKio/Ee/TMrHq5RiRz7nUarsfH&#xA;lyCY9O/q8/2vr7SbrTbrTLWfS5I5dOeNfqrxGqemBRQvypSnbNTIm9+bvYxAAA5IuuBk1XFV0b8T&#xA;v0OEFCA1aw5cplXkrCkqUr9NP15ZEq8v8y+SHUSyWcX1mzkr6ltTkyg9QB+0PxybAh53L5NsY/rC&#xA;W7Pb+tsyVJ40r9kn4h1w2xU7XygsE3qG7dhxKlTuNzWu/fAE2y3QfKcGoWVxYRRyRmUr6l4B1QEc&#xA;o2YigDU3A64ndIelaRpNjpFh6askMECcp7h6Kqqo3Z22A98HJkmnlLzJd6laXMyWYt9LV+Gl3JkL&#xA;SXCgssjvEUX06Mv8xr7d6pFNJkTlaWsVaxVxAYEEVB2IPSmKvDPP35c6l5Wvp9f8uQm40KU877Tk&#xA;qWg/mZRvVO+32flmdptSYlwNZoo5o0efekem6tZahF6ltICf2ozs6/MZuceWMuTyuo0s8RqQ+PRq&#xA;60XS7uZpbq2SdmADCSrKQoIFUPw9GPbvhOOJ5hrjmnEUDSKiiihiSGJBHFGoSNFFFVVFAAB2AyQF&#xA;MCSTZX4oR3+JNO07Ty9/MIzFsi9Xcdgq9Scxc1RNubpcUsuwC7yp5M1j8wNRg1XWInsfKVu3O2tT&#xA;UPdEf8anu30L3Oa3Nnt6XSaMYx5veIYooYkhhRY4o1CRxqAFVVFAAB0AGYTnqlcVdXFVk8ENxDJB&#xA;PGssMqlJYnAZWVhQqwOxBGFD53/Mz8jtR0qebVfLUT3mlMS8ligLT2/iFG5kQe3xDv45kQyXza5R&#xA;eSEEEgihHUZawU5oIpk4SryUENxPSoNRjSVtvaW1vX0YwhYAMR1PHpU98QFtVxQ9Q/Lb8lNW1+aH&#xA;Udcjew0QEOEYFJ7gdeKKd0Q/zn6PEVzyVyZiL6RsrK0sbSKzs4lgtYFEcMMY4qqrsAAMxiWxWwJd&#xA;XFWsVVI5gNm6eOSBQhrnSopfjhPBj2/ZP9MsElSe98tR3BrcWcc5/n4qT9/2sNhFIWLyhp6vVdNj&#xA;r/lICP8AhtsNrScW2iOFCvxijHRFp/DbBxJR0trYLayWskSSwyqUlhcB1dWFCHBqCCOxysyVRRI4&#xA;40iiRY4o1CRRIAqqqiiqqjYADoMgSl2BWsVaxVvFW8Vef+bPyX8sa3M17YM+i6m1T9YtQPTZj3eK&#xA;qj/gSvvlsMxi1zxiQosIvfyw/NPTWpaNaazDX4SHEUlP8oSekAf9kczYa8jm63L2RilyFe5Bf4b/&#xA;ADRpQ+WWr4ieKn/E8t/lD3OP/IkO8/YirT8tfzX1JuM0dpo8R6tJIsjgfKMzb/dlc9eTyb8fZGKP&#xA;Oz7/ANjNvK35H+XNMnS+1mV9d1FSGDXApApG+0VW5f7Mke2YU8xk7OGKMRQD0hQFAUCgGwA6AZU2&#xA;LsVdXFW64q7FXVxVi/mb8s/JXmR2m1LTkF225vICYZifFmSgf/ZA5OMyGJiCwS9/5xq0B3JstYuo&#xA;Er9mVI5j96+lkxmKOBbaf8406Gr1u9ZuZo/5Yo44jT5t6v6sPjFHAzjy1+VXkfy9Ik9lpyzXke63&#xA;d0fWkBH7S8vgU+6qMrMyWQiGW1yDJ2KurirVcVdirVcVbV2XoaY2q8XLdwDh4kON0f5cPEqxriRu&#xA;9B7YCUqRORVrFWsVaOKrQcVXYq3irdcVdXFW8VbrhVvFW64q7FW64q6uKt4q6uKurirq4q6uKuri&#xA;rq4q7FWq4q6uKtYq6uKtYq1XFWsCurirWKtYq1XFWicVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:4e723c56-e4fc-6b41-9f8e-bf2ce363649e</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:4e723c56-e4fc-6b41-9f8e-bf2ce363649e</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:c67eac80-ca57-0048-8174-ef6b0e71d444</stRef:instanceID>
            <stRef:documentID>xmp.did:c67eac80-ca57-0048-8174-ef6b0e71d444</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a760a544-768d-df43-b52d-5bd32af759e0</stEvt:instanceID>
                  <stEvt:when>2015-02-15T00:50:42+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cba6acc9-5afe-cf4d-b981-fc24f8f5a85c</stEvt:instanceID>
                  <stEvt:when>2015-02-14T19:00:43+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:078e5b99-de3a-fa41-9b33-1ed36e82d79a</stEvt:instanceID>
                  <stEvt:when>2015-02-14T19:03:40+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c67eac80-ca57-0048-8174-ef6b0e71d444</stEvt:instanceID>
                  <stEvt:when>2015-04-15T00:55:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4e723c56-e4fc-6b41-9f8e-bf2ce363649e</stEvt:instanceID>
                  <stEvt:when>2015-04-15T01:01:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[363.876 0 0 363.876 250 250 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.901961 .901961 .862745 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[363.876 0 0 363.876 250 250 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2oqrVc]nrVc]nrVZTkr;?Kjr;?Kiqtp9fqtp9fqtg0cqYL'bqYL'bq>'j^q>'j^q>'g\
q"XXZq"XXZp\4FVp\4FVp\4CTp@e4Rp@e4Rp@\+Op%A"Np%A"Mo^qeJo^qeJo^h\GoCMSFoCMSEo()AB
o()ABo()>@naZ/>naZ/>nF5r:nF5r:nF5o8n*f`6n*f`6mdBN2mdBN2mdBN1mHs<.mHs<.mHj3+m-O**
m-O*)lg*m&lg*m&lg!d#lK[["lK[["l07Hsl07Hsl07Eqkih6okih6okND$kkND$kkND!ik2tggk2tgg
~>
<~s8N#srr2orrr2oqrVc]nrVc]nrVZTkr;?Kjr;?Kiqtp9fqtp9fqtg0cqYL'bqYL'bq>'j^q>'j^q>'g\
q"XXZq"XXZp\4FVp\4FVp\4CTp@e4Rp@e4Rp@\+Op%A"Np%A"Mo^qeJo^qeJo^h\GoCMSFoCMSEo()AB
o()ABo()>@naZ/>naZ/>nF5r:nF5r:nF5o8n*f`6n*f`6mdBN2mdBN2mdBN1mHs<.mHs<.mHj3+m-O**
m-O*)lg*m&lg*m&lg!d#lK[["lK[["l07Hsl07Hsl07Eqkih6okih6okND$kkND$kkND!ik2tggk2tgg
~>
<~s8N#srr2orrVc]nrVc]mr;?Kjr;?Hhqtp9fqtp6dqYL'bqYBs_q>'j^q"XXZq"XXZp\4FVp\4FUp@e4R
p@e1Pp%A"Np%@tLo^qeJo^h\GoCMSFo()ABo()ABnaZ/>naZ/=nF5r:nF5o8n*f`6n*f]4mdBN2md9E/
mHs<.m-O**m-O*)lg*m&lg*m%lK[["lK[Wul07Hsl0.?pkih6oki_-lkND$kk2tggk2tgfjlPUcjlPUb
jQ,C_jQ,@]j5]1[j5T(Xio8tWio/kTiSibSi8EPOi8EPNhr!>Khr!>JhVR,GhVR)Eh;-oCh;$f@gt^]?
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
161 83.5318 mo
23 83.5318 li
22.9312 83.5318 22.875 83.4757 22.875 83.4068 cv
22.875 83.338 22.9312 83.2818 23 83.2818 cv
161 83.2818 li
161.069 83.2818 161.125 83.338 161.125 83.4068 cv
161.125 83.4757 161.069 83.5318 161 83.5318 cv
cp
.196078 .764706 .745098 rgb
f
161 71.1842 mo
23 71.1842 li
22.9312 71.1842 22.875 71.128 22.875 71.0592 cv
22.875 70.9903 22.9312 70.9342 23 70.9342 cv
161 70.9342 li
161.069 70.9342 161.125 70.9903 161.125 71.0592 cv
161.125 71.128 161.069 71.1842 161 71.1842 cv
cp
f
161 58.7281 mo
23 58.7281 li
22.9312 58.7281 22.875 58.672 22.875 58.6031 cv
22.875 58.5343 22.9312 58.4781 23 58.4781 cv
161 58.4781 li
161.069 58.4781 161.125 58.5343 161.125 58.6031 cv
161.125 58.672 161.069 58.7281 161 58.7281 cv
cp
f
161 46.2281 mo
23 46.2281 li
22.9312 46.2281 22.875 46.172 22.875 46.1031 cv
22.875 46.0343 22.9312 45.9781 23 45.9781 cv
161 45.9781 li
161.069 45.9781 161.125 46.0343 161.125 46.1031 cv
161.125 46.172 161.069 46.2281 161 46.2281 cv
cp
f
161 33.6842 mo
23 33.6842 li
22.9312 33.6842 22.875 33.628 22.875 33.5592 cv
22.875 33.4903 22.9312 33.4342 23 33.4342 cv
161 33.4342 li
161.069 33.4342 161.125 33.4903 161.125 33.5592 cv
161.125 33.628 161.069 33.6842 161 33.6842 cv
cp
f
17.1657 83.3313 mo
17.8888 83.3313 17.8927 81.1888 17.1696 81.1888 cv
16.4568 81.1888 16.4434 83.3313 17.1657 83.3313 cv
cp
18.049 82.2322 mo
18.049 84.0663 16.3029 84.0915 16.2863 82.2679 cv
16.2863 80.4922 18.049 80.411 18.049 82.2322 cv
cp
14.2702 83.5594 mo
14.2702 83.3436 li
14.6705 82.9546 15.5085 82.2584 15.5139 81.7166 cv
15.5139 81.131 14.8768 81.0685 14.4465 81.4285 cv
14.3342 81.1805 li
14.9032 80.7009 15.8654 80.8629 15.8654 81.6727 cv
15.8654 82.2737 15.2132 82.8427 14.7624 83.2596 cv
14.7624 83.2674 li
15.9294 83.2674 li
15.9294 83.5594 li
14.2702 83.5594 li
cp
.372549 .403922 .447059 rgb
f
17.1657 70.8313 mo
17.8888 70.8313 17.8927 68.6888 17.1696 68.6888 cv
16.4568 68.6888 16.4434 70.8313 17.1657 70.8313 cv
cp
18.049 69.7322 mo
18.049 71.5663 16.3029 71.5915 16.2863 69.7679 cv
16.2863 67.9922 18.049 67.911 18.049 69.7322 cv
cp
15.3576 70.076 mo
15.3576 69.7305 15.3517 69.1158 15.3698 68.8006 cv
15.3576 68.8006 li
15.1267 69.2412 14.8287 69.62 14.5065 70.0682 cv
14.5065 70.076 li
15.3576 70.076 li
cp
15.3576 71.0594 mo
15.3576 70.3519 li
14.1506 70.3519 li
14.1506 70.1199 li
15.3098 68.4607 li
15.6896 68.4607 li
15.6896 70.076 li
16.0534 70.076 li
16.0534 70.3519 li
15.6896 70.3519 li
15.6896 71.0594 li
15.3576 71.0594 li
cp
f
16.6379 57.2723 mo
16.6379 58.682 17.6975 58.7303 17.6975 57.2479 cv
17.6975 55.796 16.6379 55.8316 16.6379 57.2723 cv
cp
18.049 57.2322 mo
18.049 59.0663 16.3029 59.0915 16.2863 57.2679 cv
16.2863 55.4922 18.049 55.411 18.049 57.2322 cv
cp
15.1179 57.1121 mo
14.3367 57.1121 14.4648 58.3313 15.1462 58.3313 cv
15.7871 58.3313 15.8715 57.1121 15.1179 57.1121 cv
cp
15.7536 56.2088 mo
15.1661 56.1768 14.6704 56.5481 14.5861 57.1482 cv
14.5983 57.1482 li
15.008 56.6064 16.0095 56.7832 16.0095 57.6878 cv
16.0095 58.1634 15.6857 58.6033 15.1462 58.6033 cv
13.7978 58.6033 13.843 55.9207 15.7536 55.9207 cv
15.7536 56.2088 li
cp
f
16.6379 44.7723 mo
16.6379 46.182 17.6975 46.2303 17.6975 44.7479 cv
17.6975 43.296 16.6379 43.3316 16.6379 44.7723 cv
cp
18.049 44.7322 mo
18.049 46.5663 16.3029 46.5915 16.2863 44.7679 cv
16.2863 42.9922 18.049 42.911 18.049 44.7322 cv
cp
15.1657 44.5643 mo
15.766 44.3602 15.6342 43.6688 15.1218 43.6688 cv
14.5989 43.6688 14.4069 44.3616 15.1657 44.5643 cv
cp
15.0661 44.8162 mo
14.3768 45.0157 14.4893 45.8475 15.1179 45.8475 cv
15.7283 45.8475 15.9296 45.0609 15.0661 44.8162 cv
cp
14.7541 44.7039 mo
14.7502 44.6922 li
14.4621 44.5564 14.3386 44.3323 14.3386 44.1082 cv
14.3386 43.2083 15.8976 43.1827 15.8976 44.0564 cv
15.8976 44.2762 15.7897 44.512 15.4699 44.6644 cv
15.4699 44.6761 li
16.3437 45.0214 16.0659 46.1033 15.11 46.1033 cv
14.1266 46.1033 13.9227 45.0581 14.7541 44.7039 cv
cp
f
17.1657 33.3313 mo
17.8888 33.3313 17.8927 31.1888 17.1696 31.1888 cv
16.4568 31.1888 16.4434 33.3313 17.1657 33.3313 cv
cp
17.1457 33.6033 mo
15.9968 33.6033 15.9594 30.9168 17.1896 30.9168 cv
18.3653 30.9168 18.3677 33.6033 17.1457 33.6033 cv
cp
15.1135 33.3313 mo
15.8366 33.3313 15.8405 31.1888 15.1174 31.1888 cv
14.4045 31.1888 14.3912 33.3313 15.1135 33.3313 cv
cp
15.0934 33.6033 mo
13.9445 33.6033 13.9071 30.9168 15.1374 30.9168 cv
16.313 30.9168 16.3154 33.6033 15.0934 33.6033 cv
cp
12.9816 31.2889 mo
12.9738 31.2889 li
12.5222 31.5325 li
12.4543 31.2645 li
13.0217 30.9607 li
13.3215 30.9607 li
13.3215 33.5594 li
12.9816 33.5594 li
12.9816 31.2889 li
cp
f
160.549 94.6031 mo
23.0488 94.6031 li
22.7725 94.6031 22.5488 94.3795 22.5488 94.1031 cv
22.5488 93.8268 22.7725 93.6031 23.0488 93.6031 cv
160.549 93.6031 li
160.825 93.6031 161.049 93.8268 161.049 94.1031 cv
161.049 94.3795 160.825 94.6031 160.549 94.6031 cv
cp
.227451 .262745 .321569 rgb
f
148.174 93.6031 mo
147.924 93.6031 li
147.924 35.6031 li
148.174 35.6031 li
148.174 93.6031 li
cp
1 .764706 .286275 rgb
f
17.9284 101.332 mo
18.6515 101.332 18.6554 99.1883 17.9323 99.1883 cv
17.2195 99.1883 17.2061 101.332 17.9284 101.332 cv
cp
17.9084 101.603 mo
16.7591 101.603 16.7225 98.9168 17.9523 98.9168 cv
19.1281 98.9168 19.1304 101.603 17.9084 101.603 cv
cp
.372549 .403922 .447059 rgb
f
36.2087 101.332 mo
36.9318 101.332 36.9357 99.1883 36.2126 99.1883 cv
35.4998 99.1883 35.4864 101.332 36.2087 101.332 cv
cp
37.092 100.232 mo
37.092 102.065 35.3459 102.093 35.3293 100.268 cv
35.3293 98.4888 37.092 98.4129 37.092 100.232 cv
cp
34.0768 99.2889 mo
34.069 99.2889 li
33.6174 99.532 li
33.549 99.2645 li
34.1169 98.9607 li
34.4167 98.9607 li
34.4167 101.559 li
34.0768 101.559 li
34.0768 99.2889 li
cp
f
48.9445 101.332 mo
49.6676 101.332 49.6715 99.1883 48.9484 99.1883 cv
48.2356 99.1883 48.2222 101.332 48.9445 101.332 cv
cp
48.9245 101.603 mo
47.7752 101.603 47.7386 98.9168 48.9684 98.9168 cv
50.1442 98.9168 50.1465 101.603 48.9245 101.603 cv
cp
46.049 101.559 mo
46.049 101.344 li
46.4496 100.955 47.2873 100.258 47.2927 99.7166 cv
47.2927 99.1312 46.6585 99.0678 46.2253 99.4285 cv
46.113 99.1805 li
46.6842 98.7006 47.6442 98.8642 47.6442 99.6727 cv
47.6442 100.275 46.9906 100.843 46.5407 101.26 cv
46.5407 101.267 li
47.7082 101.267 li
47.7082 101.559 li
46.049 101.559 li
cp
f
61.4562 101.332 mo
62.1793 101.332 62.1833 99.1883 61.4601 99.1883 cv
60.7473 99.1883 60.734 101.332 61.4562 101.332 cv
cp
61.4362 101.603 mo
60.287 101.603 60.2503 98.9168 61.4802 98.9168 cv
62.6559 98.9168 62.6582 101.603 61.4362 101.603 cv
cp
58.6447 101.156 mo
59.7244 101.841 60.4865 100.296 58.9406 100.296 cv
58.9406 100.032 li
60.2973 100.032 59.6601 98.7145 58.7409 99.3729 cv
58.6491 99.117 li
59.735 98.3123 60.6771 99.7541 59.5925 100.148 cv
59.5925 100.156 li
60.4498 100.329 60.3863 101.603 59.2248 101.603 cv
58.9328 101.603 58.6769 101.511 58.549 101.427 cv
58.6447 101.156 li
cp
f
74.0642 101.332 mo
74.7873 101.332 74.7912 99.1883 74.0681 99.1883 cv
73.3552 99.1883 73.3419 101.332 74.0642 101.332 cv
cp
74.0441 101.603 mo
72.8949 101.603 72.8582 98.9168 74.0881 98.9168 cv
75.2638 98.9168 75.2661 101.603 74.0441 101.603 cv
cp
72.256 100.576 mo
72.256 100.23 72.2501 99.6158 72.2683 99.3006 cv
72.256 99.3006 li
72.028 99.737 71.7245 100.123 71.4045 100.568 cv
71.4045 100.576 li
72.256 100.576 li
cp
72.256 101.559 mo
72.256 100.851 li
71.049 100.851 li
71.049 100.62 li
72.2082 98.9607 li
72.5881 98.9607 li
72.5881 100.576 li
72.9518 100.576 li
72.9518 100.851 li
72.5881 100.851 li
72.5881 101.559 li
72.256 101.559 li
cp
f
86.4562 101.332 mo
87.1793 101.332 87.1833 99.1883 86.4601 99.1883 cv
85.7473 99.1883 85.734 101.332 86.4562 101.332 cv
cp
86.4362 101.603 mo
85.287 101.603 85.2503 98.9168 86.4802 98.9168 cv
87.6559 98.9168 87.6582 101.603 86.4362 101.603 cv
cp
85.112 99.2566 mo
84.1208 99.2566 li
84.0207 99.9246 li
84.6149 99.8377 85.1642 100.115 85.1642 100.716 cv
85.1642 101.53 84.1745 101.847 83.549 101.443 cv
83.6369 101.176 li
84.8129 101.878 85.5339 99.9834 83.7009 100.208 cv
83.8688 98.9607 li
85.112 98.9607 li
85.112 99.2566 li
cp
f
98.9885 101.332 mo
99.7116 101.332 99.7155 99.1883 98.9924 99.1883 cv
98.2795 99.1883 98.2662 101.332 98.9885 101.332 cv
cp
99.8718 100.232 mo
99.8718 102.065 98.1257 102.093 98.1091 100.268 cv
98.1091 98.4888 99.8718 98.4129 99.8718 100.232 cv
cp
97.4763 100.708 mo
97.4763 99.9905 96.6863 99.9418 96.4372 100.432 cv
96.2778 100.694 96.4785 101.332 96.9684 101.332 cv
97.2726 101.332 97.4763 101.08 97.4763 100.708 cv
cp
97.5764 99.2088 mo
96.9913 99.1769 96.4935 99.5457 96.4089 100.148 cv
96.4211 100.148 li
96.8307 99.6064 97.8322 99.7837 97.8322 100.688 cv
97.8322 101.164 97.5085 101.603 96.9684 101.603 cv
95.6187 101.603 95.6723 98.9207 97.5764 98.9207 cv
97.5764 99.2088 li
cp
f
111.396 101.332 mo
112.119 101.332 112.123 99.1883 111.4 99.1883 cv
110.687 99.1883 110.674 101.332 111.396 101.332 cv
cp
111.376 101.603 mo
110.227 101.603 110.19 98.9168 111.42 98.9168 cv
112.596 98.9168 112.598 101.603 111.376 101.603 cv
cp
110.188 98.9607 mo
110.188 99.1932 li
109.057 101.559 li
108.693 101.559 li
109.82 99.2605 li
109.82 99.2527 li
108.549 99.2527 li
108.549 98.9607 li
110.188 98.9607 li
cp
f
123.976 101.332 mo
124.699 101.332 124.703 99.1883 123.98 99.1883 cv
123.267 99.1883 123.254 101.332 123.976 101.332 cv
cp
124.86 100.232 mo
124.86 102.065 123.113 102.093 123.097 100.268 cv
123.097 98.4888 124.86 98.4129 124.86 100.232 cv
cp
121.976 100.064 mo
122.577 99.8602 122.445 99.1688 121.932 99.1688 cv
121.409 99.1688 121.217 99.8616 121.976 100.064 cv
cp
122.448 100.884 mo
122.448 100.24 121.409 100.138 121.409 100.851 cv
121.379 101.496 122.448 101.518 122.448 100.884 cv
cp
121.565 100.204 mo
121.561 100.192 li
120.85 99.8574 121.11 98.9168 121.952 98.9168 cv
122.796 98.9168 122.975 99.8351 122.28 100.164 cv
122.28 100.177 li
123.154 100.522 122.876 101.603 121.921 101.603 cv
120.934 101.603 120.739 100.554 121.565 100.204 cv
cp
f
136.46 101.332 mo
137.183 101.332 137.187 99.1883 136.464 99.1883 cv
135.751 99.1883 135.738 101.332 136.46 101.332 cv
cp
137.343 100.232 mo
137.343 102.065 135.597 102.093 135.581 100.268 cv
135.581 98.4888 137.343 98.4129 137.343 100.232 cv
cp
134.396 100.368 mo
135.24 100.368 135.011 99.1844 134.408 99.1844 cv
133.767 99.1844 133.688 100.368 134.396 100.368 cv
cp
133.769 101.311 mo
134.341 101.37 134.837 101.022 134.94 100.356 cv
134.928 100.356 li
134.784 100.532 134.576 100.635 134.317 100.635 cv
133.227 100.635 133.328 98.9168 134.436 98.9168 cv
135.716 98.9168 135.666 101.688 133.769 101.599 cv
133.769 101.311 li
cp
f
150.761 101.332 mo
151.484 101.332 151.488 99.1883 150.765 99.1883 cv
150.052 99.1883 150.039 101.332 150.761 101.332 cv
cp
151.644 100.232 mo
151.644 102.065 149.898 102.093 149.882 100.268 cv
149.882 98.4888 151.644 98.4129 151.644 100.232 cv
cp
148.709 101.332 mo
149.432 101.332 149.436 99.1883 148.713 99.1883 cv
148 99.1883 147.986 101.332 148.709 101.332 cv
cp
148.689 101.603 mo
147.539 101.603 147.503 98.9168 148.733 98.9168 cv
149.908 98.9168 149.911 101.603 148.689 101.603 cv
cp
146.577 99.2889 mo
146.569 99.2889 li
146.117 99.532 li
146.049 99.2645 li
146.617 98.9607 li
146.917 98.9607 li
146.917 101.559 li
146.577 101.559 li
146.577 99.2889 li
cp
f
35.6738 93.6031 mo
35.4238 93.6031 li
35.4238 87.8536 li
35.6738 87.8536 li
35.6738 93.6031 li
cp
1 .764706 .286275 rgb
f
48.1738 93.6031 mo
47.9238 93.6031 li
47.9238 71.6031 li
48.1738 71.6031 li
48.1738 93.6031 li
cp
f
60.6738 93.6031 mo
60.4238 93.6031 li
60.4238 60.6031 li
60.6738 60.6031 li
60.6738 93.6031 li
cp
f
73.1738 93.6031 mo
72.9238 93.6031 li
72.9238 59.6031 li
73.1738 59.6031 li
73.1738 93.6031 li
cp
f
85.6738 93.6031 mo
85.4238 93.6031 li
85.4238 48.1031 li
85.6738 48.1031 li
85.6738 93.6031 li
cp
f
98.1738 93.6031 mo
97.9238 93.6031 li
97.9238 53.8531 li
98.1738 53.8531 li
98.1738 93.6031 li
cp
f
110.674 93.6031 mo
110.424 93.6031 li
110.424 41.6031 li
110.674 41.6031 li
110.674 93.6031 li
cp
f
123.174 93.6031 mo
122.924 93.6031 li
122.924 55.6031 li
123.174 55.6031 li
123.174 93.6031 li
cp
f
135.674 93.6031 mo
135.424 93.6031 li
135.424 43.1031 li
135.674 43.1031 li
135.674 93.6031 li
cp
f
23.0488 94.6031 mo
22.7725 94.6031 22.5488 94.3795 22.5488 94.1031 cv
22.5488 19.6031 li
22.5488 19.3268 22.7725 19.1031 23.0488 19.1031 cv
23.3252 19.1031 23.5488 19.3268 23.5488 19.6031 cv
23.5488 94.1031 li
23.5488 94.3795 23.3252 94.6031 23.0488 94.6031 cv
cp
.227451 .262745 .321569 rgb
f
23.0493 94.4781 mo
22.9116 94.4781 22.7793 94.4024 22.7134 94.2706 cv
22.6206 94.0855 22.6958 93.8604 22.8813 93.7677 cv
35.3042 87.5563 li
47.7515 71.3746 li
60.3945 60.2394 li
72.8901 59.2398 li
85.4785 47.6583 li
97.9707 53.4044 li
110.567 41.0602 li
123.064 55.0572 li
135.284 42.838 li
147.856 35.2813 li
148.034 35.1754 148.265 35.233 148.371 35.4103 cv
148.477 35.588 148.419 35.818 148.242 35.9249 cv
135.742 43.4249 li
123.033 56.149 li
110.531 42.1461 li
98.127 54.3019 li
85.6191 48.5479 li
73.2075 59.9664 li
60.7031 60.9669 li
48.2964 71.8849 li
35.7163 88.1886 li
23.2163 94.4386 li
23.1626 94.4654 23.1055 94.4781 23.0493 94.4781 cv
cp
.635294 .2 .560784 rgb
f
197.096 94.2281 mo
197.027 94.2281 196.971 94.172 196.971 94.1031 cv
196.971 19.6031 li
196.971 19.5343 197.027 19.4781 197.096 19.4781 cv
197.165 19.4781 197.221 19.5343 197.221 19.6031 cv
197.221 94.1031 li
197.221 94.172 197.165 94.2281 197.096 94.2281 cv
cp
.196078 .764706 .745098 rgb
f
322.097 83.5318 mo
184.596 83.5318 li
184.527 83.5318 184.471 83.4757 184.471 83.4068 cv
184.471 83.338 184.527 83.2818 184.596 83.2818 cv
322.097 83.2818 li
322.166 83.2818 322.222 83.338 322.222 83.4068 cv
322.222 83.4757 322.166 83.5318 322.097 83.5318 cv
cp
f
322.097 71.1842 mo
184.596 71.1842 li
184.527 71.1842 184.471 71.128 184.471 71.0592 cv
184.471 70.9903 184.527 70.9342 184.596 70.9342 cv
322.097 70.9342 li
322.166 70.9342 322.222 70.9903 322.222 71.0592 cv
322.222 71.128 322.166 71.1842 322.097 71.1842 cv
cp
f
322.097 58.7281 mo
184.596 58.7281 li
184.527 58.7281 184.471 58.672 184.471 58.6031 cv
184.471 58.5343 184.527 58.4781 184.596 58.4781 cv
322.097 58.4781 li
322.166 58.4781 322.222 58.5343 322.222 58.6031 cv
322.222 58.672 322.166 58.7281 322.097 58.7281 cv
cp
f
322.097 46.2281 mo
184.596 46.2281 li
184.527 46.2281 184.471 46.172 184.471 46.1031 cv
184.471 46.0343 184.527 45.9781 184.596 45.9781 cv
322.097 45.9781 li
322.166 45.9781 322.222 46.0343 322.222 46.1031 cv
322.222 46.172 322.166 46.2281 322.097 46.2281 cv
cp
f
322.097 33.6842 mo
184.596 33.6842 li
184.527 33.6842 184.471 33.628 184.471 33.5592 cv
184.471 33.4903 184.527 33.4342 184.596 33.4342 cv
322.097 33.4342 li
322.166 33.4342 322.222 33.4903 322.222 33.5592 cv
322.222 33.628 322.166 33.6842 322.097 33.6842 cv
cp
f
209.596 94.2281 mo
209.527 94.2281 209.471 94.172 209.471 94.1031 cv
209.471 19.6031 li
209.471 19.5343 209.527 19.4781 209.596 19.4781 cv
209.665 19.4781 209.721 19.5343 209.721 19.6031 cv
209.721 94.1031 li
209.721 94.172 209.665 94.2281 209.596 94.2281 cv
cp
f
222.096 94.2281 mo
222.027 94.2281 221.971 94.172 221.971 94.1031 cv
221.971 19.6031 li
221.971 19.5343 222.027 19.4781 222.096 19.4781 cv
222.165 19.4781 222.221 19.5343 222.221 19.6031 cv
222.221 94.1031 li
222.221 94.172 222.165 94.2281 222.096 94.2281 cv
cp
f
234.596 94.2281 mo
234.527 94.2281 234.471 94.172 234.471 94.1031 cv
234.471 19.6031 li
234.471 19.5343 234.527 19.4781 234.596 19.4781 cv
234.665 19.4781 234.721 19.5343 234.721 19.6031 cv
234.721 94.1031 li
234.721 94.172 234.665 94.2281 234.596 94.2281 cv
cp
f
247.096 94.2281 mo
247.027 94.2281 246.971 94.172 246.971 94.1031 cv
246.971 19.6031 li
246.971 19.5343 247.027 19.4781 247.096 19.4781 cv
247.165 19.4781 247.221 19.5343 247.221 19.6031 cv
247.221 94.1031 li
247.221 94.172 247.165 94.2281 247.096 94.2281 cv
cp
f
259.597 94.2281 mo
259.527 94.2281 259.472 94.172 259.472 94.1031 cv
259.472 19.6031 li
259.472 19.5343 259.527 19.4781 259.597 19.4781 cv
259.666 19.4781 259.722 19.5343 259.722 19.6031 cv
259.722 94.1031 li
259.722 94.172 259.666 94.2281 259.597 94.2281 cv
cp
f
272.097 94.2281 mo
272.027 94.2281 271.972 94.172 271.972 94.1031 cv
271.972 19.6031 li
271.972 19.5343 272.027 19.4781 272.097 19.4781 cv
272.166 19.4781 272.222 19.5343 272.222 19.6031 cv
272.222 94.1031 li
272.222 94.172 272.166 94.2281 272.097 94.2281 cv
cp
f
284.597 94.2281 mo
284.527 94.2281 284.472 94.172 284.472 94.1031 cv
284.472 19.6031 li
284.472 19.5343 284.527 19.4781 284.597 19.4781 cv
284.666 19.4781 284.722 19.5343 284.722 19.6031 cv
284.722 94.1031 li
284.722 94.172 284.666 94.2281 284.597 94.2281 cv
cp
f
297.097 94.2281 mo
297.027 94.2281 296.972 94.172 296.972 94.1031 cv
296.972 19.6031 li
296.972 19.5343 297.027 19.4781 297.097 19.4781 cv
297.166 19.4781 297.222 19.5343 297.222 19.6031 cv
297.222 94.1031 li
297.222 94.172 297.166 94.2281 297.097 94.2281 cv
cp
f
309.597 94.2281 mo
309.527 94.2281 309.472 94.172 309.472 94.1031 cv
309.472 19.6031 li
309.472 19.5343 309.527 19.4781 309.597 19.4781 cv
309.666 19.4781 309.722 19.5343 309.722 19.6031 cv
309.722 94.1031 li
309.722 94.172 309.666 94.2281 309.597 94.2281 cv
cp
f
322.097 94.2281 mo
322.027 94.2281 321.972 94.172 321.972 94.1031 cv
321.972 19.6031 li
321.972 19.5343 322.027 19.4781 322.097 19.4781 cv
322.166 19.4781 322.222 19.5343 322.222 19.6031 cv
322.222 94.1031 li
322.222 94.172 322.166 94.2281 322.097 94.2281 cv
cp
.0156863 .552941 .678431 rgb
f
322.097 19.7281 mo
184.596 19.7281 li
184.527 19.7281 184.471 19.672 184.471 19.6031 cv
184.471 19.5343 184.527 19.4781 184.596 19.4781 cv
322.097 19.4781 li
322.166 19.4781 322.222 19.5343 322.222 19.6031 cv
322.222 19.672 322.166 19.7281 322.097 19.7281 cv
cp
.196078 .764706 .745098 rgb
f
178.713 83.3313 mo
179.436 83.3313 179.44 81.1888 178.717 81.1888 cv
178.004 81.1888 177.991 83.3313 178.713 83.3313 cv
cp
178.693 83.6033 mo
177.544 83.6033 177.507 80.9168 178.737 80.9168 cv
179.913 80.9168 179.915 83.6033 178.693 83.6033 cv
cp
175.818 83.5594 mo
175.818 83.3436 li
176.218 82.9546 177.056 82.2584 177.061 81.7166 cv
177.061 81.131 176.424 81.0685 175.994 81.4285 cv
175.882 81.1805 li
176.451 80.7009 177.413 80.8629 177.413 81.6727 cv
177.413 82.2737 176.761 82.8427 176.31 83.2596 cv
176.31 83.2674 li
177.477 83.2674 li
177.477 83.5594 li
175.818 83.5594 li
cp
.380392 .411765 .454902 rgb
f
178.713 70.8313 mo
179.436 70.8313 179.44 68.6888 178.717 68.6888 cv
178.004 68.6888 177.991 70.8313 178.713 70.8313 cv
cp
178.693 71.1033 mo
177.544 71.1033 177.507 68.4168 178.737 68.4168 cv
179.913 68.4168 179.915 71.1033 178.693 71.1033 cv
cp
176.905 70.076 mo
176.905 69.7305 176.899 69.1158 176.917 68.8006 cv
176.905 68.8006 li
176.674 69.2412 176.376 69.62 176.054 70.0682 cv
176.054 70.076 li
176.905 70.076 li
cp
176.905 71.0594 mo
176.905 70.3519 li
175.698 70.3519 li
175.698 70.1199 li
176.857 68.4607 li
177.237 68.4607 li
177.237 70.076 li
177.601 70.076 li
177.601 70.3519 li
177.237 70.3519 li
177.237 71.0594 li
176.905 71.0594 li
cp
f
178.713 58.3313 mo
179.436 58.3313 179.44 56.1888 178.717 56.1888 cv
178.004 56.1888 177.991 58.3313 178.713 58.3313 cv
cp
178.693 58.6033 mo
177.544 58.6033 177.507 55.9168 178.737 55.9168 cv
179.913 55.9168 179.915 58.6033 178.693 58.6033 cv
cp
176.665 57.1121 mo
175.884 57.1121 176.012 58.3313 176.693 58.3313 cv
177.334 58.3313 177.419 57.1121 176.665 57.1121 cv
cp
177.301 56.2088 mo
176.714 56.1768 176.218 56.5481 176.133 57.1482 cv
176.146 57.1482 li
176.555 56.6064 177.557 56.7832 177.557 57.6878 cv
177.557 58.1634 177.233 58.6033 176.693 58.6033 cv
175.359 58.6033 175.381 55.9207 177.301 55.9207 cv
177.301 56.2088 li
cp
f
178.713 45.8313 mo
179.436 45.8313 179.44 43.6888 178.717 43.6888 cv
178.004 43.6888 177.991 45.8313 178.713 45.8313 cv
cp
178.693 46.1033 mo
177.544 46.1033 177.507 43.4168 178.737 43.4168 cv
179.913 43.4168 179.915 46.1033 178.693 46.1033 cv
cp
176.713 44.5643 mo
177.313 44.3602 177.181 43.6688 176.669 43.6688 cv
176.146 43.6688 175.954 44.3616 176.713 44.5643 cv
cp
177.185 45.3836 mo
177.185 44.7404 176.146 44.6389 176.146 45.3519 cv
176.116 45.9951 177.185 46.0191 177.185 45.3836 cv
cp
176.301 44.7039 mo
176.298 44.6922 li
175.587 44.3574 175.847 43.4168 176.689 43.4168 cv
177.533 43.4168 177.711 44.3339 177.017 44.6644 cv
177.017 44.6761 li
177.891 45.0214 177.613 46.1033 176.657 46.1033 cv
175.674 46.1033 175.47 45.0581 176.301 44.7039 cv
cp
f
178.185 32.2723 mo
178.185 33.682 179.245 33.7303 179.245 32.2479 cv
179.245 30.796 178.185 30.8316 178.185 32.2723 cv
cp
179.596 32.2322 mo
179.596 34.0663 177.85 34.0915 177.834 32.2679 cv
177.834 30.4922 179.596 30.411 179.596 32.2322 cv
cp
176.661 33.3313 mo
177.384 33.3313 177.388 31.1888 176.665 31.1888 cv
175.952 31.1888 175.939 33.3313 176.661 33.3313 cv
cp
176.641 33.6033 mo
175.492 33.6033 175.454 30.9168 176.685 30.9168 cv
177.86 30.9168 177.863 33.6033 176.641 33.6033 cv
cp
174.529 31.2889 mo
174.521 31.2889 li
174.069 31.5325 li
174.002 31.2645 li
174.569 30.9607 li
174.869 30.9607 li
174.869 33.5594 li
174.529 33.5594 li
174.529 31.2889 li
cp
f
322.097 94.6031 mo
184.596 94.6031 li
184.32 94.6031 184.096 94.3795 184.096 94.1031 cv
184.096 93.8268 184.32 93.6031 184.596 93.6031 cv
322.097 93.6031 li
322.373 93.6031 322.597 93.8268 322.597 94.1031 cv
322.597 94.3795 322.373 94.6031 322.097 94.6031 cv
cp
.227451 .262745 .321569 rgb
f
179.476 101.332 mo
180.199 101.332 180.203 99.1883 179.48 99.1883 cv
178.767 99.1883 178.753 101.332 179.476 101.332 cv
cp
179.456 101.603 mo
178.306 101.603 178.27 98.9168 179.5 98.9168 cv
180.675 98.9168 180.678 101.603 179.456 101.603 cv
cp
.380392 .411765 .454902 rgb
f
197.756 101.332 mo
198.479 101.332 198.483 99.1883 197.76 99.1883 cv
197.047 99.1883 197.034 101.332 197.756 101.332 cv
cp
198.639 100.232 mo
198.639 102.065 196.893 102.093 196.877 100.268 cv
196.877 98.4888 198.639 98.4129 198.639 100.232 cv
cp
195.624 99.2889 mo
195.616 99.2889 li
195.165 99.532 li
195.096 99.2645 li
195.664 98.9607 li
195.964 98.9607 li
195.964 101.559 li
195.624 101.559 li
195.624 99.2889 li
cp
f
210.492 101.332 mo
211.215 101.332 211.219 99.1883 210.496 99.1883 cv
209.783 99.1883 209.77 101.332 210.492 101.332 cv
cp
211.375 100.232 mo
211.375 102.065 209.629 102.093 209.612 100.268 cv
209.612 98.4888 211.375 98.4129 211.375 100.232 cv
cp
207.596 101.559 mo
207.596 101.344 li
207.997 100.955 208.835 100.258 208.84 99.7166 cv
208.84 99.1312 208.206 99.0678 207.773 99.4285 cv
207.66 99.1805 li
208.231 98.7006 209.192 98.8642 209.192 99.6727 cv
209.192 100.275 208.538 100.843 208.088 101.26 cv
208.088 101.267 li
209.256 101.267 li
209.256 101.559 li
207.596 101.559 li
cp
f
223.004 101.332 mo
223.727 101.332 223.731 99.1883 223.007 99.1883 cv
222.295 99.1883 222.281 101.332 223.004 101.332 cv
cp
222.984 101.603 mo
221.834 101.603 221.798 98.9168 223.027 98.9168 cv
224.203 98.9168 224.206 101.603 222.984 101.603 cv
cp
220.192 101.156 mo
221.272 101.841 222.034 100.296 220.488 100.296 cv
220.488 100.032 li
221.845 100.032 221.207 98.7145 220.288 99.3729 cv
220.196 99.117 li
221.282 98.3123 222.224 99.7541 221.14 100.148 cv
221.14 100.156 li
221.997 100.329 221.934 101.603 220.772 101.603 cv
220.48 101.603 220.224 101.511 220.096 101.427 cv
220.192 101.156 li
cp
f
235.611 101.332 mo
236.335 101.332 236.339 99.1883 235.615 99.1883 cv
234.903 99.1883 234.889 101.332 235.611 101.332 cv
cp
236.495 100.232 mo
236.495 102.065 234.749 102.093 234.732 100.268 cv
234.732 98.4888 236.495 98.4129 236.495 100.232 cv
cp
233.803 100.576 mo
233.803 100.23 233.798 99.6158 233.816 99.3006 cv
233.803 99.3006 li
233.575 99.737 233.272 100.123 232.952 100.568 cv
232.952 100.576 li
233.803 100.576 li
cp
233.803 101.559 mo
233.803 100.851 li
232.596 100.851 li
232.596 100.62 li
233.756 98.9607 li
234.135 98.9607 li
234.135 100.576 li
234.499 100.576 li
234.499 100.851 li
234.135 100.851 li
234.135 101.559 li
233.803 101.559 li
cp
f
248.004 101.332 mo
248.727 101.332 248.731 99.1883 248.007 99.1883 cv
247.295 99.1883 247.281 101.332 248.004 101.332 cv
cp
248.887 100.232 mo
248.887 102.065 247.141 102.093 247.124 100.268 cv
247.124 98.4888 248.887 98.4129 248.887 100.232 cv
cp
246.659 99.2566 mo
245.668 99.2566 li
245.568 99.9246 li
247.571 99.6315 246.631 102.434 245.096 101.443 cv
245.184 101.176 li
246.353 101.874 247.092 99.9821 245.248 100.208 cv
245.416 98.9607 li
246.659 98.9607 li
246.659 99.2566 li
cp
f
260.536 101.332 mo
261.259 101.332 261.263 99.1883 260.54 99.1883 cv
259.827 99.1883 259.814 101.332 260.536 101.332 cv
cp
260.516 101.603 mo
259.367 101.603 259.33 98.9168 260.56 98.9168 cv
261.736 98.9168 261.738 101.603 260.516 101.603 cv
cp
258.488 100.112 mo
257.707 100.112 257.835 101.332 258.516 101.332 cv
259.161 101.332 259.24 100.112 258.488 100.112 cv
cp
259.124 99.2088 mo
258.539 99.1769 258.041 99.5457 257.956 100.148 cv
257.968 100.148 li
258.378 99.6064 259.38 99.7837 259.38 100.688 cv
259.38 101.164 259.056 101.603 258.516 101.603 cv
257.176 101.603 257.208 98.9207 259.124 98.9207 cv
259.124 99.2088 li
cp
f
272.943 101.332 mo
273.667 101.332 273.671 99.1883 272.947 99.1883 cv
272.235 99.1883 272.221 101.332 272.943 101.332 cv
cp
273.827 100.232 mo
273.827 102.065 272.081 102.093 272.064 100.268 cv
272.064 98.4888 273.827 98.4129 273.827 100.232 cv
cp
271.736 98.9607 mo
271.736 99.1932 li
270.604 101.559 li
270.24 101.559 li
271.367 99.2605 li
271.367 99.2527 li
270.096 99.2527 li
270.096 98.9607 li
271.736 98.9607 li
cp
f
285.524 101.332 mo
286.247 101.332 286.251 99.1883 285.527 99.1883 cv
284.815 99.1883 284.801 101.332 285.524 101.332 cv
cp
285.504 101.603 mo
284.354 101.603 284.318 98.9168 285.547 98.9168 cv
286.723 98.9168 286.726 101.603 285.504 101.603 cv
cp
283.524 100.064 mo
284.124 99.8602 283.992 99.1688 283.48 99.1688 cv
282.957 99.1688 282.765 99.8616 283.524 100.064 cv
cp
283.424 100.316 mo
282.735 100.515 282.847 101.348 283.476 101.348 cv
284.086 101.348 284.288 100.561 283.424 100.316 cv
cp
283.112 100.204 mo
283.108 100.192 li
282.82 100.056 282.697 99.8318 282.697 99.6082 cv
282.697 98.7088 284.256 98.6832 284.256 99.5564 cv
284.256 99.7762 284.148 100.012 283.828 100.164 cv
283.828 100.177 li
284.702 100.522 284.424 101.603 283.468 101.603 cv
282.482 101.603 282.286 100.554 283.112 100.204 cv
cp
f
298.008 101.332 mo
298.731 101.332 298.734 99.1883 298.011 99.1883 cv
297.299 99.1883 297.285 101.332 298.008 101.332 cv
cp
297.987 101.603 mo
296.838 101.603 296.801 98.9168 298.031 98.9168 cv
299.207 98.9168 299.21 101.603 297.987 101.603 cv
cp
295.943 100.368 mo
296.788 100.368 296.558 99.1844 295.956 99.1844 cv
295.314 99.1844 295.235 100.368 295.943 100.368 cv
cp
295.316 101.311 mo
295.888 101.37 296.384 101.022 296.487 100.356 cv
296.475 100.356 li
296.048 100.88 295.096 100.663 295.096 99.8406 cv
295.096 98.695 296.843 98.4561 296.843 100.012 cv
296.843 101.048 296.214 101.641 295.316 101.599 cv
295.316 101.311 li
cp
f
312.308 101.332 mo
313.031 101.332 313.035 99.1883 312.312 99.1883 cv
311.599 99.1883 311.586 101.332 312.308 101.332 cv
cp
312.288 101.603 mo
311.139 101.603 311.102 98.9168 312.332 98.9168 cv
313.508 98.9168 313.51 101.603 312.288 101.603 cv
cp
310.256 101.332 mo
310.979 101.332 310.983 99.1883 310.26 99.1883 cv
309.547 99.1883 309.534 101.332 310.256 101.332 cv
cp
311.139 100.232 mo
311.139 102.065 309.393 102.093 309.377 100.268 cv
309.377 98.4888 311.139 98.4129 311.139 100.232 cv
cp
308.124 99.2889 mo
308.116 99.2889 li
307.665 99.532 li
307.596 99.2645 li
308.164 98.9607 li
308.464 98.9607 li
308.464 101.559 li
308.124 101.559 li
308.124 99.2889 li
cp
f
199.596 87.8533 mo
199.596 86.4726 198.477 85.3533 197.096 85.3533 cv
195.716 85.3533 194.596 86.4726 194.596 87.8533 cv
194.596 89.234 195.716 90.3533 197.096 90.3533 cv
198.477 90.3533 199.596 89.234 199.596 87.8533 cv
cp
.0156863 .552941 .678431 rgb
f
212.096 74.6033 mo
212.096 73.2226 210.977 72.1033 209.596 72.1033 cv
208.216 72.1033 207.096 73.2226 207.096 74.6033 cv
207.096 75.984 208.216 77.1033 209.596 77.1033 cv
210.977 77.1033 212.096 75.984 212.096 74.6033 cv
cp
f
224.596 71.6033 mo
224.596 70.2226 223.477 69.1033 222.096 69.1033 cv
220.716 69.1033 219.596 70.2226 219.596 71.6033 cv
219.596 72.984 220.716 74.1033 222.096 74.1033 cv
223.477 74.1033 224.596 72.984 224.596 71.6033 cv
cp
f
237.096 60.6033 mo
237.096 59.2226 235.977 58.1033 234.596 58.1033 cv
233.216 58.1033 232.096 59.2226 232.096 60.6033 cv
232.096 61.984 233.216 63.1033 234.596 63.1033 cv
235.977 63.1033 237.096 61.984 237.096 60.6033 cv
cp
f
249.596 68.1033 mo
249.596 66.7226 248.477 65.6033 247.096 65.6033 cv
245.716 65.6033 244.596 66.7226 244.596 68.1033 cv
244.596 69.484 245.716 70.6033 247.096 70.6033 cv
248.477 70.6033 249.596 69.484 249.596 68.1033 cv
cp
f
262.096 56.8533 mo
262.096 55.4726 260.977 54.3533 259.596 54.3533 cv
258.216 54.3533 257.096 55.4726 257.096 56.8533 cv
257.096 58.234 258.216 59.3533 259.596 59.3533 cv
260.977 59.3533 262.096 58.234 262.096 56.8533 cv
cp
f
274.596 47.6033 mo
274.596 46.2226 273.477 45.1033 272.096 45.1033 cv
270.716 45.1033 269.596 46.2226 269.596 47.6033 cv
269.596 48.984 270.716 50.1033 272.096 50.1033 cv
273.477 50.1033 274.596 48.984 274.596 47.6033 cv
cp
f
287.096 52.6033 mo
287.096 51.2226 285.977 50.1033 284.596 50.1033 cv
283.216 50.1033 282.096 51.2226 282.096 52.6033 cv
282.096 53.984 283.216 55.1033 284.596 55.1033 cv
285.977 55.1033 287.096 53.984 287.096 52.6033 cv
cp
f
299.596 44.1033 mo
299.596 42.7226 298.477 41.6033 297.096 41.6033 cv
295.716 41.6033 294.596 42.7226 294.596 44.1033 cv
294.596 45.484 295.716 46.6033 297.096 46.6033 cv
298.477 46.6033 299.596 45.484 299.596 44.1033 cv
cp
f
312.096 39.6033 mo
312.096 38.2226 310.977 37.1033 309.596 37.1033 cv
308.216 37.1033 307.096 38.2226 307.096 39.6033 cv
307.096 40.984 308.216 42.1033 309.596 42.1033 cv
310.977 42.1033 312.096 40.984 312.096 39.6033 cv
cp
f
184.596 94.6031 mo
184.32 94.6031 184.096 94.3795 184.096 94.1031 cv
184.096 19.6031 li
184.096 19.3268 184.32 19.1031 184.596 19.1031 cv
184.873 19.1031 185.096 19.3268 185.096 19.6031 cv
185.096 94.1031 li
185.096 94.3795 184.873 94.6031 184.596 94.6031 cv
cp
.227451 .262745 .321569 rgb
f
360.046 94.2281 mo
359.977 94.2281 359.921 94.172 359.921 94.1031 cv
359.921 19.6031 li
359.921 19.5343 359.977 19.4781 360.046 19.4781 cv
360.115 19.4781 360.171 19.5343 360.171 19.6031 cv
360.171 94.1031 li
360.171 94.172 360.115 94.2281 360.046 94.2281 cv
cp
.686275 .721569 .74902 rgb
f
485.046 83.5318 mo
347.546 83.5318 li
347.477 83.5318 347.421 83.4757 347.421 83.4068 cv
347.421 83.338 347.477 83.2818 347.546 83.2818 cv
485.046 83.2818 li
485.115 83.2818 485.171 83.338 485.171 83.4068 cv
485.171 83.4757 485.115 83.5318 485.046 83.5318 cv
cp
f
485.046 71.1842 mo
347.546 71.1842 li
347.477 71.1842 347.421 71.128 347.421 71.0592 cv
347.421 70.9903 347.477 70.9342 347.546 70.9342 cv
485.046 70.9342 li
485.115 70.9342 485.171 70.9903 485.171 71.0592 cv
485.171 71.128 485.115 71.1842 485.046 71.1842 cv
cp
f
485.046 58.7281 mo
347.546 58.7281 li
347.477 58.7281 347.421 58.672 347.421 58.6031 cv
347.421 58.5343 347.477 58.4781 347.546 58.4781 cv
485.046 58.4781 li
485.115 58.4781 485.171 58.5343 485.171 58.6031 cv
485.171 58.672 485.115 58.7281 485.046 58.7281 cv
cp
f
485.046 46.2281 mo
347.546 46.2281 li
347.477 46.2281 347.421 46.172 347.421 46.1031 cv
347.421 46.0343 347.477 45.9781 347.546 45.9781 cv
485.046 45.9781 li
485.115 45.9781 485.171 46.0343 485.171 46.1031 cv
485.171 46.172 485.115 46.2281 485.046 46.2281 cv
cp
f
485.046 33.6842 mo
347.546 33.6842 li
347.477 33.6842 347.421 33.628 347.421 33.5592 cv
347.421 33.4903 347.477 33.4342 347.546 33.4342 cv
485.046 33.4342 li
485.115 33.4342 485.171 33.4903 485.171 33.5592 cv
485.171 33.628 485.115 33.6842 485.046 33.6842 cv
cp
f
372.546 94.2281 mo
372.477 94.2281 372.421 94.172 372.421 94.1031 cv
372.421 19.6031 li
372.421 19.5343 372.477 19.4781 372.546 19.4781 cv
372.615 19.4781 372.671 19.5343 372.671 19.6031 cv
372.671 94.1031 li
372.671 94.172 372.615 94.2281 372.546 94.2281 cv
cp
f
385.046 94.2281 mo
384.977 94.2281 384.921 94.172 384.921 94.1031 cv
384.921 19.6031 li
384.921 19.5343 384.977 19.4781 385.046 19.4781 cv
385.115 19.4781 385.171 19.5343 385.171 19.6031 cv
385.171 94.1031 li
385.171 94.172 385.115 94.2281 385.046 94.2281 cv
cp
f
397.546 94.2281 mo
397.477 94.2281 397.421 94.172 397.421 94.1031 cv
397.421 19.6031 li
397.421 19.5343 397.477 19.4781 397.546 19.4781 cv
397.615 19.4781 397.671 19.5343 397.671 19.6031 cv
397.671 94.1031 li
397.671 94.172 397.615 94.2281 397.546 94.2281 cv
cp
f
410.046 94.2281 mo
409.977 94.2281 409.921 94.172 409.921 94.1031 cv
409.921 19.6031 li
409.921 19.5343 409.977 19.4781 410.046 19.4781 cv
410.115 19.4781 410.171 19.5343 410.171 19.6031 cv
410.171 94.1031 li
410.171 94.172 410.115 94.2281 410.046 94.2281 cv
cp
f
422.546 94.2281 mo
422.477 94.2281 422.421 94.172 422.421 94.1031 cv
422.421 19.6031 li
422.421 19.5343 422.477 19.4781 422.546 19.4781 cv
422.615 19.4781 422.671 19.5343 422.671 19.6031 cv
422.671 94.1031 li
422.671 94.172 422.615 94.2281 422.546 94.2281 cv
cp
f
435.046 94.2281 mo
434.977 94.2281 434.921 94.172 434.921 94.1031 cv
434.921 19.6031 li
434.921 19.5343 434.977 19.4781 435.046 19.4781 cv
435.115 19.4781 435.171 19.5343 435.171 19.6031 cv
435.171 94.1031 li
435.171 94.172 435.115 94.2281 435.046 94.2281 cv
cp
f
447.546 94.2281 mo
447.477 94.2281 447.421 94.172 447.421 94.1031 cv
447.421 19.6031 li
447.421 19.5343 447.477 19.4781 447.546 19.4781 cv
447.615 19.4781 447.671 19.5343 447.671 19.6031 cv
447.671 94.1031 li
447.671 94.172 447.615 94.2281 447.546 94.2281 cv
cp
f
460.046 94.2281 mo
459.977 94.2281 459.921 94.172 459.921 94.1031 cv
459.921 19.6031 li
459.921 19.5343 459.977 19.4781 460.046 19.4781 cv
460.115 19.4781 460.171 19.5343 460.171 19.6031 cv
460.171 94.1031 li
460.171 94.172 460.115 94.2281 460.046 94.2281 cv
cp
f
472.546 94.2281 mo
472.477 94.2281 472.421 94.172 472.421 94.1031 cv
472.421 19.6031 li
472.421 19.5343 472.477 19.4781 472.546 19.4781 cv
472.615 19.4781 472.671 19.5343 472.671 19.6031 cv
472.671 94.1031 li
472.671 94.172 472.615 94.2281 472.546 94.2281 cv
cp
f
485.046 94.2281 mo
484.977 94.2281 484.921 94.172 484.921 94.1031 cv
484.921 19.6031 li
484.921 19.5343 484.977 19.4781 485.046 19.4781 cv
485.115 19.4781 485.171 19.5343 485.171 19.6031 cv
485.171 94.1031 li
485.171 94.172 485.115 94.2281 485.046 94.2281 cv
cp
f
485.046 19.7281 mo
347.546 19.7281 li
347.477 19.7281 347.421 19.672 347.421 19.6031 cv
347.421 19.5343 347.477 19.4781 347.546 19.4781 cv
485.046 19.4781 li
485.115 19.4781 485.171 19.5343 485.171 19.6031 cv
485.171 19.672 485.115 19.7281 485.046 19.7281 cv
cp
f
341.135 82.2723 mo
341.135 82.9476 341.343 83.3313 341.662 83.3313 cv
342.022 83.3313 342.194 82.9119 342.194 82.2479 cv
342.194 81.6082 342.03 81.1888 341.666 81.1888 cv
341.359 81.1888 341.135 81.5643 341.135 82.2723 cv
cp
342.546 82.2322 mo
342.546 83.1155 342.218 83.6033 341.642 83.6033 cv
341.135 83.6033 340.791 83.1277 340.783 82.2679 cv
340.783 81.3968 341.158 80.9168 341.686 80.9168 cv
342.234 80.9168 342.546 81.4046 342.546 82.2322 cv
cp
338.767 83.5594 mo
338.767 83.3436 li
339.043 83.0755 li
339.706 82.4441 340.007 82.1082 340.011 81.7166 cv
340.011 81.4524 339.883 81.2088 339.495 81.2088 cv
339.259 81.2088 339.063 81.3284 338.943 81.4285 cv
338.831 81.1805 li
339.011 81.0286 339.267 80.9168 339.567 80.9168 cv
340.126 80.9168 340.362 81.3006 340.362 81.6727 cv
340.362 82.1522 340.014 82.5398 339.467 83.0677 cv
339.259 83.2596 li
339.259 83.2674 li
340.426 83.2674 li
340.426 83.5594 li
338.767 83.5594 li
cp
.384314 .407843 .462745 rgb
f
341.135 69.7723 mo
341.135 70.4476 341.343 70.8313 341.662 70.8313 cv
342.022 70.8313 342.194 70.4119 342.194 69.7479 cv
342.194 69.1082 342.03 68.6888 341.666 68.6888 cv
341.359 68.6888 341.135 69.0643 341.135 69.7723 cv
cp
342.546 69.7322 mo
342.546 70.6155 342.218 71.1033 341.642 71.1033 cv
341.135 71.1033 340.791 70.6277 340.783 69.7679 cv
340.783 68.8968 341.158 68.4168 341.686 68.4168 cv
342.234 68.4168 342.546 68.9046 342.546 69.7322 cv
cp
339.854 70.076 mo
339.854 69.2083 li
339.854 69.0726 339.859 68.9363 339.866 68.8006 cv
339.854 68.8006 li
339.775 68.9524 339.711 69.0643 339.638 69.1844 cv
339.003 70.0682 li
339.003 70.076 li
339.854 70.076 li
cp
339.854 71.0594 mo
339.854 70.3519 li
338.647 70.3519 li
338.647 70.1199 li
339.806 68.4607 li
340.186 68.4607 li
340.186 70.076 li
340.55 70.076 li
340.55 70.3519 li
340.186 70.3519 li
340.186 71.0594 li
339.854 71.0594 li
cp
f
341.135 57.2723 mo
341.135 57.9476 341.343 58.3313 341.662 58.3313 cv
342.022 58.3313 342.194 57.9119 342.194 57.2479 cv
342.194 56.6082 342.03 56.1888 341.666 56.1888 cv
341.359 56.1888 341.135 56.5643 341.135 57.2723 cv
cp
342.546 57.2322 mo
342.546 58.1155 342.218 58.6033 341.642 58.6033 cv
341.135 58.6033 340.791 58.1277 340.783 57.2679 cv
340.783 56.3968 341.158 55.9168 341.686 55.9168 cv
342.234 55.9168 342.546 56.4046 342.546 57.2322 cv
cp
340.15 57.7078 mo
340.15 57.3362 339.938 57.1121 339.615 57.1121 cv
339.403 57.1121 339.207 57.2439 339.111 57.4319 cv
339.087 57.472 339.071 57.5237 339.071 57.5877 cv
339.079 58.0154 339.275 58.3313 339.643 58.3313 cv
339.947 58.3313 340.15 58.0799 340.15 57.7078 cv
cp
340.25 56.2088 mo
340.178 56.2049 340.086 56.2088 339.987 56.2244 cv
339.435 56.3167 339.143 56.7205 339.083 57.1482 cv
339.095 57.1482 li
339.219 56.9842 339.435 56.8484 339.723 56.8484 cv
340.182 56.8484 340.506 57.18 340.506 57.6878 cv
340.506 58.1634 340.182 58.6033 339.643 58.6033 cv
339.087 58.6033 338.723 58.1717 338.723 57.4959 cv
338.723 56.9842 338.907 56.5804 339.163 56.3245 cv
339.379 56.1126 339.667 55.9808 339.994 55.9407 cv
340.098 55.9246 340.186 55.9207 340.25 55.9207 cv
340.25 56.2088 li
cp
f
341.135 44.7723 mo
341.135 45.4476 341.343 45.8313 341.662 45.8313 cv
342.022 45.8313 342.194 45.4119 342.194 44.7479 cv
342.194 44.1082 342.03 43.6888 341.666 43.6888 cv
341.359 43.6888 341.135 44.0643 341.135 44.7723 cv
cp
342.546 44.7322 mo
342.546 45.6155 342.218 46.1033 341.642 46.1033 cv
341.135 46.1033 340.791 45.6277 340.783 44.7679 cv
340.783 43.8968 341.158 43.4168 341.686 43.4168 cv
342.234 43.4168 342.546 43.9046 342.546 44.7322 cv
cp
339.167 44.0843 mo
339.167 44.3445 339.363 44.4842 339.662 44.5643 cv
339.887 44.4881 340.058 44.3284 340.058 44.0926 cv
340.058 43.8846 339.934 43.6688 339.618 43.6688 cv
339.327 43.6688 339.167 43.8606 339.167 44.0843 cv
cp
340.135 45.3836 mo
340.135 45.0682 339.914 44.9158 339.563 44.8162 cv
339.259 44.9041 339.095 45.1038 339.095 45.3519 cv
339.083 45.6155 339.283 45.8475 339.615 45.8475 cv
339.93 45.8475 340.135 45.6517 340.135 45.3836 cv
cp
338.735 45.3997 mo
338.735 45.0721 338.931 44.8401 339.251 44.7039 cv
339.247 44.6922 li
338.959 44.5564 338.835 44.3323 338.835 44.1082 cv
338.835 43.6966 339.183 43.4168 339.638 43.4168 cv
340.142 43.4168 340.394 43.7327 340.394 44.0564 cv
340.394 44.2762 340.286 44.512 339.967 44.6644 cv
339.967 44.6761 li
340.29 44.804 340.49 45.032 340.49 45.348 cv
340.49 45.7996 340.102 46.1033 339.607 46.1033 cv
339.063 46.1033 338.735 45.7796 338.735 45.3997 cv
cp
f
341.135 32.2723 mo
341.135 32.9476 341.343 33.3313 341.662 33.3313 cv
342.022 33.3313 342.194 32.9119 342.194 32.2479 cv
342.194 31.6082 342.03 31.1888 341.666 31.1888 cv
341.359 31.1888 341.135 31.5643 341.135 32.2723 cv
cp
342.546 32.2322 mo
342.546 33.1155 342.218 33.6033 341.642 33.6033 cv
341.135 33.6033 340.791 33.1277 340.783 32.2679 cv
340.783 31.3968 341.158 30.9168 341.686 30.9168 cv
342.234 30.9168 342.546 31.4046 342.546 32.2322 cv
cp
339.082 32.2723 mo
339.082 32.9476 339.29 33.3313 339.61 33.3313 cv
339.97 33.3313 340.142 32.9119 340.142 32.2479 cv
340.142 31.6082 339.978 31.1888 339.614 31.1888 cv
339.306 31.1888 339.082 31.5643 339.082 32.2723 cv
cp
340.493 32.2322 mo
340.493 33.1155 340.166 33.6033 339.59 33.6033 cv
339.082 33.6033 338.739 33.1277 338.731 32.2679 cv
338.731 31.3968 339.106 30.9168 339.634 30.9168 cv
340.182 30.9168 340.493 31.4046 340.493 32.2322 cv
cp
337.478 31.2889 mo
337.47 31.2889 li
337.019 31.5325 li
336.951 31.2645 li
337.518 30.9607 li
337.818 30.9607 li
337.818 33.5594 li
337.478 33.5594 li
337.478 31.2889 li
cp
f
485.046 94.6031 mo
347.546 94.6031 li
347.27 94.6031 347.046 94.3795 347.046 94.1031 cv
347.046 93.8268 347.27 93.6031 347.546 93.6031 cv
485.046 93.6031 li
485.322 93.6031 485.546 93.8268 485.546 94.1031 cv
485.546 94.3795 485.322 94.6031 485.046 94.6031 cv
cp
.227451 .262745 .321569 rgb
f
341.897 100.272 mo
341.897 100.948 342.105 101.332 342.425 101.332 cv
342.785 101.332 342.957 100.912 342.957 100.248 cv
342.957 99.6082 342.793 99.1883 342.429 99.1883 cv
342.121 99.1883 341.897 99.5643 341.897 100.272 cv
cp
343.308 100.232 mo
343.308 101.116 342.981 101.603 342.405 101.603 cv
341.897 101.603 341.553 101.128 341.546 100.268 cv
341.546 99.3963 341.921 98.9168 342.449 98.9168 cv
342.997 98.9168 343.308 99.4041 343.308 100.232 cv
cp
.384314 .407843 .462745 rgb
f
360.177 100.272 mo
360.177 100.948 360.386 101.332 360.705 101.332 cv
361.065 101.332 361.237 100.912 361.237 100.248 cv
361.237 99.6082 361.073 99.1883 360.709 99.1883 cv
360.402 99.1883 360.177 99.5643 360.177 100.272 cv
cp
361.589 100.232 mo
361.589 101.116 361.261 101.603 360.685 101.603 cv
360.177 101.603 359.834 101.128 359.826 100.268 cv
359.826 99.3963 360.201 98.9168 360.729 98.9168 cv
361.277 98.9168 361.589 99.4041 361.589 100.232 cv
cp
358.573 99.2889 mo
358.566 99.2889 li
358.114 99.532 li
358.046 99.2645 li
358.614 98.9607 li
358.913 98.9607 li
358.913 101.559 li
358.573 101.559 li
358.573 99.2889 li
cp
f
372.913 100.272 mo
372.913 100.948 373.121 101.332 373.441 101.332 cv
373.801 101.332 373.973 100.912 373.973 100.248 cv
373.973 99.6082 373.809 99.1883 373.445 99.1883 cv
373.137 99.1883 372.913 99.5643 372.913 100.272 cv
cp
374.324 100.232 mo
374.324 101.116 373.997 101.603 373.421 101.603 cv
372.913 101.603 372.57 101.128 372.562 100.268 cv
372.562 99.3963 372.937 98.9168 373.465 98.9168 cv
374.013 98.9168 374.324 99.4041 374.324 100.232 cv
cp
370.546 101.559 mo
370.546 101.344 li
370.822 101.076 li
371.486 100.444 371.785 100.108 371.789 99.7166 cv
371.789 99.4529 371.661 99.2088 371.274 99.2088 cv
371.037 99.2088 370.842 99.3289 370.722 99.4285 cv
370.61 99.1805 li
370.79 99.0291 371.046 98.9168 371.345 98.9168 cv
371.905 98.9168 372.141 99.3006 372.141 99.6727 cv
372.141 100.152 371.793 100.54 371.245 101.067 cv
371.037 101.26 li
371.037 101.267 li
372.205 101.267 li
372.205 101.559 li
370.546 101.559 li
cp
f
385.425 100.272 mo
385.425 100.948 385.633 101.332 385.953 101.332 cv
386.313 101.332 386.485 100.912 386.485 100.248 cv
386.485 99.6082 386.321 99.1883 385.957 99.1883 cv
385.649 99.1883 385.425 99.5643 385.425 100.272 cv
cp
386.836 100.232 mo
386.836 101.116 386.509 101.603 385.933 101.603 cv
385.425 101.603 385.081 101.128 385.073 100.268 cv
385.073 99.3963 385.449 98.9168 385.977 98.9168 cv
386.525 98.9168 386.836 99.4041 386.836 100.232 cv
cp
383.141 101.156 mo
383.241 101.219 383.473 101.319 383.717 101.319 cv
384.169 101.319 384.309 101.032 384.305 100.816 cv
384.301 100.452 383.973 100.296 383.633 100.296 cv
383.437 100.296 li
383.437 100.032 li
383.633 100.032 li
383.889 100.032 384.213 99.9002 384.213 99.5926 cv
384.213 99.3846 384.081 99.201 383.757 99.201 cv
383.549 99.201 383.349 99.2928 383.238 99.3729 cv
383.146 99.117 li
383.282 99.0164 383.545 98.9168 383.825 98.9168 cv
384.337 98.9168 384.569 99.2205 384.569 99.5369 cv
384.569 99.8045 384.409 100.032 384.089 100.148 cv
384.089 100.156 li
384.409 100.22 384.669 100.46 384.669 100.824 cv
384.669 101.24 384.345 101.603 383.721 101.603 cv
383.43 101.603 383.174 101.511 383.046 101.427 cv
383.141 101.156 li
cp
f
398.033 100.272 mo
398.033 100.948 398.241 101.332 398.561 101.332 cv
398.921 101.332 399.093 100.912 399.093 100.248 cv
399.093 99.6082 398.928 99.1883 398.565 99.1883 cv
398.257 99.1883 398.033 99.5643 398.033 100.272 cv
cp
399.444 100.232 mo
399.444 101.116 399.116 101.603 398.541 101.603 cv
398.033 101.603 397.689 101.128 397.681 100.268 cv
397.681 99.3963 398.057 98.9168 398.585 98.9168 cv
399.133 98.9168 399.444 99.4041 399.444 100.232 cv
cp
396.753 100.576 mo
396.753 99.7088 li
396.753 99.5721 396.757 99.4363 396.765 99.3006 cv
396.753 99.3006 li
396.673 99.4529 396.609 99.5643 396.537 99.6844 cv
395.901 100.568 li
395.901 100.576 li
396.753 100.576 li
cp
396.753 101.559 mo
396.753 100.851 li
395.546 100.851 li
395.546 100.62 li
396.705 98.9607 li
397.085 98.9607 li
397.085 100.576 li
397.448 100.576 li
397.448 100.851 li
397.085 100.851 li
397.085 101.559 li
396.753 101.559 li
cp
f
410.425 100.272 mo
410.425 100.948 410.633 101.332 410.953 101.332 cv
411.313 101.332 411.485 100.912 411.485 100.248 cv
411.485 99.6082 411.321 99.1883 410.957 99.1883 cv
410.649 99.1883 410.425 99.5643 410.425 100.272 cv
cp
411.836 100.232 mo
411.836 101.116 411.509 101.603 410.933 101.603 cv
410.425 101.603 410.081 101.128 410.073 100.268 cv
410.073 99.3963 410.449 98.9168 410.977 98.9168 cv
411.525 98.9168 411.836 99.4041 411.836 100.232 cv
cp
409.609 99.2566 mo
408.617 99.2566 li
408.517 99.9246 li
408.577 99.9158 408.633 99.908 408.729 99.908 cv
408.929 99.908 409.129 99.952 409.289 100.049 cv
409.493 100.164 409.661 100.388 409.661 100.716 cv
409.661 101.223 409.257 101.603 408.693 101.603 cv
408.409 101.603 408.17 101.523 408.046 101.443 cv
408.134 101.176 li
408.241 101.24 408.453 101.319 408.689 101.319 cv
409.021 101.319 409.305 101.103 409.305 100.756 cv
409.301 100.42 409.077 100.18 408.557 100.18 cv
408.409 100.18 408.293 100.196 408.198 100.208 cv
408.365 98.9607 li
409.609 98.9607 li
409.609 99.2566 li
cp
f
422.957 100.272 mo
422.957 100.948 423.165 101.332 423.485 101.332 cv
423.845 101.332 424.017 100.912 424.017 100.248 cv
424.017 99.6082 423.853 99.1883 423.489 99.1883 cv
423.181 99.1883 422.957 99.5643 422.957 100.272 cv
cp
424.368 100.232 mo
424.368 101.116 424.041 101.603 423.465 101.603 cv
422.957 101.603 422.614 101.128 422.606 100.268 cv
422.606 99.3963 422.981 98.9168 423.509 98.9168 cv
424.057 98.9168 424.368 99.4041 424.368 100.232 cv
cp
421.973 100.708 mo
421.973 100.336 421.761 100.112 421.437 100.112 cv
421.225 100.112 421.03 100.244 420.934 100.432 cv
420.909 100.473 420.894 100.524 420.894 100.588 cv
420.902 101.015 421.098 101.332 421.465 101.332 cv
421.769 101.332 421.973 101.08 421.973 100.708 cv
cp
422.073 99.2088 mo
422.001 99.2049 421.909 99.2088 421.809 99.2244 cv
421.258 99.3162 420.966 99.7205 420.906 100.148 cv
420.918 100.148 li
421.042 99.9842 421.258 99.8484 421.545 99.8484 cv
422.005 99.8484 422.329 100.18 422.329 100.688 cv
422.329 101.164 422.005 101.603 421.465 101.603 cv
420.909 101.603 420.546 101.172 420.546 100.496 cv
420.546 99.9842 420.73 99.5809 420.986 99.325 cv
421.201 99.1131 421.49 98.9813 421.817 98.9412 cv
421.921 98.9246 422.009 98.9207 422.073 98.9207 cv
422.073 99.2088 li
cp
f
435.365 100.272 mo
435.365 100.948 435.573 101.332 435.893 101.332 cv
436.253 101.332 436.425 100.912 436.425 100.248 cv
436.425 99.6082 436.261 99.1883 435.897 99.1883 cv
435.589 99.1883 435.365 99.5643 435.365 100.272 cv
cp
436.776 100.232 mo
436.776 101.116 436.448 101.603 435.873 101.603 cv
435.365 101.603 435.021 101.128 435.013 100.268 cv
435.013 99.3963 435.389 98.9168 435.917 98.9168 cv
436.465 98.9168 436.776 99.4041 436.776 100.232 cv
cp
434.685 98.9607 mo
434.685 99.1932 li
433.553 101.559 li
433.189 101.559 li
434.317 99.2605 li
434.317 99.2527 li
433.046 99.2527 li
433.046 98.9607 li
434.685 98.9607 li
cp
f
447.945 100.272 mo
447.945 100.948 448.153 101.332 448.473 101.332 cv
448.833 101.332 449.005 100.912 449.005 100.248 cv
449.005 99.6082 448.841 99.1883 448.477 99.1883 cv
448.169 99.1883 447.945 99.5643 447.945 100.272 cv
cp
449.356 100.232 mo
449.356 101.116 449.029 101.603 448.453 101.603 cv
447.945 101.603 447.601 101.128 447.594 100.268 cv
447.594 99.3963 447.969 98.9168 448.497 98.9168 cv
449.045 98.9168 449.356 99.4041 449.356 100.232 cv
cp
445.977 99.5848 mo
445.977 99.8445 446.173 99.9842 446.473 100.064 cv
446.697 99.9881 446.869 99.8279 446.869 99.5926 cv
446.869 99.3846 446.745 99.1688 446.429 99.1688 cv
446.137 99.1688 445.977 99.3602 445.977 99.5848 cv
cp
446.945 100.884 mo
446.945 100.568 446.725 100.416 446.373 100.316 cv
446.069 100.404 445.906 100.604 445.906 100.851 cv
445.893 101.116 446.094 101.348 446.425 101.348 cv
446.741 101.348 446.945 101.151 446.945 100.884 cv
cp
445.546 100.9 mo
445.546 100.572 445.741 100.34 446.061 100.204 cv
446.057 100.192 li
445.769 100.056 445.646 99.8318 445.646 99.6082 cv
445.646 99.1971 445.993 98.9168 446.449 98.9168 cv
446.953 98.9168 447.205 99.2322 447.205 99.5564 cv
447.205 99.7762 447.097 100.012 446.777 100.164 cv
446.777 100.177 li
447.101 100.304 447.301 100.532 447.301 100.848 cv
447.301 101.3 446.913 101.603 446.417 101.603 cv
445.873 101.603 445.546 101.279 445.546 100.9 cv
cp
f
460.429 100.272 mo
460.429 100.948 460.637 101.332 460.957 101.332 cv
461.317 101.332 461.489 100.912 461.489 100.248 cv
461.489 99.6082 461.324 99.1883 460.961 99.1883 cv
460.653 99.1883 460.429 99.5643 460.429 100.272 cv
cp
461.84 100.232 mo
461.84 101.116 461.512 101.603 460.937 101.603 cv
460.429 101.603 460.085 101.128 460.077 100.268 cv
460.077 99.3963 460.453 98.9168 460.981 98.9168 cv
461.529 98.9168 461.84 99.4041 461.84 100.232 cv
cp
458.393 99.8162 mo
458.393 100.14 458.589 100.368 458.893 100.368 cv
459.129 100.368 459.313 100.252 459.405 100.096 cv
459.425 100.064 459.437 100.024 459.437 99.9686 cv
459.437 99.5242 459.273 99.1844 458.905 99.1844 cv
458.605 99.1844 458.393 99.449 458.393 99.8162 cv
cp
458.265 101.311 mo
458.342 101.319 458.429 101.311 458.549 101.3 cv
458.753 101.271 458.945 101.187 459.093 101.048 cv
459.265 100.891 459.389 100.664 459.437 100.356 cv
459.425 100.356 li
459.281 100.532 459.073 100.635 458.813 100.635 cv
458.345 100.635 458.046 100.284 458.046 99.8406 cv
458.046 99.3484 458.401 98.9168 458.933 98.9168 cv
459.465 98.9168 459.793 99.3484 459.793 100.012 cv
459.793 100.584 459.601 100.984 459.345 101.231 cv
459.145 101.427 458.869 101.548 458.589 101.579 cv
458.461 101.599 458.349 101.603 458.265 101.599 cv
458.265 101.311 li
cp
f
474.73 100.272 mo
474.73 100.948 474.938 101.332 475.258 101.332 cv
475.617 101.332 475.789 100.912 475.789 100.248 cv
475.789 99.6082 475.625 99.1883 475.261 99.1883 cv
474.954 99.1883 474.73 99.5643 474.73 100.272 cv
cp
476.141 100.232 mo
476.141 101.116 475.813 101.603 475.238 101.603 cv
474.73 101.603 474.386 101.128 474.378 100.268 cv
474.378 99.3963 474.754 98.9168 475.282 98.9168 cv
475.829 98.9168 476.141 99.4041 476.141 100.232 cv
cp
472.677 100.272 mo
472.677 100.948 472.886 101.332 473.205 101.332 cv
473.565 101.332 473.737 100.912 473.737 100.248 cv
473.737 99.6082 473.573 99.1883 473.209 99.1883 cv
472.902 99.1883 472.677 99.5643 472.677 100.272 cv
cp
474.089 100.232 mo
474.089 101.116 473.761 101.603 473.185 101.603 cv
472.677 101.603 472.334 101.128 472.326 100.268 cv
472.326 99.3963 472.701 98.9168 473.229 98.9168 cv
473.777 98.9168 474.089 99.4041 474.089 100.232 cv
cp
471.073 99.2889 mo
471.066 99.2889 li
470.614 99.532 li
470.546 99.2645 li
471.114 98.9607 li
471.413 98.9607 li
471.413 101.559 li
471.073 101.559 li
471.073 99.2889 li
cp
f
347.769 94.4044 mo
347.323 93.8019 li
359.823 84.5519 li
372.327 69.2989 li
384.827 60.2989 li
397.471 52.2057 li
410.119 54.7354 li
422.79 60.5689 li
434.992 71.0626 li
447.25 55.3722 li
459.78 42.838 li
472.352 35.2813 li
472.739 35.9249 li
460.239 43.4249 li
447.811 55.8683 li
435.1 72.1437 li
422.342 61.172 li
409.89 55.4439 li
397.621 53.0006 li
385.248 60.919 li
372.805 69.879 li
360.336 85.0909 li
347.769 94.4044 li
cp
1 .611765 .521569 rgb
f
362.546 84.8533 mo
362.546 83.4726 361.426 82.3533 360.046 82.3533 cv
358.665 82.3533 357.546 83.4726 357.546 84.8533 cv
357.546 86.234 358.665 87.3533 360.046 87.3533 cv
361.426 87.3533 362.546 86.234 362.546 84.8533 cv
cp
1 .352941 .203922 rgb
f
375.046 69.6033 mo
375.046 68.2226 373.926 67.1033 372.546 67.1033 cv
371.165 67.1033 370.046 68.2226 370.046 69.6033 cv
370.046 70.984 371.165 72.1033 372.546 72.1033 cv
373.926 72.1033 375.046 70.984 375.046 69.6033 cv
cp
f
387.546 60.6033 mo
387.546 59.2226 386.426 58.1033 385.046 58.1033 cv
383.665 58.1033 382.546 59.2226 382.546 60.6033 cv
382.546 61.984 383.665 63.1033 385.046 63.1033 cv
386.426 63.1033 387.546 61.984 387.546 60.6033 cv
cp
f
400.046 52.6033 mo
400.046 51.2226 398.926 50.1033 397.546 50.1033 cv
396.165 50.1033 395.046 51.2226 395.046 52.6033 cv
395.046 53.984 396.165 55.1033 397.546 55.1033 cv
398.926 55.1033 400.046 53.984 400.046 52.6033 cv
cp
f
412.546 55.1033 mo
412.546 53.7226 411.426 52.6033 410.046 52.6033 cv
408.665 52.6033 407.546 53.7226 407.546 55.1033 cv
407.546 56.484 408.665 57.6033 410.046 57.6033 cv
411.426 57.6033 412.546 56.484 412.546 55.1033 cv
cp
f
425.046 60.8533 mo
425.046 59.4726 423.926 58.3533 422.546 58.3533 cv
421.165 58.3533 420.046 59.4726 420.046 60.8533 cv
420.046 62.234 421.165 63.3533 422.546 63.3533 cv
423.926 63.3533 425.046 62.234 425.046 60.8533 cv
cp
f
437.546 71.6033 mo
437.546 70.2226 436.426 69.1033 435.046 69.1033 cv
433.665 69.1033 432.546 70.2226 432.546 71.6033 cv
432.546 72.984 433.665 74.1033 435.046 74.1033 cv
436.426 74.1033 437.546 72.984 437.546 71.6033 cv
cp
f
450.046 55.6033 mo
450.046 54.2226 448.926 53.1033 447.546 53.1033 cv
446.165 53.1033 445.046 54.2226 445.046 55.6033 cv
445.046 56.984 446.165 58.1033 447.546 58.1033 cv
448.926 58.1033 450.046 56.984 450.046 55.6033 cv
cp
f
462.546 43.1033 mo
462.546 41.7226 461.426 40.6033 460.046 40.6033 cv
458.665 40.6033 457.546 41.7226 457.546 43.1033 cv
457.546 44.484 458.665 45.6033 460.046 45.6033 cv
461.426 45.6033 462.546 44.484 462.546 43.1033 cv
cp
f
475.046 35.6033 mo
475.046 34.2226 473.926 33.1033 472.546 33.1033 cv
471.165 33.1033 470.046 34.2226 470.046 35.6033 cv
470.046 36.984 471.165 38.1033 472.546 38.1033 cv
473.926 38.1033 475.046 36.984 475.046 35.6033 cv
cp
f
347.546 94.6031 mo
347.27 94.6031 347.046 94.3795 347.046 94.1031 cv
347.046 19.6031 li
347.046 19.3268 347.27 19.1031 347.546 19.1031 cv
347.822 19.1031 348.046 19.3268 348.046 19.6031 cv
348.046 94.1031 li
348.046 94.3795 347.822 94.6031 347.546 94.6031 cv
cp
.227451 .262745 .321569 rgb
f
16.6379 194.55 mo
16.6379 195.225 16.8459 195.609 17.1657 195.609 cv
17.5256 195.609 17.6975 195.19 17.6975 194.526 cv
17.6975 193.886 17.5334 193.467 17.1696 193.467 cv
16.862 193.467 16.6379 193.842 16.6379 194.55 cv
cp
18.049 194.51 mo
18.049 195.393 17.7214 195.881 17.1457 195.881 cv
16.6379 195.881 16.2941 195.406 16.2863 194.546 cv
16.2863 193.675 16.6618 193.195 17.1896 193.195 cv
17.7375 193.195 18.049 193.682 18.049 194.51 cv
cp
14.2702 195.837 mo
14.2702 195.622 li
14.5461 195.353 li
15.2097 194.722 15.51 194.386 15.5139 193.995 cv
15.5139 193.73 15.3859 193.487 14.9982 193.487 cv
14.7624 193.487 14.5661 193.606 14.4465 193.706 cv
14.3342 193.458 li
14.5143 193.307 14.7702 193.195 15.07 193.195 cv
15.6296 193.195 15.8654 193.579 15.8654 193.951 cv
15.8654 194.43 15.5178 194.818 14.9699 195.346 cv
14.7624 195.538 li
14.7624 195.545 li
15.9294 195.545 li
15.9294 195.837 li
14.2702 195.837 li
cp
.380392 .411765 .454902 rgb
f
16.6379 182.05 mo
16.6379 182.725 16.8459 183.109 17.1657 183.109 cv
17.5256 183.109 17.6975 182.69 17.6975 182.026 cv
17.6975 181.386 17.5334 180.967 17.1696 180.967 cv
16.862 180.967 16.6379 181.342 16.6379 182.05 cv
cp
18.049 182.01 mo
18.049 182.893 17.7214 183.381 17.1457 183.381 cv
16.6379 183.381 16.2941 182.906 16.2863 182.046 cv
16.2863 181.175 16.6618 180.695 17.1896 180.695 cv
17.7375 180.695 18.049 181.182 18.049 182.01 cv
cp
15.3576 182.354 mo
15.3576 181.486 li
15.3576 181.35 15.362 181.214 15.3698 181.079 cv
15.3576 181.079 li
15.278 181.23 15.2141 181.342 15.1418 181.462 cv
14.5065 182.346 li
14.5065 182.354 li
15.3576 182.354 li
cp
15.3576 183.337 mo
15.3576 182.63 li
14.1506 182.63 li
14.1506 182.398 li
15.3098 180.739 li
15.6896 180.739 li
15.6896 182.354 li
16.0534 182.354 li
16.0534 182.63 li
15.6896 182.63 li
15.6896 183.337 li
15.3576 183.337 li
cp
f
16.6379 169.55 mo
16.6379 170.225 16.8459 170.609 17.1657 170.609 cv
17.5256 170.609 17.6975 170.19 17.6975 169.526 cv
17.6975 168.886 17.5334 168.467 17.1696 168.467 cv
16.862 168.467 16.6379 168.842 16.6379 169.55 cv
cp
18.049 169.51 mo
18.049 170.393 17.7214 170.881 17.1457 170.881 cv
16.6379 170.881 16.2941 170.406 16.2863 169.546 cv
16.2863 168.675 16.6618 168.195 17.1896 168.195 cv
17.7375 168.195 18.049 168.682 18.049 169.51 cv
cp
15.6535 169.986 mo
15.6535 169.614 15.4416 169.39 15.1179 169.39 cv
14.9059 169.39 14.7101 169.522 14.6144 169.71 cv
14.59 169.75 14.5744 169.802 14.5744 169.866 cv
14.5822 170.293 14.778 170.609 15.1462 170.609 cv
15.4499 170.609 15.6535 170.358 15.6535 169.986 cv
cp
15.7536 168.487 mo
15.6818 168.483 15.5895 168.487 15.4899 168.502 cv
14.9382 168.595 14.6462 168.998 14.5861 169.426 cv
14.5983 169.426 li
14.7224 169.262 14.9382 169.126 15.2258 169.126 cv
15.6857 169.126 16.0095 169.458 16.0095 169.966 cv
16.0095 170.441 15.6857 170.881 15.1462 170.881 cv
14.59 170.881 14.2263 170.45 14.2263 169.774 cv
14.2263 169.262 14.4103 168.858 14.6662 168.602 cv
14.882 168.391 15.1701 168.259 15.4977 168.219 cv
15.6017 168.202 15.6896 168.199 15.7536 168.199 cv
15.7536 168.487 li
cp
f
16.6379 157.05 mo
16.6379 157.725 16.8459 158.109 17.1657 158.109 cv
17.5256 158.109 17.6975 157.69 17.6975 157.026 cv
17.6975 156.386 17.5334 155.967 17.1696 155.967 cv
16.862 155.967 16.6379 156.342 16.6379 157.05 cv
cp
18.049 157.01 mo
18.049 157.893 17.7214 158.381 17.1457 158.381 cv
16.6379 158.381 16.2941 157.906 16.2863 157.046 cv
16.2863 156.175 16.6618 155.695 17.1896 155.695 cv
17.7375 155.695 18.049 156.182 18.049 157.01 cv
cp
14.6701 156.362 mo
14.6701 156.622 14.8659 156.762 15.1657 156.842 cv
15.3898 156.766 15.5617 156.606 15.5617 156.37 cv
15.5617 156.163 15.4377 155.947 15.1218 155.947 cv
14.8303 155.947 14.6701 156.139 14.6701 156.362 cv
cp
15.6379 157.661 mo
15.6379 157.346 15.4177 157.194 15.0661 157.094 cv
14.7624 157.182 14.5983 157.382 14.5983 157.63 cv
14.5861 157.893 14.7863 158.125 15.1179 158.125 cv
15.4338 158.125 15.6379 157.93 15.6379 157.661 cv
cp
14.2385 157.678 mo
14.2385 157.35 14.4343 157.118 14.7541 156.982 cv
14.7502 156.97 li
14.4621 156.834 14.3386 156.61 14.3386 156.386 cv
14.3386 155.975 14.6862 155.695 15.1418 155.695 cv
15.6457 155.695 15.8976 156.011 15.8976 156.334 cv
15.8976 156.554 15.7897 156.79 15.4699 156.942 cv
15.4699 156.954 li
15.7936 157.082 15.9933 157.31 15.9933 157.626 cv
15.9933 158.077 15.6057 158.381 15.11 158.381 cv
14.5661 158.381 14.2385 158.057 14.2385 157.678 cv
cp
f
16.6379 144.55 mo
16.6379 145.225 16.8459 145.609 17.1657 145.609 cv
17.5256 145.609 17.6975 145.19 17.6975 144.526 cv
17.6975 143.886 17.5334 143.467 17.1696 143.467 cv
16.862 143.467 16.6379 143.842 16.6379 144.55 cv
cp
18.049 144.51 mo
18.049 145.393 17.7214 145.881 17.1457 145.881 cv
16.6379 145.881 16.2941 145.406 16.2863 144.546 cv
16.2863 143.675 16.6618 143.195 17.1896 143.195 cv
17.7375 143.195 18.049 143.682 18.049 144.51 cv
cp
14.5856 144.55 mo
14.5856 145.225 14.7936 145.609 15.1135 145.609 cv
15.4733 145.609 15.6452 145.19 15.6452 144.526 cv
15.6452 143.886 15.4811 143.467 15.1174 143.467 cv
14.8098 143.467 14.5856 143.842 14.5856 144.55 cv
cp
15.9968 144.51 mo
15.9968 145.393 15.6691 145.881 15.0934 145.881 cv
14.5856 145.881 14.2419 145.406 14.2341 144.546 cv
14.2341 143.675 14.6096 143.195 15.1374 143.195 cv
15.6852 143.195 15.9968 143.682 15.9968 144.51 cv
cp
12.9816 143.567 mo
12.9738 143.567 li
12.5222 143.81 li
12.4543 143.542 li
13.0217 143.239 li
13.3215 143.239 li
13.3215 145.837 li
12.9816 145.837 li
12.9816 143.567 li
cp
f
16.6379 205.05 mo
16.6379 205.726 16.8459 206.11 17.1657 206.11 cv
17.5256 206.11 17.6975 205.69 17.6975 205.026 cv
17.6975 204.386 17.5334 203.966 17.1696 203.966 cv
16.862 203.966 16.6379 204.342 16.6379 205.05 cv
cp
18.049 205.01 mo
18.049 205.894 17.7214 206.381 17.1457 206.381 cv
16.6379 206.381 16.2941 205.906 16.2863 205.046 cv
16.2863 204.174 16.6618 203.695 17.1896 203.695 cv
17.7375 203.695 18.049 204.182 18.049 205.01 cv
cp
f
23.049 206.381 mo
35.549 192.131 li
48.049 157.881 li
60.549 172.881 li
73.049 164.881 li
85.549 167.381 li
98.049 153.131 li
110.549 183.881 li
123.049 164.881 li
135.549 173.381 li
148.049 147.881 li
160.549 156.397 li
160.549 206.381 li
23.049 206.381 li
cp
.196078 .764706 .745098 rgb
f
23.0488 206.897 mo
22.7725 206.897 22.5488 206.673 22.5488 206.397 cv
22.5488 131.897 li
22.5488 131.621 22.7725 131.397 23.0488 131.397 cv
23.3252 131.397 23.5488 131.621 23.5488 131.897 cv
23.5488 206.397 li
23.5488 206.673 23.3252 206.897 23.0488 206.897 cv
cp
.227451 .262745 .321569 rgb
f
160.549 206.881 mo
23.0488 206.881 li
22.7725 206.881 22.5488 206.658 22.5488 206.381 cv
22.5488 206.105 22.7725 205.881 23.0488 205.881 cv
160.549 205.881 li
160.825 205.881 161.049 206.105 161.049 206.381 cv
161.049 206.658 160.825 206.881 160.549 206.881 cv
cp
f
178.185 194.55 mo
178.185 195.225 178.393 195.609 178.713 195.609 cv
179.073 195.609 179.245 195.19 179.245 194.526 cv
179.245 193.886 179.081 193.467 178.717 193.467 cv
178.409 193.467 178.185 193.842 178.185 194.55 cv
cp
179.596 194.51 mo
179.596 195.393 179.269 195.881 178.693 195.881 cv
178.185 195.881 177.841 195.406 177.834 194.546 cv
177.834 193.675 178.209 193.195 178.737 193.195 cv
179.285 193.195 179.596 193.682 179.596 194.51 cv
cp
175.818 195.837 mo
175.818 195.622 li
176.093 195.353 li
176.757 194.722 177.057 194.386 177.061 193.995 cv
177.061 193.73 176.933 193.487 176.546 193.487 cv
176.31 193.487 176.113 193.606 175.994 193.706 cv
175.882 193.458 li
176.062 193.307 176.318 193.195 176.617 193.195 cv
177.177 193.195 177.413 193.579 177.413 193.951 cv
177.413 194.43 177.065 194.818 176.517 195.346 cv
176.31 195.538 li
176.31 195.545 li
177.477 195.545 li
177.477 195.837 li
175.818 195.837 li
cp
.384314 .415686 .458824 rgb
f
178.185 182.05 mo
178.185 182.725 178.393 183.109 178.713 183.109 cv
179.073 183.109 179.245 182.69 179.245 182.026 cv
179.245 181.386 179.081 180.967 178.717 180.967 cv
178.409 180.967 178.185 181.342 178.185 182.05 cv
cp
179.596 182.01 mo
179.596 182.893 179.269 183.381 178.693 183.381 cv
178.185 183.381 177.841 182.906 177.834 182.046 cv
177.834 181.175 178.209 180.695 178.737 180.695 cv
179.285 180.695 179.596 181.182 179.596 182.01 cv
cp
176.905 182.354 mo
176.905 181.486 li
176.905 181.35 176.909 181.214 176.917 181.079 cv
176.905 181.079 li
176.825 181.23 176.761 181.342 176.689 181.462 cv
176.054 182.346 li
176.054 182.354 li
176.905 182.354 li
cp
176.905 183.337 mo
176.905 182.63 li
175.698 182.63 li
175.698 182.398 li
176.857 180.739 li
177.237 180.739 li
177.237 182.354 li
177.601 182.354 li
177.601 182.63 li
177.237 182.63 li
177.237 183.337 li
176.905 183.337 li
cp
f
178.185 169.55 mo
178.185 170.225 178.393 170.609 178.713 170.609 cv
179.073 170.609 179.245 170.19 179.245 169.526 cv
179.245 168.886 179.081 168.467 178.717 168.467 cv
178.409 168.467 178.185 168.842 178.185 169.55 cv
cp
179.596 169.51 mo
179.596 170.393 179.269 170.881 178.693 170.881 cv
178.185 170.881 177.841 170.406 177.834 169.546 cv
177.834 168.675 178.209 168.195 178.737 168.195 cv
179.285 168.195 179.596 168.682 179.596 169.51 cv
cp
177.201 169.986 mo
177.201 169.614 176.989 169.39 176.665 169.39 cv
176.453 169.39 176.257 169.522 176.162 169.71 cv
176.137 169.75 176.122 169.802 176.122 169.866 cv
176.13 170.293 176.325 170.609 176.693 170.609 cv
176.997 170.609 177.201 170.358 177.201 169.986 cv
cp
177.301 168.487 mo
177.229 168.483 177.137 168.487 177.037 168.502 cv
176.485 168.595 176.193 168.998 176.133 169.426 cv
176.146 169.426 li
176.27 169.262 176.485 169.126 176.773 169.126 cv
177.233 169.126 177.557 169.458 177.557 169.966 cv
177.557 170.441 177.233 170.881 176.693 170.881 cv
176.137 170.881 175.774 170.45 175.774 169.774 cv
175.774 169.262 175.958 168.858 176.214 168.602 cv
176.429 168.391 176.717 168.259 177.045 168.219 cv
177.149 168.202 177.237 168.199 177.301 168.199 cv
177.301 168.487 li
cp
f
178.185 157.05 mo
178.185 157.725 178.393 158.109 178.713 158.109 cv
179.073 158.109 179.245 157.69 179.245 157.026 cv
179.245 156.386 179.081 155.967 178.717 155.967 cv
178.409 155.967 178.185 156.342 178.185 157.05 cv
cp
179.596 157.01 mo
179.596 157.893 179.269 158.381 178.693 158.381 cv
178.185 158.381 177.841 157.906 177.834 157.046 cv
177.834 156.175 178.209 155.695 178.737 155.695 cv
179.285 155.695 179.596 156.182 179.596 157.01 cv
cp
176.217 156.362 mo
176.217 156.622 176.413 156.762 176.713 156.842 cv
176.937 156.766 177.109 156.606 177.109 156.37 cv
177.109 156.163 176.985 155.947 176.669 155.947 cv
176.378 155.947 176.217 156.139 176.217 156.362 cv
cp
177.185 157.661 mo
177.185 157.346 176.965 157.194 176.613 157.094 cv
176.31 157.182 176.146 157.382 176.146 157.63 cv
176.133 157.893 176.334 158.125 176.665 158.125 cv
176.981 158.125 177.185 157.93 177.185 157.661 cv
cp
175.786 157.678 mo
175.786 157.35 175.982 157.118 176.301 156.982 cv
176.298 156.97 li
176.009 156.834 175.886 156.61 175.886 156.386 cv
175.886 155.975 176.234 155.695 176.689 155.695 cv
177.193 155.695 177.445 156.011 177.445 156.334 cv
177.445 156.554 177.337 156.79 177.017 156.942 cv
177.017 156.954 li
177.341 157.082 177.541 157.31 177.541 157.626 cv
177.541 158.077 177.153 158.381 176.657 158.381 cv
176.113 158.381 175.786 158.057 175.786 157.678 cv
cp
f
178.185 144.55 mo
178.185 145.225 178.393 145.609 178.713 145.609 cv
179.073 145.609 179.245 145.19 179.245 144.526 cv
179.245 143.886 179.081 143.467 178.717 143.467 cv
178.409 143.467 178.185 143.842 178.185 144.55 cv
cp
179.596 144.51 mo
179.596 145.393 179.269 145.881 178.693 145.881 cv
178.185 145.881 177.841 145.406 177.834 144.546 cv
177.834 143.675 178.209 143.195 178.737 143.195 cv
179.285 143.195 179.596 143.682 179.596 144.51 cv
cp
176.133 144.55 mo
176.133 145.225 176.341 145.609 176.661 145.609 cv
177.021 145.609 177.193 145.19 177.193 144.526 cv
177.193 143.886 177.028 143.467 176.665 143.467 cv
176.357 143.467 176.133 143.842 176.133 144.55 cv
cp
177.544 144.51 mo
177.544 145.393 177.216 145.881 176.641 145.881 cv
176.133 145.881 175.789 145.406 175.781 144.546 cv
175.781 143.675 176.157 143.195 176.685 143.195 cv
177.233 143.195 177.544 143.682 177.544 144.51 cv
cp
174.529 143.567 mo
174.521 143.567 li
174.069 143.81 li
174.002 143.542 li
174.569 143.239 li
174.869 143.239 li
174.869 145.837 li
174.529 145.837 li
174.529 143.567 li
cp
f
178.185 205.05 mo
178.185 205.726 178.393 206.11 178.713 206.11 cv
179.073 206.11 179.245 205.69 179.245 205.026 cv
179.245 204.386 179.081 203.966 178.717 203.966 cv
178.409 203.966 178.185 204.342 178.185 205.05 cv
cp
179.596 205.01 mo
179.596 205.894 179.269 206.381 178.693 206.381 cv
178.185 206.381 177.841 205.906 177.834 205.046 cv
177.834 204.174 178.209 203.695 178.737 203.695 cv
179.285 203.695 179.596 204.182 179.596 205.01 cv
cp
f
184.596 206.397 mo
184.596 185.397 li
197.096 174.397 li
209.596 151.397 li
222.096 152.897 li
234.596 161.397 li
247.096 156.397 li
259.596 145.897 li
272.096 143.897 li
284.596 159.397 li
297.096 154.397 li
309.596 143.897 li
322.096 141.897 li
322.096 206.397 li
184.596 206.397 li
cp
1 .352941 .203922 rgb
f
184.596 206.381 mo
184.596 197.897 li
197.096 192.131 li
209.596 164.881 li
222.096 172.881 li
234.596 164.881 li
247.096 167.381 li
259.596 153.131 li
272.096 183.881 li
284.596 164.881 li
297.096 173.381 li
309.596 147.881 li
322.096 156.397 li
322.096 206.397 li
184.596 206.381 li
cp
1 .764706 .286275 rgb
f
184.596 206.397 mo
197.096 202.897 li
209.596 193.897 li
222.096 181.397 li
234.596 182.897 li
247.096 178.397 li
259.596 181.397 li
272.096 188.897 li
284.596 180.397 li
297.096 176.397 li
309.596 166.897 li
322.096 160.897 li
322.096 206.397 li
184.596 206.397 li
cp
.0156863 .552941 .678431 rgb
f
322.096 206.881 mo
184.596 206.881 li
184.32 206.881 184.096 206.658 184.096 206.381 cv
184.096 206.105 184.32 205.881 184.596 205.881 cv
322.096 205.881 li
322.373 205.881 322.596 206.105 322.596 206.381 cv
322.596 206.658 322.373 206.881 322.096 206.881 cv
cp
.227451 .262745 .321569 rgb
f
184.596 206.897 mo
184.32 206.897 184.096 206.673 184.096 206.397 cv
184.096 131.897 li
184.096 131.621 184.32 131.397 184.596 131.397 cv
184.873 131.397 185.096 131.621 185.096 131.897 cv
185.096 206.397 li
185.096 206.673 184.873 206.897 184.596 206.897 cv
cp
f
341.135 194.55 mo
341.135 195.225 341.343 195.609 341.662 195.609 cv
342.022 195.609 342.194 195.19 342.194 194.526 cv
342.194 193.886 342.03 193.467 341.666 193.467 cv
341.359 193.467 341.135 193.842 341.135 194.55 cv
cp
342.546 194.51 mo
342.546 195.393 342.218 195.881 341.642 195.881 cv
341.135 195.881 340.791 195.406 340.783 194.546 cv
340.783 193.675 341.158 193.195 341.686 193.195 cv
342.234 193.195 342.546 193.682 342.546 194.51 cv
cp
338.767 195.837 mo
338.767 195.622 li
339.043 195.353 li
339.706 194.722 340.007 194.386 340.011 193.995 cv
340.011 193.73 339.883 193.487 339.495 193.487 cv
339.259 193.487 339.063 193.606 338.943 193.706 cv
338.831 193.458 li
339.011 193.307 339.267 193.195 339.567 193.195 cv
340.126 193.195 340.362 193.579 340.362 193.951 cv
340.362 194.43 340.014 194.818 339.467 195.346 cv
339.259 195.538 li
339.259 195.545 li
340.426 195.545 li
340.426 195.837 li
338.767 195.837 li
cp
.380392 .411765 .454902 rgb
f
341.135 182.05 mo
341.135 182.725 341.343 183.109 341.662 183.109 cv
342.022 183.109 342.194 182.69 342.194 182.026 cv
342.194 181.386 342.03 180.967 341.666 180.967 cv
341.359 180.967 341.135 181.342 341.135 182.05 cv
cp
342.546 182.01 mo
342.546 182.893 342.218 183.381 341.642 183.381 cv
341.135 183.381 340.791 182.906 340.783 182.046 cv
340.783 181.175 341.158 180.695 341.686 180.695 cv
342.234 180.695 342.546 181.182 342.546 182.01 cv
cp
339.854 182.354 mo
339.854 181.486 li
339.854 181.35 339.859 181.214 339.866 181.079 cv
339.854 181.079 li
339.775 181.23 339.711 181.342 339.638 181.462 cv
339.003 182.346 li
339.003 182.354 li
339.854 182.354 li
cp
339.854 183.337 mo
339.854 182.63 li
338.647 182.63 li
338.647 182.398 li
339.806 180.739 li
340.186 180.739 li
340.186 182.354 li
340.55 182.354 li
340.55 182.63 li
340.186 182.63 li
340.186 183.337 li
339.854 183.337 li
cp
f
341.135 169.55 mo
341.135 170.225 341.343 170.609 341.662 170.609 cv
342.022 170.609 342.194 170.19 342.194 169.526 cv
342.194 168.886 342.03 168.467 341.666 168.467 cv
341.359 168.467 341.135 168.842 341.135 169.55 cv
cp
342.546 169.51 mo
342.546 170.393 342.218 170.881 341.642 170.881 cv
341.135 170.881 340.791 170.406 340.783 169.546 cv
340.783 168.675 341.158 168.195 341.686 168.195 cv
342.234 168.195 342.546 168.682 342.546 169.51 cv
cp
340.15 169.986 mo
340.15 169.614 339.938 169.39 339.615 169.39 cv
339.403 169.39 339.207 169.522 339.111 169.71 cv
339.087 169.75 339.071 169.802 339.071 169.866 cv
339.079 170.293 339.275 170.609 339.643 170.609 cv
339.947 170.609 340.15 170.358 340.15 169.986 cv
cp
340.25 168.487 mo
340.178 168.483 340.086 168.487 339.987 168.502 cv
339.435 168.595 339.143 168.998 339.083 169.426 cv
339.095 169.426 li
339.219 169.262 339.435 169.126 339.723 169.126 cv
340.182 169.126 340.506 169.458 340.506 169.966 cv
340.506 170.441 340.182 170.881 339.643 170.881 cv
339.087 170.881 338.723 170.45 338.723 169.774 cv
338.723 169.262 338.907 168.858 339.163 168.602 cv
339.379 168.391 339.667 168.259 339.994 168.219 cv
340.098 168.202 340.186 168.199 340.25 168.199 cv
340.25 168.487 li
cp
f
341.135 157.05 mo
341.135 157.725 341.343 158.109 341.662 158.109 cv
342.022 158.109 342.194 157.69 342.194 157.026 cv
342.194 156.386 342.03 155.967 341.666 155.967 cv
341.359 155.967 341.135 156.342 341.135 157.05 cv
cp
342.546 157.01 mo
342.546 157.893 342.218 158.381 341.642 158.381 cv
341.135 158.381 340.791 157.906 340.783 157.046 cv
340.783 156.175 341.158 155.695 341.686 155.695 cv
342.234 155.695 342.546 156.182 342.546 157.01 cv
cp
339.167 156.362 mo
339.167 156.622 339.363 156.762 339.662 156.842 cv
339.887 156.766 340.058 156.606 340.058 156.37 cv
340.058 156.163 339.934 155.947 339.618 155.947 cv
339.327 155.947 339.167 156.139 339.167 156.362 cv
cp
340.135 157.661 mo
340.135 157.346 339.914 157.194 339.563 157.094 cv
339.259 157.182 339.095 157.382 339.095 157.63 cv
339.083 157.893 339.283 158.125 339.615 158.125 cv
339.93 158.125 340.135 157.93 340.135 157.661 cv
cp
338.735 157.678 mo
338.735 157.35 338.931 157.118 339.251 156.982 cv
339.247 156.97 li
338.959 156.834 338.835 156.61 338.835 156.386 cv
338.835 155.975 339.183 155.695 339.638 155.695 cv
340.142 155.695 340.394 156.011 340.394 156.334 cv
340.394 156.554 340.286 156.79 339.967 156.942 cv
339.967 156.954 li
340.29 157.082 340.49 157.31 340.49 157.626 cv
340.49 158.077 340.102 158.381 339.607 158.381 cv
339.063 158.381 338.735 158.057 338.735 157.678 cv
cp
f
341.135 144.55 mo
341.135 145.225 341.343 145.609 341.662 145.609 cv
342.022 145.609 342.194 145.19 342.194 144.526 cv
342.194 143.886 342.03 143.467 341.666 143.467 cv
341.359 143.467 341.135 143.842 341.135 144.55 cv
cp
342.546 144.51 mo
342.546 145.393 342.218 145.881 341.642 145.881 cv
341.135 145.881 340.791 145.406 340.783 144.546 cv
340.783 143.675 341.158 143.195 341.686 143.195 cv
342.234 143.195 342.546 143.682 342.546 144.51 cv
cp
339.082 144.55 mo
339.082 145.225 339.29 145.609 339.61 145.609 cv
339.97 145.609 340.142 145.19 340.142 144.526 cv
340.142 143.886 339.978 143.467 339.614 143.467 cv
339.306 143.467 339.082 143.842 339.082 144.55 cv
cp
340.493 144.51 mo
340.493 145.393 340.166 145.881 339.59 145.881 cv
339.082 145.881 338.739 145.406 338.731 144.546 cv
338.731 143.675 339.106 143.195 339.634 143.195 cv
340.182 143.195 340.493 143.682 340.493 144.51 cv
cp
337.478 143.567 mo
337.47 143.567 li
337.019 143.81 li
336.951 143.542 li
337.518 143.239 li
337.818 143.239 li
337.818 145.837 li
337.478 145.837 li
337.478 143.567 li
cp
f
341.135 205.05 mo
341.135 205.726 341.343 206.11 341.662 206.11 cv
342.022 206.11 342.194 205.69 342.194 205.026 cv
342.194 204.386 342.03 203.966 341.666 203.966 cv
341.359 203.966 341.135 204.342 341.135 205.05 cv
cp
342.546 205.01 mo
342.546 205.894 342.218 206.381 341.642 206.381 cv
341.135 206.381 340.791 205.906 340.783 205.046 cv
340.783 204.174 341.158 203.695 341.686 203.695 cv
342.234 203.695 342.546 204.182 342.546 205.01 cv
cp
f
347.546 198.397 mo
347.357 198.397 347.176 198.29 347.092 198.107 cv
346.977 197.856 347.086 197.559 347.337 197.443 cv
359.705 191.738 li
372.319 172.313 li
384.925 175.338 li
397.452 165.316 li
409.907 169.8 li
422.688 156.253 li
435.12 182.859 li
447.407 164.183 li
459.875 172.66 li
472.33 150.24 li
485.248 155.94 li
485.5 156.051 485.615 156.346 485.503 156.599 cv
485.393 156.852 485.099 156.964 484.844 156.855 cv
472.762 151.523 li
460.217 174.103 li
447.685 165.58 li
434.972 184.904 li
422.404 158.01 li
410.185 170.963 li
397.64 166.447 li
385.167 176.425 li
372.772 173.45 li
360.387 192.525 li
347.755 198.351 li
347.688 198.382 347.616 198.397 347.546 198.397 cv
cp
1 .352941 .203922 rgb
f
347.546 206.397 mo
360.046 202.897 li
372.546 193.897 li
385.046 181.397 li
397.546 182.897 li
410.046 178.397 li
422.546 181.397 li
435.046 188.897 li
447.546 180.397 li
460.046 176.397 li
472.546 166.897 li
485.046 160.897 li
485.046 206.397 li
347.546 206.397 li
cp
1 .764706 .286275 rgb
f
485.046 206.881 mo
347.546 206.881 li
347.27 206.881 347.046 206.658 347.046 206.381 cv
347.046 206.105 347.27 205.881 347.546 205.881 cv
485.046 205.881 li
485.322 205.881 485.546 206.105 485.546 206.381 cv
485.546 206.658 485.322 206.881 485.046 206.881 cv
cp
.372549 .403922 .447059 rgb
f
362.546 155.397 mo
362.546 154.016 361.426 152.897 360.046 152.897 cv
358.665 152.897 357.546 154.016 357.546 155.397 cv
357.546 156.778 358.665 157.897 360.046 157.897 cv
361.426 157.897 362.546 156.778 362.546 155.397 cv
cp
.0156863 .552941 .678431 rgb
f
375.046 149.397 mo
375.046 148.016 373.926 146.897 372.546 146.897 cv
371.165 146.897 370.046 148.016 370.046 149.397 cv
370.046 150.778 371.165 151.897 372.546 151.897 cv
373.926 151.897 375.046 150.778 375.046 149.397 cv
cp
f
387.546 151.897 mo
387.546 150.516 386.426 149.397 385.046 149.397 cv
383.665 149.397 382.546 150.516 382.546 151.897 cv
382.546 153.278 383.665 154.397 385.046 154.397 cv
386.426 154.397 387.546 153.278 387.546 151.897 cv
cp
f
400.046 157.397 mo
400.046 156.016 398.926 154.897 397.546 154.897 cv
396.165 154.897 395.046 156.016 395.046 157.397 cv
395.046 158.778 396.165 159.897 397.546 159.897 cv
398.926 159.897 400.046 158.778 400.046 157.397 cv
cp
f
412.546 152.397 mo
412.546 151.016 411.426 149.897 410.046 149.897 cv
408.665 149.897 407.546 151.016 407.546 152.397 cv
407.546 153.778 408.665 154.897 410.046 154.897 cv
411.426 154.897 412.546 153.778 412.546 152.397 cv
cp
f
425.046 145.897 mo
425.046 144.516 423.926 143.397 422.546 143.397 cv
421.165 143.397 420.046 144.516 420.046 145.897 cv
420.046 147.278 421.165 148.397 422.546 148.397 cv
423.926 148.397 425.046 147.278 425.046 145.897 cv
cp
f
437.546 140.897 mo
437.546 139.516 436.426 138.397 435.046 138.397 cv
433.665 138.397 432.546 139.516 432.546 140.897 cv
432.546 142.278 433.665 143.397 435.046 143.397 cv
436.426 143.397 437.546 142.278 437.546 140.897 cv
cp
f
450.046 150.397 mo
450.046 149.016 448.926 147.897 447.546 147.897 cv
446.165 147.897 445.046 149.016 445.046 150.397 cv
445.046 151.778 446.165 152.897 447.546 152.897 cv
448.926 152.897 450.046 151.778 450.046 150.397 cv
cp
f
462.546 145.397 mo
462.546 144.016 461.426 142.897 460.046 142.897 cv
458.665 142.897 457.546 144.016 457.546 145.397 cv
457.546 146.778 458.665 147.897 460.046 147.897 cv
461.426 147.897 462.546 146.778 462.546 145.397 cv
cp
f
475.046 137.897 mo
475.046 136.516 473.926 135.397 472.546 135.397 cv
471.165 135.397 470.046 136.516 470.046 137.897 cv
470.046 139.278 471.165 140.397 472.546 140.397 cv
473.926 140.397 475.046 139.278 475.046 137.897 cv
cp
f
487.546 141.897 mo
487.546 140.516 486.426 139.397 485.046 139.397 cv
483.665 139.397 482.546 140.516 482.546 141.897 cv
482.546 143.278 483.665 144.397 485.046 144.397 cv
486.426 144.397 487.546 143.278 487.546 141.897 cv
cp
f
347.546 206.897 mo
347.27 206.897 347.046 206.673 347.046 206.397 cv
347.046 131.897 li
347.046 131.621 347.27 131.397 347.546 131.397 cv
347.822 131.397 348.046 131.621 348.046 131.897 cv
348.046 206.397 li
348.046 206.673 347.822 206.897 347.546 206.897 cv
cp
.372549 .403922 .447059 rgb
f
16.6379 299.05 mo
16.6379 299.725 16.8459 300.109 17.1657 300.109 cv
17.5256 300.109 17.6975 299.69 17.6975 299.026 cv
17.6975 298.386 17.5334 297.967 17.1696 297.967 cv
16.862 297.967 16.6379 298.342 16.6379 299.05 cv
cp
18.049 299.01 mo
18.049 299.893 17.7214 300.381 17.1457 300.381 cv
16.6379 300.381 16.2941 299.906 16.2863 299.046 cv
16.2863 298.175 16.6618 297.695 17.1896 297.695 cv
17.7375 297.695 18.049 298.182 18.049 299.01 cv
cp
14.2702 300.337 mo
14.2702 300.121 li
14.5461 299.853 li
15.2097 299.222 15.51 298.886 15.5139 298.495 cv
15.5139 298.23 15.3859 297.987 14.9982 297.987 cv
14.7624 297.987 14.5661 298.106 14.4465 298.206 cv
14.3342 297.958 li
14.5143 297.806 14.7702 297.695 15.07 297.695 cv
15.6296 297.695 15.8654 298.078 15.8654 298.451 cv
15.8654 298.93 15.5178 299.318 14.9699 299.846 cv
14.7624 300.038 li
14.7624 300.045 li
15.9294 300.045 li
15.9294 300.337 li
14.2702 300.337 li
cp
0 0 0 rgb
f
16.6379 286.55 mo
16.6379 287.225 16.8459 287.609 17.1657 287.609 cv
17.5256 287.609 17.6975 287.19 17.6975 286.526 cv
17.6975 285.886 17.5334 285.467 17.1696 285.467 cv
16.862 285.467 16.6379 285.842 16.6379 286.55 cv
cp
18.049 286.51 mo
18.049 287.393 17.7214 287.881 17.1457 287.881 cv
16.6379 287.881 16.2941 287.406 16.2863 286.546 cv
16.2863 285.675 16.6618 285.195 17.1896 285.195 cv
17.7375 285.195 18.049 285.682 18.049 286.51 cv
cp
15.3576 286.854 mo
15.3576 285.986 li
15.3576 285.85 15.362 285.714 15.3698 285.578 cv
15.3576 285.578 li
15.278 285.73 15.2141 285.842 15.1418 285.962 cv
14.5065 286.846 li
14.5065 286.854 li
15.3576 286.854 li
cp
15.3576 287.837 mo
15.3576 287.13 li
14.1506 287.13 li
14.1506 286.898 li
15.3098 285.239 li
15.6896 285.239 li
15.6896 286.854 li
16.0534 286.854 li
16.0534 287.13 li
15.6896 287.13 li
15.6896 287.837 li
15.3576 287.837 li
cp
f
16.6379 274.05 mo
16.6379 274.725 16.8459 275.109 17.1657 275.109 cv
17.5256 275.109 17.6975 274.69 17.6975 274.026 cv
17.6975 273.386 17.5334 272.967 17.1696 272.967 cv
16.862 272.967 16.6379 273.342 16.6379 274.05 cv
cp
18.049 274.01 mo
18.049 274.893 17.7214 275.381 17.1457 275.381 cv
16.6379 275.381 16.2941 274.906 16.2863 274.046 cv
16.2863 273.175 16.6618 272.695 17.1896 272.695 cv
17.7375 272.695 18.049 273.182 18.049 274.01 cv
cp
15.6535 274.486 mo
15.6535 274.114 15.4416 273.89 15.1179 273.89 cv
14.9059 273.89 14.7101 274.022 14.6144 274.21 cv
14.59 274.25 14.5744 274.302 14.5744 274.366 cv
14.5822 274.793 14.778 275.109 15.1462 275.109 cv
15.4499 275.109 15.6535 274.858 15.6535 274.486 cv
cp
15.7536 272.987 mo
15.6818 272.983 15.5895 272.987 15.4899 273.002 cv
14.9382 273.095 14.6462 273.498 14.5861 273.926 cv
14.5983 273.926 li
14.7224 273.762 14.9382 273.626 15.2258 273.626 cv
15.6857 273.626 16.0095 273.958 16.0095 274.466 cv
16.0095 274.941 15.6857 275.381 15.1462 275.381 cv
14.59 275.381 14.2263 274.95 14.2263 274.274 cv
14.2263 273.762 14.4103 273.358 14.6662 273.102 cv
14.882 272.891 15.1701 272.759 15.4977 272.719 cv
15.6017 272.703 15.6896 272.699 15.7536 272.699 cv
15.7536 272.987 li
cp
f
16.6379 261.55 mo
16.6379 262.225 16.8459 262.609 17.1657 262.609 cv
17.5256 262.609 17.6975 262.19 17.6975 261.526 cv
17.6975 260.886 17.5334 260.467 17.1696 260.467 cv
16.862 260.467 16.6379 260.842 16.6379 261.55 cv
cp
18.049 261.51 mo
18.049 262.393 17.7214 262.881 17.1457 262.881 cv
16.6379 262.881 16.2941 262.406 16.2863 261.546 cv
16.2863 260.675 16.6618 260.195 17.1896 260.195 cv
17.7375 260.195 18.049 260.682 18.049 261.51 cv
cp
14.6701 260.862 mo
14.6701 261.122 14.8659 261.262 15.1657 261.342 cv
15.3898 261.266 15.5617 261.106 15.5617 260.871 cv
15.5617 260.663 15.4377 260.447 15.1218 260.447 cv
14.8303 260.447 14.6701 260.639 14.6701 260.862 cv
cp
15.6379 262.161 mo
15.6379 261.846 15.4177 261.694 15.0661 261.594 cv
14.7624 261.682 14.5983 261.882 14.5983 262.13 cv
14.5861 262.393 14.7863 262.625 15.1179 262.625 cv
15.4338 262.625 15.6379 262.43 15.6379 262.161 cv
cp
14.2385 262.178 mo
14.2385 261.85 14.4343 261.618 14.7541 261.482 cv
14.7502 261.47 li
14.4621 261.334 14.3386 261.11 14.3386 260.886 cv
14.3386 260.474 14.6862 260.195 15.1418 260.195 cv
15.6457 260.195 15.8976 260.511 15.8976 260.834 cv
15.8976 261.054 15.7897 261.29 15.4699 261.442 cv
15.4699 261.454 li
15.7936 261.582 15.9933 261.81 15.9933 262.126 cv
15.9933 262.578 15.6057 262.881 15.11 262.881 cv
14.5661 262.881 14.2385 262.557 14.2385 262.178 cv
cp
f
16.6379 249.05 mo
16.6379 249.725 16.8459 250.109 17.1657 250.109 cv
17.5256 250.109 17.6975 249.69 17.6975 249.026 cv
17.6975 248.386 17.5334 247.967 17.1696 247.967 cv
16.862 247.967 16.6379 248.342 16.6379 249.05 cv
cp
18.049 249.01 mo
18.049 249.893 17.7214 250.381 17.1457 250.381 cv
16.6379 250.381 16.2941 249.906 16.2863 249.046 cv
16.2863 248.175 16.6618 247.695 17.1896 247.695 cv
17.7375 247.695 18.049 248.182 18.049 249.01 cv
cp
14.5856 249.05 mo
14.5856 249.725 14.7936 250.109 15.1135 250.109 cv
15.4733 250.109 15.6452 249.69 15.6452 249.026 cv
15.6452 248.386 15.4811 247.967 15.1174 247.967 cv
14.8098 247.967 14.5856 248.342 14.5856 249.05 cv
cp
15.9968 249.01 mo
15.9968 249.893 15.6691 250.381 15.0934 250.381 cv
14.5856 250.381 14.2419 249.906 14.2341 249.046 cv
14.2341 248.175 14.6096 247.695 15.1374 247.695 cv
15.6852 247.695 15.9968 248.182 15.9968 249.01 cv
cp
12.9816 248.067 mo
12.9738 248.067 li
12.5222 248.31 li
12.4543 248.042 li
13.0217 247.739 li
13.3215 247.739 li
13.3215 250.337 li
12.9816 250.337 li
12.9816 248.067 li
cp
f
16.6379 309.55 mo
16.6379 310.226 16.8459 310.61 17.1657 310.61 cv
17.5256 310.61 17.6975 310.19 17.6975 309.526 cv
17.6975 308.886 17.5334 308.466 17.1696 308.466 cv
16.862 308.466 16.6379 308.842 16.6379 309.55 cv
cp
18.049 309.51 mo
18.049 310.394 17.7214 310.881 17.1457 310.881 cv
16.6379 310.881 16.2941 310.406 16.2863 309.546 cv
16.2863 308.674 16.6618 308.195 17.1896 308.195 cv
17.7375 308.195 18.049 308.682 18.049 309.51 cv
cp
f
23.0488 311.397 mo
22.7725 311.397 22.5488 311.173 22.5488 310.897 cv
22.5488 236.397 li
22.5488 236.121 22.7725 235.897 23.0488 235.897 cv
23.3252 235.897 23.5488 236.121 23.5488 236.397 cv
23.5488 310.897 li
23.5488 311.173 23.3252 311.397 23.0488 311.397 cv
cp
f
36.299 274.897 mo
26.299 274.897 li
26.299 310.897 li
36.299 310.897 li
36.299 274.897 li
cp
.521569 .788235 .313726 rgb
f
48.799 263.897 mo
38.799 263.897 li
38.799 310.897 li
48.799 310.897 li
48.799 263.897 li
cp
.878431 .878431 .886275 rgb
f
61.299 272.897 mo
51.299 272.897 li
51.299 310.897 li
61.299 310.897 li
61.299 272.897 li
cp
1 .764706 .286275 rgb
f
73.799 260.897 mo
63.799 260.897 li
63.799 310.897 li
73.799 310.897 li
73.799 260.897 li
cp
.196078 .764706 .745098 rgb
f
86.299 250.897 mo
76.299 250.897 li
76.299 310.897 li
86.299 310.897 li
86.299 250.897 li
cp
.686275 .721569 .74902 rgb
f
98.799 248.897 mo
88.799 248.897 li
88.799 310.897 li
98.799 310.897 li
98.799 248.897 li
cp
1 .352941 .203922 rgb
f
111.299 256.897 mo
101.299 256.897 li
101.299 310.897 li
111.299 310.897 li
111.299 256.897 li
cp
.0156863 .552941 .678431 rgb
f
123.799 266.897 mo
113.799 266.897 li
113.799 310.897 li
123.799 310.897 li
123.799 266.897 li
cp
.227451 .262745 .321569 rgb
f
136.299 277.897 mo
126.299 277.897 li
126.299 310.897 li
136.299 310.897 li
136.299 277.897 li
cp
.635294 .2 .560784 rgb
f
148.799 258.897 mo
138.799 258.897 li
138.799 310.897 li
148.799 310.897 li
148.799 258.897 li
cp
.52549 .0313726 .219608 rgb
f
160.549 311.397 mo
23.0488 311.397 li
22.7725 311.397 22.5488 311.173 22.5488 310.897 cv
22.5488 310.62 22.7725 310.397 23.0488 310.397 cv
160.549 310.397 li
160.825 310.397 161.049 310.62 161.049 310.897 cv
161.049 311.173 160.825 311.397 160.549 311.397 cv
cp
0 0 0 rgb
f
178.185 299.05 mo
178.185 299.725 178.393 300.109 178.713 300.109 cv
179.073 300.109 179.245 299.69 179.245 299.026 cv
179.245 298.386 179.081 297.967 178.717 297.967 cv
178.409 297.967 178.185 298.342 178.185 299.05 cv
cp
179.596 299.01 mo
179.596 299.893 179.269 300.381 178.693 300.381 cv
178.185 300.381 177.841 299.906 177.834 299.046 cv
177.834 298.175 178.209 297.695 178.737 297.695 cv
179.285 297.695 179.596 298.182 179.596 299.01 cv
cp
175.818 300.337 mo
175.818 300.121 li
176.093 299.853 li
176.757 299.222 177.057 298.886 177.061 298.495 cv
177.061 298.23 176.933 297.987 176.546 297.987 cv
176.31 297.987 176.113 298.106 175.994 298.206 cv
175.882 297.958 li
176.062 297.806 176.318 297.695 176.617 297.695 cv
177.177 297.695 177.413 298.078 177.413 298.451 cv
177.413 298.93 177.065 299.318 176.517 299.846 cv
176.31 300.038 li
176.31 300.045 li
177.477 300.045 li
177.477 300.337 li
175.818 300.337 li
cp
.372549 .403922 .454902 rgb
f
178.185 286.55 mo
178.185 287.225 178.393 287.609 178.713 287.609 cv
179.073 287.609 179.245 287.19 179.245 286.526 cv
179.245 285.886 179.081 285.467 178.717 285.467 cv
178.409 285.467 178.185 285.842 178.185 286.55 cv
cp
179.596 286.51 mo
179.596 287.393 179.269 287.881 178.693 287.881 cv
178.185 287.881 177.841 287.406 177.834 286.546 cv
177.834 285.675 178.209 285.195 178.737 285.195 cv
179.285 285.195 179.596 285.682 179.596 286.51 cv
cp
176.905 286.854 mo
176.905 285.986 li
176.905 285.85 176.909 285.714 176.917 285.578 cv
176.905 285.578 li
176.825 285.73 176.761 285.842 176.689 285.962 cv
176.054 286.846 li
176.054 286.854 li
176.905 286.854 li
cp
176.905 287.837 mo
176.905 287.13 li
175.698 287.13 li
175.698 286.898 li
176.857 285.239 li
177.237 285.239 li
177.237 286.854 li
177.601 286.854 li
177.601 287.13 li
177.237 287.13 li
177.237 287.837 li
176.905 287.837 li
cp
f
178.185 274.05 mo
178.185 274.725 178.393 275.109 178.713 275.109 cv
179.073 275.109 179.245 274.69 179.245 274.026 cv
179.245 273.386 179.081 272.967 178.717 272.967 cv
178.409 272.967 178.185 273.342 178.185 274.05 cv
cp
179.596 274.01 mo
179.596 274.893 179.269 275.381 178.693 275.381 cv
178.185 275.381 177.841 274.906 177.834 274.046 cv
177.834 273.175 178.209 272.695 178.737 272.695 cv
179.285 272.695 179.596 273.182 179.596 274.01 cv
cp
177.201 274.486 mo
177.201 274.114 176.989 273.89 176.665 273.89 cv
176.453 273.89 176.257 274.022 176.162 274.21 cv
176.137 274.25 176.122 274.302 176.122 274.366 cv
176.13 274.793 176.325 275.109 176.693 275.109 cv
176.997 275.109 177.201 274.858 177.201 274.486 cv
cp
177.301 272.987 mo
177.229 272.983 177.137 272.987 177.037 273.002 cv
176.485 273.095 176.193 273.498 176.133 273.926 cv
176.146 273.926 li
176.27 273.762 176.485 273.626 176.773 273.626 cv
177.233 273.626 177.557 273.958 177.557 274.466 cv
177.557 274.941 177.233 275.381 176.693 275.381 cv
176.137 275.381 175.774 274.95 175.774 274.274 cv
175.774 273.762 175.958 273.358 176.214 273.102 cv
176.429 272.891 176.717 272.759 177.045 272.719 cv
177.149 272.703 177.237 272.699 177.301 272.699 cv
177.301 272.987 li
cp
f
178.185 261.55 mo
178.185 262.225 178.393 262.609 178.713 262.609 cv
179.073 262.609 179.245 262.19 179.245 261.526 cv
179.245 260.886 179.081 260.467 178.717 260.467 cv
178.409 260.467 178.185 260.842 178.185 261.55 cv
cp
179.596 261.51 mo
179.596 262.393 179.269 262.881 178.693 262.881 cv
178.185 262.881 177.841 262.406 177.834 261.546 cv
177.834 260.675 178.209 260.195 178.737 260.195 cv
179.285 260.195 179.596 260.682 179.596 261.51 cv
cp
176.217 260.862 mo
176.217 261.122 176.413 261.262 176.713 261.342 cv
176.937 261.266 177.109 261.106 177.109 260.871 cv
177.109 260.663 176.985 260.447 176.669 260.447 cv
176.378 260.447 176.217 260.639 176.217 260.862 cv
cp
177.185 262.161 mo
177.185 261.846 176.965 261.694 176.613 261.594 cv
176.31 261.682 176.146 261.882 176.146 262.13 cv
176.133 262.393 176.334 262.625 176.665 262.625 cv
176.981 262.625 177.185 262.43 177.185 262.161 cv
cp
175.786 262.178 mo
175.786 261.85 175.982 261.618 176.301 261.482 cv
176.298 261.47 li
176.009 261.334 175.886 261.11 175.886 260.886 cv
175.886 260.474 176.234 260.195 176.689 260.195 cv
177.193 260.195 177.445 260.511 177.445 260.834 cv
177.445 261.054 177.337 261.29 177.017 261.442 cv
177.017 261.454 li
177.341 261.582 177.541 261.81 177.541 262.126 cv
177.541 262.578 177.153 262.881 176.657 262.881 cv
176.113 262.881 175.786 262.557 175.786 262.178 cv
cp
f
178.185 249.05 mo
178.185 249.725 178.393 250.109 178.713 250.109 cv
179.073 250.109 179.245 249.69 179.245 249.026 cv
179.245 248.386 179.081 247.967 178.717 247.967 cv
178.409 247.967 178.185 248.342 178.185 249.05 cv
cp
179.596 249.01 mo
179.596 249.893 179.269 250.381 178.693 250.381 cv
178.185 250.381 177.841 249.906 177.834 249.046 cv
177.834 248.175 178.209 247.695 178.737 247.695 cv
179.285 247.695 179.596 248.182 179.596 249.01 cv
cp
176.133 249.05 mo
176.133 249.725 176.341 250.109 176.661 250.109 cv
177.021 250.109 177.193 249.69 177.193 249.026 cv
177.193 248.386 177.028 247.967 176.665 247.967 cv
176.357 247.967 176.133 248.342 176.133 249.05 cv
cp
177.544 249.01 mo
177.544 249.893 177.216 250.381 176.641 250.381 cv
176.133 250.381 175.789 249.906 175.781 249.046 cv
175.781 248.175 176.157 247.695 176.685 247.695 cv
177.233 247.695 177.544 248.182 177.544 249.01 cv
cp
174.529 248.067 mo
174.521 248.067 li
174.069 248.31 li
174.002 248.042 li
174.569 247.739 li
174.869 247.739 li
174.869 250.337 li
174.529 250.337 li
174.529 248.067 li
cp
f
178.185 309.55 mo
178.185 310.226 178.393 310.61 178.713 310.61 cv
179.073 310.61 179.245 310.19 179.245 309.526 cv
179.245 308.886 179.081 308.466 178.717 308.466 cv
178.409 308.466 178.185 308.842 178.185 309.55 cv
cp
179.596 309.51 mo
179.596 310.394 179.269 310.881 178.693 310.881 cv
178.185 310.881 177.841 310.406 177.834 309.546 cv
177.834 308.674 178.209 308.195 178.737 308.195 cv
179.285 308.195 179.596 308.682 179.596 309.51 cv
cp
f
197.846 289.897 mo
187.846 289.897 li
187.846 310.897 li
197.846 310.897 li
197.846 289.897 li
cp
.227451 .262745 .321569 rgb
f
210.346 279.897 mo
200.346 279.897 li
200.346 310.897 li
210.346 310.897 li
210.346 279.897 li
cp
f
222.846 267.897 mo
212.846 267.897 li
212.846 310.897 li
222.846 310.897 li
222.846 267.897 li
cp
f
235.346 275.897 mo
225.346 275.897 li
225.346 310.897 li
235.346 310.897 li
235.346 275.897 li
cp
f
247.846 260.897 mo
237.846 260.897 li
237.846 310.897 li
247.846 310.897 li
247.846 260.897 li
cp
f
260.346 289.897 mo
250.346 289.897 li
250.346 310.897 li
260.346 310.897 li
260.346 289.897 li
cp
f
272.846 268.897 mo
262.846 268.897 li
262.846 310.897 li
272.846 310.897 li
272.846 268.897 li
cp
f
285.346 279.897 mo
275.346 279.897 li
275.346 310.897 li
285.346 310.897 li
285.346 279.897 li
cp
f
297.846 262.897 mo
287.846 262.897 li
287.846 310.897 li
297.846 310.897 li
297.846 262.897 li
cp
f
310.346 291.897 mo
300.346 291.897 li
300.346 310.897 li
310.346 310.897 li
310.346 291.897 li
cp
f
197.846 248.897 mo
187.846 248.897 li
187.846 289.897 li
197.846 289.897 li
197.846 248.897 li
cp
1 .764706 .286275 rgb
f
210.346 248.897 mo
200.346 248.897 li
200.346 279.897 li
210.346 279.897 li
210.346 248.897 li
cp
f
222.846 248.897 mo
212.846 248.897 li
212.846 267.897 li
222.846 267.897 li
222.846 248.897 li
cp
f
235.346 248.897 mo
225.346 248.897 li
225.346 275.897 li
235.346 275.897 li
235.346 248.897 li
cp
f
247.846 248.897 mo
237.846 248.897 li
237.846 260.897 li
247.846 260.897 li
247.846 248.897 li
cp
f
260.346 248.897 mo
250.346 248.897 li
250.346 289.897 li
260.346 289.897 li
260.346 248.897 li
cp
f
272.846 248.897 mo
262.846 248.897 li
262.846 268.897 li
272.846 268.897 li
272.846 248.897 li
cp
f
285.346 248.897 mo
275.346 248.897 li
275.346 279.897 li
285.346 279.897 li
285.346 248.897 li
cp
f
297.846 248.897 mo
287.846 248.897 li
287.846 262.897 li
297.846 262.897 li
297.846 248.897 li
cp
f
310.346 248.897 mo
300.346 248.897 li
300.346 291.897 li
310.346 291.897 li
310.346 248.897 li
cp
f
184.596 311.397 mo
184.32 311.397 184.096 311.173 184.096 310.897 cv
184.096 236.397 li
184.096 236.121 184.32 235.897 184.596 235.897 cv
184.873 235.897 185.096 236.121 185.096 236.397 cv
185.096 310.897 li
185.096 311.173 184.873 311.397 184.596 311.397 cv
cp
.227451 .262745 .321569 rgb
f
322.097 311.397 mo
184.596 311.397 li
184.32 311.397 184.096 311.173 184.096 310.897 cv
184.096 310.62 184.32 310.397 184.596 310.397 cv
322.097 310.397 li
322.373 310.397 322.597 310.62 322.597 310.897 cv
322.597 311.173 322.373 311.397 322.097 311.397 cv
cp
f
341.135 299.05 mo
341.135 299.725 341.343 300.109 341.662 300.109 cv
342.022 300.109 342.194 299.69 342.194 299.026 cv
342.194 298.386 342.03 297.967 341.666 297.967 cv
341.359 297.967 341.135 298.342 341.135 299.05 cv
cp
342.546 299.01 mo
342.546 299.893 342.218 300.381 341.642 300.381 cv
341.135 300.381 340.791 299.906 340.783 299.046 cv
340.783 298.175 341.158 297.695 341.686 297.695 cv
342.234 297.695 342.546 298.182 342.546 299.01 cv
cp
338.767 300.337 mo
338.767 300.121 li
339.043 299.853 li
339.706 299.222 340.007 298.886 340.011 298.495 cv
340.011 298.23 339.883 297.987 339.495 297.987 cv
339.259 297.987 339.063 298.106 338.943 298.206 cv
338.831 297.958 li
339.011 297.806 339.267 297.695 339.567 297.695 cv
340.126 297.695 340.362 298.078 340.362 298.451 cv
340.362 298.93 340.014 299.318 339.467 299.846 cv
339.259 300.038 li
339.259 300.045 li
340.426 300.045 li
340.426 300.337 li
338.767 300.337 li
cp
.388235 .411765 .47451 rgb
f
341.135 286.55 mo
341.135 287.225 341.343 287.609 341.662 287.609 cv
342.022 287.609 342.194 287.19 342.194 286.526 cv
342.194 285.886 342.03 285.467 341.666 285.467 cv
341.359 285.467 341.135 285.842 341.135 286.55 cv
cp
342.546 286.51 mo
342.546 287.393 342.218 287.881 341.642 287.881 cv
341.135 287.881 340.791 287.406 340.783 286.546 cv
340.783 285.675 341.158 285.195 341.686 285.195 cv
342.234 285.195 342.546 285.682 342.546 286.51 cv
cp
339.854 286.854 mo
339.854 285.986 li
339.854 285.85 339.859 285.714 339.866 285.578 cv
339.854 285.578 li
339.775 285.73 339.711 285.842 339.638 285.962 cv
339.003 286.846 li
339.003 286.854 li
339.854 286.854 li
cp
339.854 287.837 mo
339.854 287.13 li
338.647 287.13 li
338.647 286.898 li
339.806 285.239 li
340.186 285.239 li
340.186 286.854 li
340.55 286.854 li
340.55 287.13 li
340.186 287.13 li
340.186 287.837 li
339.854 287.837 li
cp
f
341.135 274.05 mo
341.135 274.725 341.343 275.109 341.662 275.109 cv
342.022 275.109 342.194 274.69 342.194 274.026 cv
342.194 273.386 342.03 272.967 341.666 272.967 cv
341.359 272.967 341.135 273.342 341.135 274.05 cv
cp
342.546 274.01 mo
342.546 274.893 342.218 275.381 341.642 275.381 cv
341.135 275.381 340.791 274.906 340.783 274.046 cv
340.783 273.175 341.158 272.695 341.686 272.695 cv
342.234 272.695 342.546 273.182 342.546 274.01 cv
cp
340.15 274.486 mo
340.15 274.114 339.938 273.89 339.615 273.89 cv
339.403 273.89 339.207 274.022 339.111 274.21 cv
339.087 274.25 339.071 274.302 339.071 274.366 cv
339.079 274.793 339.275 275.109 339.643 275.109 cv
339.947 275.109 340.15 274.858 340.15 274.486 cv
cp
340.25 272.987 mo
340.178 272.983 340.086 272.987 339.987 273.002 cv
339.435 273.095 339.143 273.498 339.083 273.926 cv
339.095 273.926 li
339.219 273.762 339.435 273.626 339.723 273.626 cv
340.182 273.626 340.506 273.958 340.506 274.466 cv
340.506 274.941 340.182 275.381 339.643 275.381 cv
339.087 275.381 338.723 274.95 338.723 274.274 cv
338.723 273.762 338.907 273.358 339.163 273.102 cv
339.379 272.891 339.667 272.759 339.994 272.719 cv
340.098 272.703 340.186 272.699 340.25 272.699 cv
340.25 272.987 li
cp
f
341.135 261.55 mo
341.135 262.225 341.343 262.609 341.662 262.609 cv
342.022 262.609 342.194 262.19 342.194 261.526 cv
342.194 260.886 342.03 260.467 341.666 260.467 cv
341.359 260.467 341.135 260.842 341.135 261.55 cv
cp
342.546 261.51 mo
342.546 262.393 342.218 262.881 341.642 262.881 cv
341.135 262.881 340.791 262.406 340.783 261.546 cv
340.783 260.675 341.158 260.195 341.686 260.195 cv
342.234 260.195 342.546 260.682 342.546 261.51 cv
cp
339.167 260.862 mo
339.167 261.122 339.363 261.262 339.662 261.342 cv
339.887 261.266 340.058 261.106 340.058 260.871 cv
340.058 260.663 339.934 260.447 339.618 260.447 cv
339.327 260.447 339.167 260.639 339.167 260.862 cv
cp
340.135 262.161 mo
340.135 261.846 339.914 261.694 339.563 261.594 cv
339.259 261.682 339.095 261.882 339.095 262.13 cv
339.083 262.393 339.283 262.625 339.615 262.625 cv
339.93 262.625 340.135 262.43 340.135 262.161 cv
cp
338.735 262.178 mo
338.735 261.85 338.931 261.618 339.251 261.482 cv
339.247 261.47 li
338.959 261.334 338.835 261.11 338.835 260.886 cv
338.835 260.474 339.183 260.195 339.638 260.195 cv
340.142 260.195 340.394 260.511 340.394 260.834 cv
340.394 261.054 340.286 261.29 339.967 261.442 cv
339.967 261.454 li
340.29 261.582 340.49 261.81 340.49 262.126 cv
340.49 262.578 340.102 262.881 339.607 262.881 cv
339.063 262.881 338.735 262.557 338.735 262.178 cv
cp
f
341.135 249.05 mo
341.135 249.725 341.343 250.109 341.662 250.109 cv
342.022 250.109 342.194 249.69 342.194 249.026 cv
342.194 248.386 342.03 247.967 341.666 247.967 cv
341.359 247.967 341.135 248.342 341.135 249.05 cv
cp
342.546 249.01 mo
342.546 249.893 342.218 250.381 341.642 250.381 cv
341.135 250.381 340.791 249.906 340.783 249.046 cv
340.783 248.175 341.158 247.695 341.686 247.695 cv
342.234 247.695 342.546 248.182 342.546 249.01 cv
cp
339.082 249.05 mo
339.082 249.725 339.29 250.109 339.61 250.109 cv
339.97 250.109 340.142 249.69 340.142 249.026 cv
340.142 248.386 339.978 247.967 339.614 247.967 cv
339.306 247.967 339.082 248.342 339.082 249.05 cv
cp
340.493 249.01 mo
340.493 249.893 340.166 250.381 339.59 250.381 cv
339.082 250.381 338.739 249.906 338.731 249.046 cv
338.731 248.175 339.106 247.695 339.634 247.695 cv
340.182 247.695 340.493 248.182 340.493 249.01 cv
cp
337.478 248.067 mo
337.47 248.067 li
337.019 248.31 li
336.951 248.042 li
337.518 247.739 li
337.818 247.739 li
337.818 250.337 li
337.478 250.337 li
337.478 248.067 li
cp
f
341.135 309.55 mo
341.135 310.226 341.343 310.61 341.662 310.61 cv
342.022 310.61 342.194 310.19 342.194 309.526 cv
342.194 308.886 342.03 308.466 341.666 308.466 cv
341.359 308.466 341.135 308.842 341.135 309.55 cv
cp
342.546 309.51 mo
342.546 310.394 342.218 310.881 341.642 310.881 cv
341.135 310.881 340.791 310.406 340.783 309.546 cv
340.783 308.674 341.158 308.195 341.686 308.195 cv
342.234 308.195 342.546 308.682 342.546 309.51 cv
cp
f
360.796 265.897 mo
350.796 265.897 li
350.796 310.897 li
360.796 310.897 li
360.796 265.897 li
cp
1 .352941 .203922 rgb
f
373.296 263.897 mo
363.296 263.897 li
363.296 310.897 li
373.296 310.897 li
373.296 263.897 li
cp
f
385.796 258.897 mo
375.796 258.897 li
375.796 310.897 li
385.796 310.897 li
385.796 258.897 li
cp
f
398.296 250.897 mo
388.296 250.897 li
388.296 310.897 li
398.296 310.897 li
398.296 250.897 li
cp
f
410.796 253.897 mo
400.796 253.897 li
400.796 310.897 li
410.796 310.897 li
410.796 253.897 li
cp
f
423.296 248.897 mo
413.296 248.897 li
413.296 310.897 li
423.296 310.897 li
423.296 248.897 li
cp
f
435.796 259.897 mo
425.796 259.897 li
425.796 310.897 li
435.796 310.897 li
435.796 259.897 li
cp
f
448.296 269.897 mo
438.296 269.897 li
438.296 310.897 li
448.296 310.897 li
448.296 269.897 li
cp
f
460.796 267.897 mo
450.796 267.897 li
450.796 310.897 li
460.796 310.897 li
460.796 267.897 li
cp
f
473.296 258.897 mo
463.296 258.897 li
463.296 310.897 li
473.296 310.897 li
473.296 258.897 li
cp
f
358.296 279.897 mo
353.296 279.897 li
353.296 310.897 li
358.296 310.897 li
358.296 279.897 li
cp
.0156863 .552941 .678431 rgb
f
370.796 283.897 mo
365.796 283.897 li
365.796 310.897 li
370.796 310.897 li
370.796 283.897 li
cp
f
383.296 279.897 mo
378.296 279.897 li
378.296 310.897 li
383.296 310.897 li
383.296 279.897 li
cp
f
395.796 256.897 mo
390.796 256.897 li
390.796 310.897 li
395.796 310.897 li
395.796 256.897 li
cp
f
408.296 266.897 mo
403.296 266.897 li
403.296 310.897 li
408.296 310.897 li
408.296 266.897 li
cp
f
420.796 270.897 mo
415.796 270.897 li
415.796 310.897 li
420.796 310.897 li
420.796 270.897 li
cp
f
433.296 268.897 mo
428.296 268.897 li
428.296 310.897 li
433.296 310.897 li
433.296 268.897 li
cp
f
445.796 278.897 mo
440.796 278.897 li
440.796 310.897 li
445.796 310.897 li
445.796 278.897 li
cp
f
458.296 284.897 mo
453.296 284.897 li
453.296 310.897 li
458.296 310.897 li
458.296 284.897 li
cp
f
470.796 271.897 mo
465.796 271.897 li
465.796 310.897 li
470.796 310.897 li
470.796 271.897 li
cp
f
347.546 311.397 mo
347.27 311.397 347.046 311.173 347.046 310.897 cv
347.046 236.397 li
347.046 236.121 347.27 235.897 347.546 235.897 cv
347.822 235.897 348.046 236.121 348.046 236.397 cv
348.046 310.897 li
348.046 311.173 347.822 311.397 347.546 311.397 cv
cp
.227451 .262745 .321569 rgb
f
485.046 311.397 mo
347.546 311.397 li
347.27 311.397 347.046 311.173 347.046 310.897 cv
347.046 310.62 347.27 310.397 347.546 310.397 cv
485.046 310.397 li
485.322 310.397 485.546 310.62 485.546 310.897 cv
485.546 311.173 485.322 311.397 485.046 311.397 cv
cp
f
83.9036 409.397 mo
84.4395 408.469 85.4299 407.897 86.5016 407.897 cv
86.5016 345.897 li
63.2794 345.897 41.8211 358.286 30.21 378.397 cv
20.51 395.198 18.9135 415.256 25.4203 433.129 cv
83.7045 411.915 li
83.4048 411.09 83.4561 410.172 83.9036 409.397 cv
cp
.0156863 .552941 .678431 rgb
f
86.5016 413.897 mo
85.4299 413.897 84.4395 413.325 83.9036 412.397 cv
83.8151 412.244 83.7638 412.078 83.7045 411.915 cv
25.4203 433.129 li
26.7023 436.65 28.2989 440.087 30.21 443.397 cv
41.8211 463.508 63.2794 475.897 86.5016 475.897 cv
98.1128 475.897 109.283 472.8 119.002 467.189 cv
88.0016 413.495 li
87.553 413.754 87.0375 413.897 86.5016 413.897 cv
cp
.215686 .639216 .752941 rgb
f
150.515 399.61 mo
89.4342 410.38 li
89.5543 411.064 89.4576 411.777 89.0997 412.397 cv
88.8318 412.861 88.4502 413.236 88.0016 413.495 cv
119.002 467.189 li
128.72 461.577 136.988 453.452 142.793 443.397 cv
150.553 429.957 153.127 414.432 150.515 399.61 cv
cp
.4 .745098 .8 rgb
f
89.0997 409.397 mo
89.2777 409.705 89.3745 410.04 89.4342 410.38 cv
150.515 399.61 li
149.219 392.252 146.645 385.068 142.793 378.397 cv
136.988 368.341 128.72 360.216 119.002 354.605 cv
88.0016 408.299 li
88.4502 408.558 88.8318 408.933 89.0997 409.397 cv
cp
.572549 .835294 .870588 rgb
f
88.0016 408.299 mo
119.002 354.605 li
109.283 348.994 98.1128 345.897 86.5016 345.897 cv
86.5016 407.897 li
87.0375 407.897 87.553 408.04 88.0016 408.299 cv
cp
.792157 .905882 .921569 rgb
f
83.9036 409.397 mo
83.3677 410.325 83.3677 411.469 83.9036 412.397 cv
84.4395 413.325 85.4299 413.897 86.5017 413.897 cv
87.5734 413.897 88.5638 413.325 89.0997 412.397 cv
89.6356 411.469 89.6356 410.325 89.0997 409.397 cv
88.5638 408.469 87.5734 407.897 86.5017 407.897 cv
85.4299 407.897 84.4395 408.469 83.9036 409.397 cv
cp
86.5017 404.897 mo
88.6452 404.897 90.626 406.04 91.6978 407.897 cv
92.7696 409.753 92.7696 412.04 91.6978 413.897 cv
90.626 415.753 88.6452 416.897 86.5017 416.897 cv
84.3581 416.897 82.3773 415.753 81.3055 413.897 cv
80.2337 412.04 80.2337 409.753 81.3055 407.897 cv
82.3773 406.04 84.3581 404.897 86.5017 404.897 cv
cp
.227451 .262745 .321569 rgb
f
30.21 378.397 mo
18.5989 398.508 18.5989 423.286 30.21 443.397 cv
41.8211 463.508 63.2794 475.897 86.5017 475.897 cv
109.724 475.897 131.182 463.508 142.793 443.397 cv
154.404 423.286 154.404 398.508 142.793 378.397 cv
131.182 358.286 109.724 345.897 86.5017 345.897 cv
63.2794 345.897 41.8211 358.286 30.21 378.397 cv
cp
86.5017 340.897 mo
111.51 340.897 134.619 354.239 147.123 375.897 cv
159.628 397.555 159.628 424.239 147.123 445.897 cv
134.619 467.555 111.51 480.897 86.5017 480.897 cv
61.4931 480.897 38.3842 467.555 25.8799 445.897 cv
13.3756 424.239 13.3756 397.555 25.8799 375.897 cv
38.3842 354.239 61.4931 340.897 86.5017 340.897 cv
cp
f
104.594 368.165 mo
104.587 368.746 104.811 369.188 105.189 369.188 cv
105.596 369.188 105.778 368.753 105.778 368.152 cv
105.778 367.598 105.617 367.136 105.189 367.136 cv
104.804 367.136 104.594 367.591 104.594 368.165 cv
cp
106.261 368.123 mo
106.261 369.083 105.757 369.559 105.175 369.559 cv
104.608 369.559 104.118 369.104 104.111 368.194 cv
104.111 367.276 104.608 366.765 105.21 366.765 cv
105.848 366.765 106.261 367.255 106.261 368.123 cv
cp
102.164 369.587 mo
104.839 364.88 li
105.231 364.88 li
102.556 369.587 li
102.164 369.587 li
cp
101.631 366.281 mo
101.618 366.862 101.834 367.304 102.22 367.304 cv
102.626 367.304 102.808 366.869 102.808 366.267 cv
102.808 365.714 102.647 365.252 102.22 365.252 cv
101.834 365.252 101.631 365.707 101.631 366.281 cv
cp
103.298 366.24 mo
103.298 367.198 102.794 367.675 102.206 367.675 cv
101.639 367.675 101.148 367.22 101.141 366.302 cv
101.141 365.392 101.639 364.88 102.241 364.88 cv
102.878 364.88 103.298 365.37 103.298 366.24 cv
cp
98.1088 367.258 mo
98.1088 368.609 98.5248 369.376 99.1645 369.376 cv
99.8842 369.376 100.228 368.537 100.228 367.209 cv
100.228 365.93 99.8998 365.091 99.1723 365.091 cv
98.5561 365.091 98.1088 365.842 98.1088 367.258 cv
cp
100.931 367.178 mo
100.931 368.944 100.276 369.92 99.1245 369.92 cv
98.1088 369.92 97.4213 368.969 97.4057 367.249 cv
97.4057 365.507 98.1577 364.547 99.2123 364.547 cv
100.308 364.547 100.931 365.523 100.931 367.178 cv
cp
94.8998 365.291 mo
94.8842 365.291 li
93.9809 365.779 li
93.8452 365.242 li
94.9799 364.635 li
95.5795 364.635 li
95.5795 369.832 li
94.8998 369.832 li
94.8998 365.291 li
cp
0 0 0 rgb
f
130.195 385.974 mo
130.187 386.555 130.411 386.996 130.79 386.996 cv
131.196 386.996 131.378 386.561 131.378 385.96 cv
131.378 385.406 131.217 384.944 130.79 384.944 cv
130.405 384.944 130.195 385.399 130.195 385.974 cv
cp
131.862 385.932 mo
131.862 386.892 131.357 387.367 130.776 387.367 cv
130.208 387.367 129.718 386.912 129.711 386.002 cv
129.711 385.084 130.208 384.573 130.811 384.573 cv
131.448 384.573 131.862 385.064 131.862 385.932 cv
cp
127.764 387.396 mo
130.44 382.689 li
130.832 382.689 li
128.157 387.396 li
127.764 387.396 li
cp
127.232 384.09 mo
127.218 384.671 127.435 385.112 127.82 385.112 cv
128.226 385.112 128.408 384.678 128.408 384.075 cv
128.408 383.522 128.247 383.061 127.82 383.061 cv
127.435 383.061 127.232 383.516 127.232 384.09 cv
cp
128.899 384.048 mo
128.899 385.007 128.394 385.483 127.806 385.483 cv
127.239 385.483 126.749 385.028 126.741 384.11 cv
126.741 383.2 127.239 382.689 127.841 382.689 cv
128.479 382.689 128.899 383.179 128.899 384.048 cv
cp
126.679 383.035 mo
124.696 383.035 li
124.496 384.37 li
124.616 384.354 124.728 384.339 124.92 384.339 cv
125.319 384.339 125.72 384.427 126.039 384.618 cv
126.446 384.851 126.782 385.298 126.782 385.953 cv
126.782 386.969 125.976 387.728 124.849 387.728 cv
124.28 387.728 123.8 387.568 123.553 387.409 cv
123.729 386.873 li
123.944 387.001 124.368 387.161 124.84 387.161 cv
125.503 387.161 126.071 386.729 126.071 386.033 cv
126.064 385.362 125.616 384.882 124.576 384.882 cv
124.28 384.882 124.048 384.914 123.857 384.939 cv
124.193 382.443 li
126.679 382.443 li
126.679 383.035 li
cp
120.999 383.1 mo
120.984 383.1 li
120.08 383.587 li
119.944 383.051 li
121.079 382.443 li
121.679 382.443 li
121.679 387.641 li
120.999 387.641 li
120.999 383.1 li
cp
f
134.517 430.846 mo
134.51 431.427 134.734 431.869 135.113 431.869 cv
135.519 431.869 135.701 431.434 135.701 430.833 cv
135.701 430.279 135.54 429.817 135.113 429.817 cv
134.727 429.817 134.517 430.272 134.517 430.846 cv
cp
136.184 430.804 mo
136.184 431.764 135.68 432.24 135.098 432.24 cv
134.531 432.24 134.041 431.785 134.034 430.875 cv
134.034 429.957 134.531 429.446 135.134 429.446 cv
135.771 429.446 136.184 429.936 136.184 430.804 cv
cp
132.087 432.268 mo
134.762 427.561 li
135.155 427.561 li
132.479 432.268 li
132.087 432.268 li
cp
131.554 428.962 mo
131.541 429.544 131.758 429.985 132.143 429.985 cv
132.549 429.985 132.731 429.55 132.731 428.948 cv
132.731 428.395 132.57 427.933 132.143 427.933 cv
131.758 427.933 131.554 428.388 131.554 428.962 cv
cp
133.221 428.921 mo
133.221 429.879 132.717 430.356 132.129 430.356 cv
131.562 430.356 131.072 429.901 131.064 428.983 cv
131.064 428.073 131.562 427.561 132.164 427.561 cv
132.802 427.561 133.221 428.051 133.221 428.921 cv
cp
128.242 429.939 mo
128.242 431.29 128.658 432.057 129.298 432.057 cv
130.017 432.057 130.361 431.218 130.361 429.89 cv
130.361 428.611 130.033 427.772 129.305 427.772 cv
128.689 427.772 128.242 428.523 128.242 429.939 cv
cp
131.064 429.859 mo
131.064 431.626 130.409 432.601 129.258 432.601 cv
128.242 432.601 127.554 431.65 127.539 429.93 cv
127.539 428.188 128.291 427.228 129.345 427.228 cv
130.441 427.228 131.064 428.204 131.064 429.859 cv
cp
123.507 432.513 mo
123.507 432.082 li
124.058 431.546 li
125.386 430.283 125.985 429.611 125.994 428.828 cv
125.994 428.299 125.738 427.812 124.962 427.812 cv
124.49 427.812 124.098 428.051 123.858 428.252 cv
123.635 427.755 li
123.994 427.452 124.506 427.228 125.105 427.228 cv
126.224 427.228 126.697 427.996 126.697 428.74 cv
126.697 429.699 126.002 430.474 124.906 431.53 cv
124.49 431.914 li
124.49 431.929 li
126.824 431.929 li
126.824 432.513 li
123.507 432.513 li
cp
f
78.2189 454.071 mo
78.2116 454.652 78.4357 455.093 78.8141 455.093 cv
79.2204 455.093 79.4025 454.659 79.4025 454.057 cv
79.4025 453.503 79.2414 453.041 78.8141 453.041 cv
78.4289 453.041 78.2189 453.496 78.2189 454.071 cv
cp
79.8859 454.029 mo
79.8859 454.989 79.3815 455.464 78.8 455.464 cv
78.2326 455.464 77.7423 455.009 77.7355 454.099 cv
77.7355 453.181 78.2326 452.67 78.8351 452.67 cv
79.4723 452.67 79.8859 453.161 79.8859 454.029 cv
cp
75.7882 455.493 mo
78.464 450.786 li
78.8561 450.786 li
76.1808 455.493 li
75.7882 455.493 li
cp
75.256 452.187 mo
75.2423 452.768 75.4591 453.209 75.8444 453.209 cv
76.2506 453.209 76.4328 452.775 76.4328 452.172 cv
76.4328 451.62 76.2716 451.158 75.8444 451.158 cv
75.4591 451.158 75.256 451.613 75.256 452.187 cv
cp
76.923 452.145 mo
76.923 453.104 76.4186 453.581 75.8307 453.581 cv
75.2633 453.581 74.7731 453.125 74.7658 452.207 cv
74.7658 451.297 75.2633 450.786 75.8654 450.786 cv
76.5031 450.786 76.923 451.276 76.923 452.145 cv
cp
74.6618 451.176 mo
72.6789 451.176 li
72.4792 452.511 li
72.5993 452.496 72.7111 452.48 72.903 452.48 cv
73.3029 452.48 73.7023 452.568 74.0221 452.759 cv
74.4298 452.992 74.7658 453.439 74.7658 454.094 cv
74.7658 455.11 73.9582 455.87 72.8312 455.87 cv
72.2633 455.87 71.7834 455.709 71.5358 455.55 cv
71.7116 455.014 li
71.9274 455.142 72.3512 455.302 72.8229 455.302 cv
73.4865 455.302 74.0543 454.871 74.0543 454.174 cv
74.046 453.503 73.5988 453.023 72.5592 453.023 cv
72.2633 453.023 72.0314 453.055 71.8395 453.079 cv
72.1754 450.584 li
74.6618 450.584 li
74.6618 451.176 li
cp
67.4557 455.782 mo
67.4557 455.35 li
68.0075 454.814 li
69.3346 453.551 69.9342 452.879 69.9425 452.096 cv
69.9425 451.568 69.6867 451.081 68.9108 451.081 cv
68.4391 451.081 68.0475 451.32 67.8073 451.52 cv
67.5836 451.024 li
67.9435 450.72 68.4552 450.496 69.0548 450.496 cv
70.174 450.496 70.6457 451.264 70.6457 452.008 cv
70.6457 452.967 69.9503 453.743 68.8546 454.798 cv
68.4391 455.182 li
68.4391 455.198 li
70.7736 455.198 li
70.7736 455.782 li
67.4557 455.782 li
cp
f
56.8839 385.974 mo
56.8766 386.555 57.1007 386.996 57.4792 386.996 cv
57.8854 386.996 58.0675 386.561 58.0675 385.96 cv
58.0675 385.406 57.9064 384.944 57.4792 384.944 cv
57.0939 384.944 56.8839 385.399 56.8839 385.974 cv
cp
58.5509 385.932 mo
58.5509 386.892 58.0465 387.367 57.465 387.367 cv
56.8976 387.367 56.4074 386.912 56.4006 386.002 cv
56.4006 385.084 56.8976 384.573 57.5002 384.573 cv
58.1374 384.573 58.5509 385.064 58.5509 385.932 cv
cp
54.4533 387.396 mo
57.1291 382.689 li
57.5212 382.689 li
54.8459 387.396 li
54.4533 387.396 li
cp
53.9211 384.09 mo
53.9074 384.671 54.1242 385.112 54.5094 385.112 cv
54.9157 385.112 55.0978 384.678 55.0978 384.075 cv
55.0978 383.522 54.9367 383.061 54.5094 383.061 cv
54.1242 383.061 53.9211 383.516 53.9211 384.09 cv
cp
55.5881 384.048 mo
55.5881 385.007 55.0837 385.483 54.4958 385.483 cv
53.9284 385.483 53.4381 385.028 53.4308 384.11 cv
53.4308 383.2 53.9284 382.689 54.5304 382.689 cv
55.1681 382.689 55.5881 383.179 55.5881 384.048 cv
cp
50.6086 385.11 mo
50.6086 386.461 51.0241 387.228 51.6637 387.228 cv
52.3835 387.228 52.7272 386.39 52.7272 385.061 cv
52.7272 383.782 52.3996 382.943 51.6715 382.943 cv
51.0558 382.943 50.6086 383.694 50.6086 385.11 cv
cp
53.4308 385.03 mo
53.4308 386.797 52.7751 387.772 51.6237 387.772 cv
50.6086 387.772 49.9206 386.821 49.9045 385.102 cv
49.9045 383.359 50.6564 382.399 51.7116 382.399 cv
52.8073 382.399 53.4308 383.375 53.4308 385.03 cv
cp
46.0407 386.877 mo
46.2404 387.005 46.7043 387.205 47.1921 387.205 cv
48.0954 387.205 48.3752 386.629 48.3673 386.197 cv
48.3595 385.47 47.7038 385.158 47.0241 385.158 cv
46.632 385.158 li
46.632 384.63 li
47.0241 384.63 li
47.5358 384.63 48.1833 384.366 48.1833 383.751 cv
48.1833 383.335 47.9196 382.967 47.2716 382.967 cv
46.8561 382.967 46.4562 383.151 46.2326 383.31 cv
46.0485 382.799 li
46.3205 382.6 46.8483 382.399 47.4079 382.399 cv
48.4313 382.399 48.8952 383.007 48.8952 383.639 cv
48.8952 384.175 48.5754 384.63 47.9357 384.862 cv
47.9357 384.878 li
48.5754 385.006 49.0949 385.485 49.0949 386.214 cv
49.0949 387.045 48.4474 387.772 47.1999 387.772 cv
46.6164 387.772 46.1047 387.589 45.8488 387.421 cv
46.0407 386.877 li
cp
f
201.399 445.312 mo
200.404 443.889 199.465 442.417 198.587 440.897 cv
187.869 422.333 187.869 399.461 198.587 380.897 cv
209.305 362.333 229.113 350.897 250.549 350.897 cv
250.549 410.897 li
201.399 445.312 li
cp
1 .352941 .203922 rgb
f
300.343 452.679 mo
288.118 467.251 269.949 475.897 250.549 475.897 cv
229.228 475.897 209.395 465.454 197.304 448.18 cv
250.549 410.897 li
300.343 452.679 li
cp
.227451 .262745 .321569 rgb
f
298.18 383.397 mo
308.005 400.414 308.005 421.38 298.18 438.397 cv
296.563 441.198 294.72 443.822 292.682 446.251 cv
250.549 410.897 li
298.18 383.397 li
cp
.0156863 .552941 .678431 rgb
f
262.196 367.429 mo
273.573 370.478 283.475 377.926 289.52 388.397 cv
250.549 410.897 li
262.196 367.429 li
cp
.521569 .788235 .313726 rgb
f
250.549 345.897 mo
256.306 345.897 261.955 346.658 267.373 348.11 cv
250.549 410.897 li
250.549 345.897 li
cp
1 .764706 .286275 rgb
f
218.739 391.391 mo
218.732 391.972 218.956 392.413 219.335 392.413 cv
219.741 392.413 219.923 391.978 219.923 391.377 cv
219.923 390.823 219.762 390.361 219.335 390.361 cv
218.949 390.361 218.739 390.816 218.739 391.391 cv
cp
220.406 391.349 mo
220.406 392.309 219.902 392.784 219.32 392.784 cv
218.753 392.784 218.263 392.329 218.256 391.419 cv
218.256 390.501 218.753 389.99 219.356 389.99 cv
219.993 389.99 220.406 390.48 220.406 391.349 cv
cp
216.309 392.813 mo
218.985 388.105 li
219.377 388.105 li
216.701 392.813 li
216.309 392.813 li
cp
215.776 389.507 mo
215.763 390.088 215.98 390.529 216.365 390.529 cv
216.771 390.529 216.953 390.095 216.953 389.492 cv
216.953 388.94 216.792 388.478 216.365 388.478 cv
215.98 388.478 215.776 388.933 215.776 389.507 cv
cp
217.443 389.465 mo
217.443 390.424 216.939 390.9 216.351 390.9 cv
215.784 390.9 215.294 390.445 215.286 389.527 cv
215.286 388.617 215.784 388.105 216.386 388.105 cv
217.024 388.105 217.443 388.596 217.443 389.465 cv
cp
215.058 388.408 mo
213.076 388.408 li
212.876 389.743 li
212.996 389.728 213.107 389.712 213.299 389.712 cv
213.699 389.712 214.099 389.8 214.419 389.991 cv
214.826 390.224 215.162 390.671 215.162 391.326 cv
215.162 392.342 214.355 393.102 213.228 393.102 cv
212.66 393.102 212.179 392.941 211.932 392.782 cv
212.108 392.246 li
212.324 392.374 212.748 392.534 213.219 392.534 cv
213.882 392.534 214.451 392.103 214.451 391.406 cv
214.443 390.735 213.996 390.255 212.956 390.255 cv
212.66 390.255 212.427 390.287 212.236 390.311 cv
212.572 387.816 li
215.058 387.816 li
215.058 388.408 li
cp
207.92 392.25 mo
208.12 392.378 208.584 392.578 209.071 392.578 cv
209.975 392.578 210.255 392.002 210.247 391.57 cv
210.239 390.843 209.583 390.531 208.903 390.531 cv
208.511 390.531 li
208.511 390.003 li
208.903 390.003 li
209.415 390.003 210.063 389.739 210.063 389.124 cv
210.063 388.708 209.799 388.34 209.151 388.34 cv
208.735 388.34 208.336 388.524 208.112 388.684 cv
207.928 388.172 li
208.2 387.973 208.728 387.772 209.287 387.772 cv
210.311 387.772 210.775 388.38 210.775 389.012 cv
210.775 389.548 210.455 390.003 209.815 390.235 cv
209.815 390.251 li
210.455 390.379 210.974 390.858 210.974 391.587 cv
210.974 392.418 210.327 393.146 209.079 393.146 cv
208.496 393.146 207.984 392.962 207.728 392.794 cv
207.92 392.25 li
cp
0 0 0 rgb
f
276.307 385.709 mo
276.3 386.29 276.524 386.732 276.902 386.732 cv
277.309 386.732 277.491 386.297 277.491 385.696 cv
277.491 385.142 277.329 384.68 276.902 384.68 cv
276.517 384.68 276.307 385.135 276.307 385.709 cv
cp
277.974 385.667 mo
277.974 386.627 277.47 387.103 276.888 387.103 cv
276.321 387.103 275.831 386.648 275.824 385.738 cv
275.824 384.82 276.321 384.309 276.923 384.309 cv
277.56 384.309 277.974 384.799 277.974 385.667 cv
cp
273.876 387.131 mo
276.552 382.424 li
276.944 382.424 li
274.269 387.131 li
273.876 387.131 li
cp
273.344 383.826 mo
273.331 384.407 273.547 384.848 273.932 384.848 cv
274.339 384.848 274.521 384.414 274.521 383.811 cv
274.521 383.258 274.36 382.796 273.932 382.796 cv
273.547 382.796 273.344 383.251 273.344 383.826 cv
cp
275.011 383.784 mo
275.011 384.743 274.507 385.219 273.919 385.219 cv
273.352 385.219 272.861 384.764 272.854 383.846 cv
272.854 382.936 273.352 382.424 273.953 382.424 cv
274.591 382.424 275.011 382.914 275.011 383.784 cv
cp
269.947 384.846 mo
269.947 386.197 270.363 386.964 271.002 386.964 cv
271.722 386.964 272.066 386.125 272.066 384.797 cv
272.066 383.518 271.738 382.679 271.01 382.679 cv
270.394 382.679 269.947 383.43 269.947 384.846 cv
cp
272.769 384.766 mo
272.769 386.533 272.114 387.508 270.962 387.508 cv
269.947 387.508 269.259 386.557 269.243 384.837 cv
269.243 383.095 269.995 382.135 271.05 382.135 cv
272.146 382.135 272.769 383.111 272.769 384.766 cv
cp
266.838 382.835 mo
266.822 382.835 li
265.919 383.323 li
265.783 382.787 li
266.918 382.179 li
267.517 382.179 li
267.517 387.376 li
266.838 387.376 li
266.838 382.835 li
cp
f
298.565 415.025 mo
298.557 415.606 298.781 416.048 299.16 416.048 cv
299.566 416.048 299.748 415.613 299.748 415.011 cv
299.748 414.458 299.587 413.996 299.16 413.996 cv
298.775 413.996 298.565 414.451 298.565 415.025 cv
cp
300.232 414.983 mo
300.232 415.943 299.727 416.419 299.146 416.419 cv
298.578 416.419 298.088 415.964 298.081 415.053 cv
298.081 414.135 298.578 413.625 299.181 413.625 cv
299.818 413.625 300.232 414.115 300.232 414.983 cv
cp
296.134 416.447 mo
298.81 411.74 li
299.202 411.74 li
296.527 416.447 li
296.134 416.447 li
cp
295.602 413.141 mo
295.588 413.722 295.805 414.164 296.19 414.164 cv
296.596 414.164 296.779 413.729 296.779 413.127 cv
296.779 412.574 296.617 412.112 296.19 412.112 cv
295.805 412.112 295.602 412.567 295.602 413.141 cv
cp
297.269 413.099 mo
297.269 414.058 296.764 414.535 296.177 414.535 cv
295.609 414.535 295.119 414.08 295.112 413.162 cv
295.112 412.252 295.609 411.74 296.211 411.74 cv
296.849 411.74 297.269 412.23 297.269 413.099 cv
cp
292.289 414.162 mo
292.289 415.512 292.705 416.28 293.345 416.28 cv
294.065 416.28 294.408 415.441 294.408 414.113 cv
294.408 412.834 294.08 411.995 293.353 411.995 cv
292.737 411.995 292.289 412.746 292.289 414.162 cv
cp
295.112 414.082 mo
295.112 415.848 294.456 416.824 293.305 416.824 cv
292.289 416.824 291.602 415.873 291.586 414.153 cv
291.586 412.411 292.338 411.451 293.393 411.451 cv
294.489 411.451 295.112 412.427 295.112 414.082 cv
cp
287.554 416.736 mo
287.554 416.304 li
288.106 415.768 li
289.433 414.506 290.033 413.834 290.041 413.051 cv
290.041 412.522 289.785 412.035 289.009 412.035 cv
288.537 412.035 288.146 412.274 287.906 412.474 cv
287.682 411.978 li
288.041 411.674 288.553 411.451 289.153 411.451 cv
290.272 411.451 290.744 412.219 290.744 412.963 cv
290.744 413.922 290.049 414.697 288.953 415.753 cv
288.537 416.136 li
288.537 416.152 li
290.871 416.152 li
290.871 416.736 li
287.554 416.736 li
cp
f
256.067 454.478 mo
256.06 455.059 256.284 455.501 256.663 455.501 cv
257.069 455.501 257.251 455.066 257.251 454.465 cv
257.251 453.911 257.09 453.449 256.663 453.449 cv
256.277 453.449 256.067 453.904 256.067 454.478 cv
cp
257.734 454.436 mo
257.734 455.396 257.23 455.872 256.648 455.872 cv
256.081 455.872 255.591 455.417 255.584 454.507 cv
255.584 453.589 256.081 453.078 256.684 453.078 cv
257.321 453.078 257.734 453.568 257.734 454.436 cv
cp
253.637 455.9 mo
256.313 451.193 li
256.705 451.193 li
254.029 455.9 li
253.637 455.9 li
cp
253.104 452.595 mo
253.091 453.176 253.308 453.617 253.693 453.617 cv
254.099 453.617 254.281 453.182 254.281 452.58 cv
254.281 452.027 254.12 451.565 253.693 451.565 cv
253.308 451.565 253.104 452.02 253.104 452.595 cv
cp
254.771 452.552 mo
254.771 453.512 254.267 453.988 253.679 453.988 cv
253.112 453.988 252.622 453.533 252.614 452.615 cv
252.614 451.705 253.112 451.193 253.714 451.193 cv
254.352 451.193 254.771 451.683 254.771 452.552 cv
cp
249.792 453.904 mo
249.792 455.255 250.208 456.022 250.847 456.022 cv
251.567 456.022 251.911 455.183 251.911 453.855 cv
251.911 452.576 251.583 451.737 250.855 451.737 cv
250.239 451.737 249.792 452.488 249.792 453.904 cv
cp
252.614 453.824 mo
252.614 455.591 251.958 456.566 250.807 456.566 cv
249.792 456.566 249.104 455.615 249.088 453.895 cv
249.088 452.153 249.84 451.193 250.895 451.193 cv
251.991 451.193 252.614 452.169 252.614 453.824 cv
cp
245.224 455.671 mo
245.424 455.799 245.888 455.999 246.375 455.999 cv
247.279 455.999 247.559 455.423 247.551 454.991 cv
247.543 454.263 246.887 453.952 246.208 453.952 cv
245.815 453.952 li
245.815 453.424 li
246.208 453.424 li
246.719 453.424 247.367 453.16 247.367 452.545 cv
247.367 452.129 247.103 451.761 246.455 451.761 cv
246.04 451.761 245.64 451.945 245.416 452.104 cv
245.232 451.593 li
245.504 451.393 246.032 451.193 246.591 451.193 cv
247.615 451.193 248.079 451.801 248.079 452.432 cv
248.079 452.969 247.759 453.424 247.119 453.656 cv
247.119 453.672 li
247.759 453.8 248.278 454.279 248.278 455.008 cv
248.278 455.839 247.631 456.566 246.383 456.566 cv
245.8 456.566 245.288 456.383 245.032 456.215 cv
245.224 455.671 li
cp
f
260.242 360.848 mo
260.235 361.429 260.459 361.87 260.837 361.87 cv
261.244 361.87 261.426 361.435 261.426 360.834 cv
261.426 360.28 261.265 359.818 260.837 359.818 cv
260.452 359.818 260.242 360.273 260.242 360.848 cv
cp
261.909 360.806 mo
261.909 361.766 261.405 362.241 260.823 362.241 cv
260.256 362.241 259.766 361.786 259.759 360.876 cv
259.759 359.958 260.256 359.447 260.858 359.447 cv
261.496 359.447 261.909 359.937 261.909 360.806 cv
cp
257.812 362.269 mo
260.487 357.562 li
260.879 357.562 li
258.204 362.269 li
257.812 362.269 li
cp
257.279 358.964 mo
257.266 359.545 257.482 359.986 257.868 359.986 cv
258.274 359.986 258.456 359.552 258.456 358.949 cv
258.456 358.396 258.295 357.934 257.868 357.934 cv
257.482 357.934 257.279 358.389 257.279 358.964 cv
cp
258.946 358.922 mo
258.946 359.881 258.442 360.357 257.854 360.357 cv
257.287 360.357 256.796 359.902 256.789 358.984 cv
256.789 358.074 257.287 357.562 257.889 357.562 cv
258.526 357.562 258.946 358.053 258.946 358.922 cv
cp
256.686 358.154 mo
254.703 358.154 li
254.503 359.489 li
254.623 359.474 254.734 359.458 254.927 359.458 cv
255.326 359.458 255.727 359.546 256.046 359.737 cv
256.453 359.97 256.789 360.417 256.789 361.072 cv
256.789 362.088 255.982 362.848 254.855 362.848 cv
254.287 362.848 253.807 362.687 253.56 362.528 cv
253.735 361.992 li
253.951 362.12 254.375 362.28 254.847 362.28 cv
255.51 362.28 256.078 361.849 256.078 361.152 cv
256.07 360.481 255.623 360.001 254.583 360.001 cv
254.287 360.001 254.055 360.033 253.863 360.057 cv
254.199 357.562 li
256.686 357.562 li
256.686 358.154 li
cp
f
466.184 443.397 mo
454.573 463.508 433.115 475.897 409.892 475.897 cv
386.67 475.897 365.212 463.508 353.601 443.397 cv
341.99 423.286 341.99 398.508 353.601 378.397 cv
363.301 361.596 379.873 350.184 398.605 346.883 cv
400.341 356.731 li
384.491 359.525 370.469 369.181 362.261 383.397 cv
352.436 400.414 352.436 421.38 362.261 438.397 cv
372.086 455.414 390.243 465.897 409.892 465.897 cv
429.542 465.897 447.699 455.414 457.524 438.397 cv
466.184 443.397 li
cp
.964706 .964706 .964706 rgb
f
464.892 410.897 mo
464.892 420.393 462.436 429.888 457.524 438.397 cv
447.699 455.414 429.542 465.897 409.892 465.897 cv
390.243 465.897 372.086 455.414 362.261 438.397 cv
352.436 421.38 352.436 400.414 362.261 383.397 cv
365.52 377.752 369.696 372.827 374.539 368.764 cv
380.966 376.424 li
377.004 379.748 373.588 383.779 370.921 388.397 cv
362.883 402.32 362.883 419.474 370.921 433.397 cv
378.96 447.32 393.815 455.897 409.892 455.897 cv
425.969 455.897 440.825 447.32 448.863 433.397 cv
452.883 426.435 454.892 418.666 454.892 410.897 cv
464.892 410.897 li
cp
.843137 .843137 .87451 rgb
f
432.392 449.868 mo
425.664 453.753 417.931 455.897 409.892 455.897 cv
393.815 455.897 378.96 447.32 370.921 433.397 cv
362.883 419.474 362.883 402.32 370.921 388.397 cv
379.581 393.397 li
373.329 404.226 373.329 417.568 379.581 428.397 cv
385.834 439.226 397.388 445.897 409.892 445.897 cv
416.145 445.897 422.159 444.229 427.392 441.208 cv
432.392 449.868 li
cp
.533333 .560784 .584314 rgb
f
397.921 443.787 mo
390.306 441.014 383.76 435.634 379.581 428.397 cv
373.329 417.568 373.329 404.226 379.581 393.397 cv
385.834 382.568 397.388 375.897 409.892 375.897 cv
418.249 375.897 426.181 378.876 432.39 384.085 cv
425.962 391.746 li
421.527 388.025 415.861 385.897 409.892 385.897 cv
400.961 385.897 392.708 390.662 388.242 398.397 cv
383.776 406.132 383.776 415.662 388.242 423.397 cv
391.226 428.566 395.902 432.409 401.342 434.389 cv
397.921 443.787 li
cp
.227451 .262745 .321569 rgb
f
386.4 419.448 mo
383.897 412.573 384.511 404.859 388.242 398.397 cv
392.708 390.662 400.961 385.897 409.892 385.897 cv
409.892 395.897 li
404.533 395.897 399.581 398.756 396.902 403.397 cv
394.663 407.274 394.295 411.903 395.797 416.027 cv
386.4 419.448 li
cp
.145098 .172549 .2 rgb
f
398.605 346.883 mo
402.296 346.233 406.07 345.897 409.892 345.897 cv
433.115 345.897 454.573 358.286 466.184 378.397 cv
477.795 398.508 477.795 423.286 466.184 443.397 cv
457.524 438.397 li
467.349 421.38 467.349 400.414 457.524 383.397 cv
447.699 366.38 429.542 355.897 409.892 355.897 cv
406.658 355.897 403.464 356.181 400.341 356.731 cv
398.605 346.883 li
cp
.988235 1 1 rgb
f
374.539 368.764 mo
384.296 360.579 396.761 355.897 409.892 355.897 cv
429.542 355.897 447.699 366.38 457.524 383.397 cv
462.436 391.905 464.892 401.401 464.892 410.897 cv
454.892 410.897 li
454.892 403.128 452.883 395.358 448.863 388.397 cv
440.825 374.474 425.969 365.897 409.892 365.897 cv
399.148 365.897 388.95 369.728 380.966 376.424 cv
374.539 368.764 li
cp
.909804 .92549 .937255 rgb
f
370.921 388.397 mo
378.96 374.474 393.815 365.897 409.892 365.897 cv
425.969 365.897 440.825 374.474 448.863 388.397 cv
456.902 402.32 456.902 419.474 448.863 433.397 cv
444.844 440.358 439.121 445.983 432.392 449.868 cv
427.392 441.208 li
432.626 438.186 437.077 433.811 440.203 428.397 cv
446.455 417.568 446.455 404.226 440.203 393.397 cv
433.951 382.568 422.397 375.897 409.892 375.897 cv
397.388 375.897 385.834 382.568 379.581 393.397 cv
370.921 388.397 li
cp
.698039 .709804 .737255 rgb
f
432.39 384.085 mo
435.472 386.67 438.129 389.805 440.203 393.397 cv
446.455 404.226 446.455 417.568 440.203 428.397 cv
433.951 439.226 422.397 445.897 409.892 445.897 cv
405.745 445.897 401.701 445.163 397.921 443.787 cv
401.342 434.389 li
404.042 435.373 406.93 435.897 409.892 435.897 cv
418.824 435.897 427.077 431.132 431.543 423.397 cv
436.009 415.662 436.009 406.132 431.543 398.397 cv
430.062 395.831 428.164 393.592 425.962 391.746 cv
432.39 384.085 li
cp
.384314 .407843 .454902 rgb
f
409.892 385.897 mo
418.824 385.897 427.077 390.662 431.543 398.397 cv
436.009 406.132 436.009 415.662 431.543 423.397 cv
427.077 431.132 418.824 435.897 409.892 435.897 cv
400.961 435.897 392.708 431.132 388.242 423.397 cv
387.507 422.124 386.893 420.802 386.4 419.448 cv
395.797 416.027 li
396.092 416.84 396.461 417.633 396.902 418.397 cv
399.581 423.038 404.533 425.897 409.892 425.897 cv
415.251 425.897 420.203 423.038 422.883 418.397 cv
425.562 413.756 425.562 408.038 422.883 403.397 cv
420.203 398.756 415.251 395.897 409.892 395.897 cv
409.892 385.897 li
cp
.192157 .223529 .266667 rgb
f
459.4 446.963 mo
459.846 447.336 460.329 447.442 460.569 447.15 cv
460.827 446.834 460.606 446.418 460.139 446.037 cv
459.711 445.687 459.251 445.519 458.98 445.849 cv
458.736 446.148 458.956 446.599 459.4 446.963 cv
cp
460.423 445.645 mo
461.167 446.252 461.216 446.945 460.848 447.395 cv
460.488 447.835 459.826 447.926 459.116 447.355 cv
458.405 446.773 458.324 446.065 458.705 445.598 cv
459.109 445.104 459.75 445.095 460.423 445.645 cv
cp
458.961 449.746 mo
457.01 444.691 li
457.259 444.388 li
459.21 449.443 li
458.961 449.746 li
cp
456.064 448.064 mo
456.505 448.444 456.984 448.554 457.228 448.256 cv
457.486 447.942 457.264 447.525 456.798 447.143 cv
456.37 446.793 455.91 446.625 455.638 446.957 cv
455.394 447.255 455.618 447.7 456.064 448.064 cv
cp
457.087 446.746 mo
457.831 447.354 457.88 448.047 457.507 448.502 cv
457.148 448.942 456.485 449.033 455.769 448.458 cv
455.064 447.881 454.983 447.171 455.365 446.704 cv
455.768 446.211 456.414 446.196 457.087 446.746 cv
cp
454.516 451.345 mo
455.356 452.179 456.09 452.394 456.484 451.996 cv
456.928 451.549 456.619 450.817 455.794 449.998 cv
454.998 449.208 454.275 448.894 453.826 449.346 cv
453.446 449.728 453.637 450.471 454.516 451.345 cv
cp
456.208 449.541 mo
457.307 450.632 457.508 451.642 456.797 452.357 cv
456.171 452.988 455.155 452.828 454.077 451.777 cv
452.993 450.701 452.86 449.642 453.512 448.985 cv
454.188 448.305 455.18 448.519 456.208 449.541 cv
cp
453.776 453.179 mo
453.34 452.696 452.802 452.653 452.381 453.033 cv
452.105 453.282 452.006 453.683 452.101 454.04 cv
452.117 454.121 452.157 454.207 452.232 454.29 cv
452.744 454.837 453.37 455.018 453.848 454.586 cv
454.244 454.229 454.214 453.663 453.776 453.179 cv
cp
452.147 451.112 mo
452.049 451.192 451.934 451.305 451.823 451.442 cv
451.214 452.209 451.308 453.077 451.731 453.704 cv
451.747 453.69 li
451.716 453.331 451.837 452.901 452.211 452.564 cv
452.81 452.024 453.62 452.076 454.216 452.735 cv
454.775 453.354 454.87 454.306 454.167 454.94 cv
453.444 455.592 452.465 455.457 451.672 454.578 cv
451.072 453.913 450.837 453.172 450.869 452.539 cv
450.902 452.01 451.12 451.5 451.5 451.064 cv
451.616 450.921 451.726 450.813 451.809 450.737 cv
452.147 451.112 li
cp
.2 .2 .2 rgb
f
460.581 416.8 mo
461.155 416.892 461.624 416.737 461.681 416.362 cv
461.74 415.961 461.338 415.717 460.742 415.628 cv
460.195 415.546 459.714 415.637 459.651 416.059 cv
459.594 416.44 460.013 416.715 460.581 416.8 cv
cp
460.786 415.145 mo
461.735 415.287 462.131 415.857 462.046 416.431 cv
461.961 416.993 461.438 417.41 460.538 417.282 cv
459.63 417.146 459.198 416.579 459.287 415.983 cv
459.382 415.353 459.928 415.017 460.786 415.145 cv
cp
461.627 419.414 mo
457.37 416.071 li
457.427 415.683 li
461.685 419.026 li
461.627 419.414 li
cp
458.279 419.451 mo
458.852 419.55 459.32 419.401 459.377 419.02 cv
459.438 418.618 459.035 418.375 458.44 418.284 cv
457.893 418.203 457.412 418.293 457.348 418.716 cv
457.292 419.096 457.712 419.365 458.279 419.451 cv
cp
458.485 417.796 mo
459.434 417.938 459.829 418.507 459.742 419.089 cv
459.659 419.649 459.136 420.067 458.228 419.937 cv
457.327 419.803 456.896 419.236 456.985 418.64 cv
457.079 418.01 457.626 417.667 458.485 417.796 cv
cp
458.395 423.013 mo
459.553 423.248 460.284 423.025 460.394 422.477 cv
460.519 421.859 459.859 421.419 458.721 421.189 cv
457.624 420.967 456.848 421.103 456.722 421.727 cv
456.615 422.254 457.182 422.768 458.395 423.013 cv
cp
458.815 420.58 mo
460.331 420.886 461.053 421.617 460.853 422.604 cv
460.677 423.476 459.742 423.9 458.266 423.615 cv
456.772 423.313 456.08 422.502 456.262 421.598 cv
456.452 420.659 457.397 420.293 458.815 420.58 cv
cp
455.977 423.697 mo
456.372 423.792 li
459.937 426.687 li
459.788 427.305 li
456.337 424.446 li
456.323 424.443 li
455.803 426.606 li
455.307 426.487 li
455.977 423.697 li
cp
f
373.995 396.806 mo
374.54 397.006 375.03 396.943 375.157 396.587 cv
375.292 396.204 374.944 395.887 374.376 395.686 cv
373.855 395.501 373.366 395.499 373.223 395.901 cv
373.094 396.264 373.453 396.615 373.995 396.806 cv
cp
374.512 395.221 mo
375.416 395.542 375.696 396.176 375.502 396.724 cv
375.313 397.258 374.72 397.568 373.859 397.271 cv
372.995 396.964 372.679 396.325 372.88 395.758 cv
373.093 395.156 373.693 394.931 374.512 395.221 cv
cp
374.523 399.571 mo
370.98 395.478 li
371.111 395.108 li
374.654 399.201 li
374.523 399.571 li
cp
371.23 398.97 mo
371.773 399.177 372.261 399.12 372.39 398.756 cv
372.526 398.373 372.177 398.057 371.609 397.855 cv
371.087 397.671 370.598 397.668 370.456 398.071 cv
370.327 398.435 370.688 398.778 371.23 398.97 cv
cp
371.746 397.384 mo
372.651 397.705 372.932 398.339 372.734 398.893 cv
372.545 399.428 371.953 399.739 371.086 399.439 cv
370.227 399.135 369.911 398.495 370.113 397.927 cv
370.325 397.327 370.928 397.094 371.746 397.384 cv
cp
370.065 400.193 mo
369.65 401.878 li
370.743 402.328 li
370.755 402.222 370.764 402.123 370.805 401.96 cv
370.888 401.621 371.047 401.3 371.277 401.068 cv
371.559 400.77 372.01 400.578 372.567 400.716 cv
373.43 400.928 373.906 401.774 373.67 402.731 cv
373.551 403.215 373.315 403.589 373.127 403.766 cv
372.709 403.504 li
372.863 403.347 373.087 403.021 373.186 402.619 cv
373.325 402.056 373.078 401.483 372.486 401.338 cv
371.914 401.203 371.412 401.483 371.194 402.366 cv
371.132 402.618 371.112 402.821 371.091 402.99 cv
369.042 402.182 li
369.562 400.069 li
370.065 400.193 li
cp
372.061 406.981 mo
372.199 406.827 372.438 406.454 372.507 406.033 cv
372.637 405.253 372.18 404.928 371.805 404.873 cv
371.175 404.776 370.812 405.299 370.715 405.886 cv
370.659 406.224 li
370.203 406.149 li
370.259 405.811 li
370.332 405.369 370.197 404.771 369.665 404.683 cv
369.305 404.624 368.949 404.799 368.858 405.359 cv
368.798 405.718 368.9 406.09 369.005 406.306 cv
368.537 406.392 li
368.404 406.128 368.306 405.644 368.386 405.16 cv
368.532 404.276 369.124 403.962 369.67 404.052 cv
370.132 404.129 370.481 404.47 370.59 405.056 cv
370.604 405.059 li
370.805 404.524 371.293 404.143 371.922 404.247 cv
372.641 404.366 373.177 405.029 373 406.107 cv
372.916 406.611 372.685 407.027 372.502 407.224 cv
372.061 406.981 li
cp
f
423.09 386.014 mo
422.804 386.52 422.79 387.013 423.121 387.195 cv
423.476 387.389 423.844 387.096 424.132 386.569 cv
424.398 386.085 424.478 385.602 424.104 385.398 cv
423.767 385.214 423.365 385.511 423.09 386.014 cv
cp
424.57 386.776 mo
424.11 387.617 423.44 387.792 422.93 387.513 cv
422.434 387.242 422.222 386.608 422.653 385.807 cv
423.092 385.004 423.773 384.794 424.3 385.083 cv
424.859 385.388 424.986 386.015 424.57 386.776 cv
cp
421.398 382.944 mo
421.107 383.447 421.086 383.937 421.424 384.122 cv
421.779 384.316 422.146 384.023 422.435 383.496 cv
422.701 383.011 422.781 382.529 422.407 382.325 cv
422.069 382.139 421.674 382.441 421.398 382.944 cv
cp
422.878 383.707 mo
422.418 384.547 421.748 384.722 421.233 384.44 cv
420.736 384.169 420.525 383.535 420.959 382.727 cv
421.395 381.93 422.076 381.72 422.603 382.009 cv
423.161 382.315 423.295 382.946 422.878 383.707 cv
cp
420.28 386.094 mo
424.879 383.254 li
425.222 383.443 li
420.623 386.283 li
420.28 386.094 li
cp
420.308 381.599 mo
418.692 380.964 li
418.101 381.987 li
418.204 382.012 418.3 382.036 418.457 382.097 cv
418.783 382.225 419.081 382.425 419.279 382.684 cv
419.538 383.004 419.668 383.476 419.458 384.01 cv
419.132 384.837 418.23 385.198 417.311 384.836 cv
416.848 384.655 416.509 384.371 416.358 384.161 cv
416.674 383.78 li
416.808 383.954 417.102 384.22 417.487 384.372 cv
418.028 384.584 418.629 384.415 418.851 383.847 cv
419.06 383.297 418.849 382.763 418.003 382.429 cv
417.761 382.335 417.562 382.287 417.398 382.245 cv
418.471 380.32 li
420.498 381.117 li
420.308 381.599 li
cp
416.68 380.25 mo
415.011 379.776 li
414.524 380.852 li
414.63 380.868 414.727 380.88 414.888 380.926 cv
415.225 381.022 415.541 381.191 415.764 381.429 cv
416.051 381.721 416.227 382.178 416.071 382.73 cv
415.829 383.585 414.968 384.032 414.019 383.762 cv
413.542 383.628 413.176 383.379 413.006 383.184 cv
413.281 382.776 li
413.432 382.934 413.751 383.171 414.148 383.283 cv
414.707 383.441 415.288 383.214 415.454 382.628 cv
415.607 382.06 415.344 381.55 414.469 381.302 cv
414.22 381.231 414.018 381.203 413.85 381.177 cv
414.728 379.158 li
416.821 379.752 li
416.68 380.25 li
cp
.427451 .427451 .427451 rgb
f
405.005 392.669 mo
405.198 393.217 405.56 393.555 405.915 393.425 cv
406.297 393.286 406.319 392.815 406.112 392.249 cv
405.922 391.73 405.612 391.35 405.211 391.496 cv
404.848 391.629 404.807 392.129 405.005 392.669 cv
cp
406.557 392.056 mo
406.885 392.959 406.576 393.579 406.03 393.778 cv
405.497 393.974 404.879 393.714 404.56 392.86 cv
404.245 391.999 404.537 391.347 405.103 391.141 cv
405.702 390.922 406.258 391.241 406.557 392.056 cv
cp
403.208 394.839 mo
404.108 389.497 li
404.476 389.363 li
403.577 394.704 li
403.208 394.839 li
cp
401.574 391.914 mo
401.76 392.466 402.116 392.806 402.478 392.673 cv
402.86 392.534 402.881 392.064 402.675 391.498 cv
402.485 390.978 402.175 390.599 401.773 390.745 cv
401.412 390.877 401.377 391.375 401.574 391.914 cv
cp
403.126 391.303 mo
403.455 392.205 403.145 392.825 402.592 393.027 cv
402.059 393.222 401.442 392.962 401.12 392.103 cv
400.808 391.247 401.1 390.596 401.666 390.389 cv
402.265 390.171 402.828 390.487 403.126 391.303 cv
cp
398.786 394.671 mo
399.393 395.687 400.051 396.077 400.532 395.789 cv
401.072 395.465 400.952 394.68 400.356 393.682 cv
399.781 392.721 399.157 392.238 398.61 392.565 cv
398.148 392.843 398.149 393.608 398.786 394.671 cv
cp
400.87 393.342 mo
401.665 394.67 401.611 395.698 400.746 396.216 cv
399.983 396.672 399.039 396.266 398.253 394.982 cv
397.469 393.672 397.603 392.614 398.396 392.139 cv
399.219 391.647 400.126 392.099 400.87 393.342 cv
cp
396.764 399.018 mo
396.528 398.723 li
396.611 398.056 li
396.825 396.467 396.867 395.68 396.444 395.141 cv
396.155 394.781 395.713 394.587 395.183 395.012 cv
394.862 395.271 394.725 395.649 394.672 395.917 cv
394.248 395.701 li
394.327 395.297 394.553 394.864 394.962 394.535 cv
395.727 393.922 396.468 394.188 396.876 394.696 cv
397.401 395.35 397.351 396.261 397.181 397.58 cv
397.107 398.07 li
397.115 398.081 li
398.709 396.803 li
399.029 397.201 li
396.764 399.018 li
cp
.501961 .501961 .501961 rgb
f
417.434 352.15 mo
417.367 352.727 417.545 353.188 417.921 353.227 cv
418.324 353.268 418.55 352.855 418.612 352.257 cv
418.668 351.707 418.556 351.232 418.131 351.188 cv
417.748 351.148 417.493 351.579 417.434 352.15 cv
cp
419.095 352.278 mo
418.996 353.232 418.447 353.653 417.869 353.594 cv
417.305 353.535 416.865 353.033 416.951 352.128 cv
417.045 351.217 417.591 350.76 418.19 350.821 cv
418.823 350.887 419.184 351.416 419.095 352.278 cv
cp
414.874 353.314 mo
418.014 348.911 li
418.404 348.951 li
415.264 353.354 li
414.874 353.314 li
cp
414.684 349.975 mo
414.611 350.551 414.78 351.011 415.163 351.051 cv
415.568 351.092 415.792 350.68 415.855 350.081 cv
415.911 349.531 415.798 349.056 415.374 349.012 cv
414.991 348.973 414.742 349.404 414.684 349.975 cv
cp
416.344 350.104 mo
416.246 351.057 415.697 351.479 415.112 351.418 cv
414.548 351.359 414.108 350.858 414.195 349.945 cv
414.288 349.041 414.834 348.584 415.433 348.646 cv
416.066 348.711 416.433 349.24 416.344 350.104 cv
cp
411.092 350.806 mo
411.051 351.986 411.391 352.67 411.949 352.69 cv
412.578 352.712 412.904 351.988 412.945 350.828 cv
412.985 349.71 412.724 348.966 412.087 348.944 cv
411.549 348.925 411.135 349.568 411.092 350.806 cv
cp
413.562 350.821 mo
413.507 352.366 412.904 353.198 411.898 353.163 cv
411.011 353.133 410.439 352.28 410.477 350.777 cv
410.53 349.253 411.217 348.438 412.139 348.47 cv
413.097 348.503 413.612 349.375 413.562 350.821 cv
cp
408.819 351.329 mo
408.788 349.81 li
408.784 349.571 408.786 349.333 408.796 349.095 cv
408.775 349.095 li
408.64 349.364 408.531 349.563 408.409 349.775 cv
407.326 351.345 li
407.326 351.358 li
408.819 351.329 li
cp
408.852 353.052 mo
408.828 351.813 li
406.713 351.854 li
406.705 351.447 li
408.679 348.501 li
409.344 348.488 li
409.4 351.318 li
410.037 351.306 li
410.046 351.789 li
409.409 351.801 li
409.434 353.041 li
408.852 353.052 li
cp
.2 .2 .2 rgb
f
391.619 365.332 mo
391.859 365.861 392.25 366.165 392.592 366.004 cv
392.96 365.832 392.941 365.362 392.685 364.816 cv
392.45 364.316 392.108 363.965 391.721 364.146 cv
391.372 364.31 391.375 364.812 391.619 365.332 cv
cp
393.111 364.586 mo
393.518 365.455 393.264 366.1 392.737 366.347 cv
392.223 366.587 391.586 366.384 391.193 365.562 cv
390.804 364.73 391.038 364.057 391.583 363.802 cv
392.16 363.531 392.742 363.799 393.111 364.586 cv
cp
390.022 367.65 mo
390.447 362.253 li
390.802 362.086 li
390.377 367.484 li
390.022 367.65 li
cp
388.137 364.882 mo
388.37 365.415 388.755 365.723 389.103 365.559 cv
389.471 365.387 389.452 364.916 389.196 364.371 cv
388.961 363.869 388.619 363.519 388.233 363.7 cv
387.884 363.864 387.892 364.362 388.137 364.882 cv
cp
389.628 364.137 mo
390.035 365.006 389.781 365.652 389.248 365.901 cv
388.734 366.142 388.098 365.938 387.702 365.109 cv
387.315 364.285 387.548 363.611 388.093 363.355 cv
388.671 363.085 389.26 363.35 389.628 364.137 cv
cp
385.493 367.495 mo
386.081 368.521 386.731 368.924 387.216 368.645 cv
387.763 368.332 387.658 367.544 387.081 366.536 cv
386.524 365.565 385.91 365.07 385.357 365.387 cv
384.89 365.655 384.877 366.421 385.493 367.495 cv
cp
387.602 366.207 mo
388.37 367.548 388.297 368.574 387.423 369.075 cv
386.651 369.517 385.716 369.094 384.955 367.796 cv
384.197 366.472 384.35 365.416 385.151 364.957 cv
385.983 364.48 386.881 364.95 387.602 366.207 cv
cp
382.913 370.986 mo
383.121 370.983 383.557 370.904 383.913 370.668 cv
384.573 370.231 384.498 369.675 384.283 369.363 cv
383.925 368.836 383.296 368.926 382.799 369.255 cv
382.514 369.444 li
382.258 369.059 li
382.544 368.87 li
382.917 368.622 383.263 368.116 382.965 367.667 cv
382.764 367.363 382.393 367.222 381.92 367.536 cv
381.617 367.737 381.414 368.065 381.328 368.289 cv
380.946 368.005 li
381.048 367.727 381.336 367.326 381.744 367.056 cv
382.491 366.56 383.125 366.78 383.43 367.24 cv
383.69 367.632 383.676 368.119 383.321 368.598 cv
383.329 368.609 li
383.858 368.394 384.469 368.492 384.822 369.023 cv
385.224 369.63 385.104 370.475 384.193 371.078 cv
383.767 371.361 383.304 371.474 383.036 371.475 cv
382.913 370.986 li
cp
f
441.939 436.609 mo
442.34 437.03 442.809 437.19 443.079 436.926 cv
443.37 436.642 443.197 436.204 442.777 435.773 cv
442.391 435.378 441.953 435.158 441.647 435.457 cv
441.372 435.725 441.539 436.198 441.939 436.609 cv
cp
443.103 435.416 mo
443.774 436.103 443.744 436.796 443.328 437.201 cv
442.922 437.597 442.254 437.613 441.613 436.966 cv
440.973 436.309 440.973 435.597 441.404 435.176 cv
441.859 434.731 442.498 434.794 443.103 435.416 cv
cp
441.192 439.323 mo
439.823 434.086 li
440.104 433.813 li
441.473 439.049 li
441.192 439.323 li
cp
438.504 437.328 mo
438.9 437.754 439.363 437.919 439.639 437.65 cv
439.93 437.366 439.757 436.928 439.337 436.497 cv
438.951 436.1 438.512 435.882 438.206 436.18 cv
437.931 436.449 438.103 436.917 438.504 437.328 cv
cp
439.668 436.134 mo
440.337 436.822 440.309 437.514 439.887 437.925 cv
439.481 438.321 438.813 438.337 438.168 437.686 cv
437.533 437.033 437.532 436.321 437.963 435.9 cv
438.419 435.455 439.062 435.513 439.668 436.134 cv
cp
437.138 437.561 mo
435.896 438.774 li
436.587 439.733 li
436.653 439.65 436.713 439.571 436.833 439.454 cv
437.083 439.21 437.388 439.02 437.706 438.945 cv
438.103 438.84 438.588 438.916 438.989 439.327 cv
439.61 439.964 439.568 440.933 438.862 441.623 cv
438.507 441.97 438.108 442.164 437.854 442.216 cv
437.637 441.772 li
437.851 441.719 438.214 441.561 438.51 441.272 cv
438.926 440.866 439.018 440.248 438.592 439.812 cv
438.176 439.397 437.602 439.369 436.95 440.005 cv
436.765 440.186 436.639 440.348 436.533 440.48 cv
435.218 438.712 li
436.776 437.191 li
437.138 437.561 li
cp
435.876 442.222 mo
435.529 441.671 435.005 441.537 434.525 441.84 cv
434.212 442.037 434.044 442.416 434.078 442.784 cv
434.08 442.865 434.105 442.958 434.164 443.053 cv
434.576 443.679 435.161 443.964 435.706 443.62 cv
436.156 443.336 436.223 442.773 435.876 442.222 cv
cp
434.624 439.908 mo
434.513 439.969 434.38 440.061 434.247 440.178 cv
433.516 440.829 433.461 441.7 433.771 442.389 cv
433.79 442.379 li
433.82 442.02 434.013 441.617 434.439 441.348 cv
435.12 440.919 435.91 441.108 436.384 441.86 cv
436.829 442.565 436.759 443.518 435.96 444.023 cv
435.137 444.542 434.194 444.242 433.563 443.241 cv
433.085 442.483 432.981 441.713 433.121 441.095 cv
433.243 440.579 433.546 440.115 433.995 439.75 cv
434.133 439.629 434.26 439.54 434.354 439.481 cv
434.624 439.908 li
cp
f
411.52 440.118 mo
411.528 440.698 411.762 441.131 412.147 441.116 cv
412.553 441.101 412.717 440.66 412.695 440.059 cv
412.674 439.506 412.495 439.05 412.068 439.067 cv
411.684 439.082 411.498 439.544 411.52 440.118 cv
cp
413.183 440.011 mo
413.22 440.97 412.734 441.465 412.146 441.487 cv
411.58 441.509 411.073 441.073 411.031 440.157 cv
410.996 439.248 411.474 438.718 412.076 438.695 cv
412.711 438.671 413.15 439.145 413.183 440.011 cv
cp
414.55 441.886 mo
414.566 442.467 414.806 442.899 415.184 442.884 cv
415.59 442.868 415.755 442.428 415.732 441.827 cv
415.711 441.274 415.532 440.819 415.106 440.835 cv
414.721 440.849 414.529 441.312 414.55 441.886 cv
cp
416.213 441.781 mo
416.25 442.739 415.765 443.233 415.184 443.256 cv
414.618 443.277 414.111 442.841 414.069 441.932 cv
414.034 441.016 414.511 440.487 415.113 440.464 cv
415.749 440.44 416.18 440.913 416.213 441.781 cv
cp
412.178 443.399 mo
414.67 438.596 li
415.062 438.582 li
412.57 443.384 li
412.178 443.399 li
cp
410.127 439.326 mo
408.392 439.336 li
408.224 440.506 li
408.329 440.491 408.427 440.477 408.595 440.475 cv
408.945 440.474 409.295 440.549 409.576 440.715 cv
409.934 440.916 410.231 441.306 410.233 441.879 cv
410.239 442.768 409.537 443.436 408.549 443.443 cv
408.053 443.445 407.633 443.308 407.415 443.17 cv
407.566 442.7 li
407.755 442.81 408.127 442.948 408.54 442.946 cv
409.121 442.942 409.615 442.561 409.611 441.953 cv
409.601 441.365 409.206 440.947 408.297 440.953 cv
408.038 440.955 407.835 440.984 407.668 441.006 cv
407.949 438.822 li
410.124 438.808 li
410.127 439.326 li
cp
405.567 441.398 mo
405.813 439.899 li
405.851 439.664 405.896 439.43 405.948 439.197 cv
405.927 439.194 li
405.747 439.434 405.605 439.609 405.446 439.796 cv
404.098 441.143 li
404.095 441.157 li
405.567 441.398 li
cp
405.288 443.098 mo
405.489 441.875 li
403.402 441.533 li
403.468 441.133 li
405.942 438.593 li
406.598 438.701 li
406.14 441.492 li
406.769 441.595 li
406.69 442.072 li
406.063 441.969 li
405.862 443.192 li
405.288 443.098 li
cp
f
402.278 430.61 mo
401.979 431.109 401.95 431.604 402.277 431.794 cv
402.628 431.999 403.004 431.715 403.307 431.194 cv
403.586 430.716 403.68 430.235 403.31 430.02 cv
402.977 429.826 402.566 430.114 402.278 430.61 cv
cp
403.739 431.413 mo
403.257 432.242 402.581 432.401 402.078 432.108 cv
401.587 431.823 401.393 431.182 401.846 430.391 cv
402.308 429.598 402.995 429.406 403.515 429.71 cv
404.067 430.031 404.177 430.662 403.739 431.413 cv
cp
400.665 427.49 mo
400.359 427.985 400.325 428.476 400.659 428.67 cv
401.009 428.875 401.386 428.591 401.689 428.07 cv
401.968 427.592 402.06 427.111 401.691 426.896 cv
401.359 426.702 400.953 426.993 400.665 427.49 cv
cp
402.127 428.293 mo
401.644 429.122 400.968 429.28 400.459 428.984 cv
399.969 428.698 399.774 428.058 400.23 427.261 cv
400.688 426.474 401.375 426.282 401.896 426.586 cv
402.448 426.906 402.564 427.541 402.127 428.293 cv
cp
399.46 430.616 mo
404.144 427.894 li
404.482 428.091 li
399.799 430.814 li
399.46 430.616 li
cp
397.204 426.325 mo
396.485 427.265 396.365 428.02 396.81 428.361 cv
397.31 428.744 397.996 428.343 398.703 427.421 cv
399.384 426.531 399.603 425.773 399.098 425.385 cv
398.67 425.057 397.958 425.341 397.204 426.325 cv
cp
399.209 427.773 mo
398.268 429.001 397.293 429.33 396.493 428.717 cv
395.786 428.177 395.815 427.148 396.72 425.945 cv
397.648 424.733 398.681 424.466 399.416 425.028 cv
400.177 425.612 400.091 426.622 399.209 427.773 cv
cp
395.286 423.231 mo
394.971 423.559 395.049 423.973 395.33 424.439 cv
395.706 424.614 396.116 424.622 396.403 424.323 cv
396.656 424.061 396.76 423.638 396.362 423.254 cv
395.993 422.9 395.559 422.948 395.286 423.231 cv
cp
394.931 426.047 mo
395.314 425.647 395.221 425.189 394.898 424.635 cv
394.408 424.377 393.958 424.43 393.657 424.744 cv
393.322 425.062 393.292 425.598 393.711 426.001 cv
394.11 426.384 394.605 426.384 394.931 426.047 cv
cp
393.144 424.367 mo
393.543 423.953 394.071 423.899 394.641 424.115 cv
394.65 424.095 li
394.451 423.573 394.567 423.141 394.838 422.858 cv
395.339 422.338 396.118 422.407 396.693 422.96 cv
397.329 423.572 397.264 424.277 396.87 424.685 cv
396.603 424.963 396.181 425.13 395.592 424.934 cv
395.578 424.949 li
395.831 425.503 395.807 426.034 395.424 426.432 cv
394.875 427.003 394.017 426.916 393.391 426.314 cv
392.704 425.653 392.683 424.846 393.144 424.367 cv
cp
.4 .4 .4 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.1.0
%%For: (Tom) ()
%%Title: (Infographics_004.eps)
%%CreationDate: 4/15/2015 1:01 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kfim-$e*qiLc]`]p((q7qBO?98aKe6*+:o[m6A-r+_-=Rr9\tEjgAe0ZUi'>D74&o,N$i+OQ`?BU];iFg0.iICK3#,2\gXud
%hC'e+2,d?Zpel#.Z*a/)IMDIp@[,Wt5r39K&%h4DeEcqt7_@F0./6$D<ae5*J1G'eIFMr;s!j6O@J'u]Ge<*P:iA`f]A!bk"fnR5
%TRKKO^[=B<kQ!g\\:(sC"OM/<n&$EDD_gb.:.ZE<-\hYe59<60oj5BPp?V+skD+lYm96m_j/<X>$ddQr6%sg3E3W6"cGMrC:WG"3
%=R`TqY^g#\'Fm/0l&f!^%&B&9$N!?.WD3l[s410I5=$7fKV,Z(?81S&LPKF\6_apQ;D:eSXK_upci=>S-Bgh-Sj^gu,O@og<19d#
%c,(BI'>JKsO9%XP1[Li9=L2h?kh$%P^)8UIHuiSJRRfI8ZQB(Q;0Wk1[A_9%l#lmDp&BTiQtA&Ad@_(o?ao<Ki0m)B/sX>'],!8S
%b+s=0#`3'q,0=2HE>!FJU->Mb].lQ*C_WCaPa@$b?MGa3V,Q%i#G%f9dXFP1\u)Js_('+e`@e*diYGK^\%&4R+B(/XiRE*;liGl4
%So#1e+_]h#[sh1mD6-$)?jNXH1j#X"Y9aOU!ZN-Y(OIer_TV$o2HuifhiCrgqPn`(mgI:@'_d[A-mt@6k#j49,O[IE]H!GD#unW=
%%f>3S6.[ql"mPqj./i@"4h.N-J%CYi/IVTi0)kNl%b5]Lf6+a+lZcF]l.$n!c"SuW68Zm&DjH)jQA'"<'a20Jf0p\273'o*b(CcI
%c#jU-5N,s;o6j$uI;J3GGfBCh-OB3V&6K]^*X%91"LJc31n?Cm&KR'A`MWREY![8X6StSHrurB0`Mo]cO=:$b3(Ob_-+%`:d)JTm
%rl&eH'`Q(S.'mU=8/2%L[,VAo,@*8YjXH`$U*47G(NG$,@9cE8ns%UfQ]tMFQSt\i;Zc1Tl0RX/AF`u)*/4BIBLjBI`NH-^.HU1?
%'-)Hd1o-7,R^.Z+7N1eMIR=19*oLB`Gm*)56phm_0,5g6(WouD"!!Nj!gu1&,VD,=7ETsFUWhc2U"!!BaQ2U8kfC,L/iJU(s$IbO
%OR";-8=EK"l"-Y&rurB3Fek/jKf6rcLk>gsF0=W[Osp4k(f\tp3ch.VH:K;X<JDt,2\I`Ib'c<8b'Q0)AKI7%(C[4&:*7mYpp>D%
%!PM8.A!<gF8i<*\Shc+F&Wm$k.OWeCgH]gt]nr;"AgMUc24`JeU5>[kU.sG6'5;Mo-dodjEH[N-#tt&8q3:]rZt%fh<>G'H^,&ii
%ZMub@?:s)=Itg8(-h$[lBF`2dq(I#ks4K=/T"NPP*/AueS9T.2rTAIu;Y!T_/!]>mjIQ8Tc-'Z*9&Af^Pm[J]][QnFpcmp(;24k4
%b*RS?hrm/MW#<<X#(bsa(G[r<40E&ECa-Si3J1c0W7N[>?$p:[M]hkjJ,NdQ4&O;!d</ePd<lRd11-1\j8@5Ds47YH(QL]U7JW+9
%FYbTCENa?b8[SL5\]a^7dBP3.XE>6q'Yi)cpq"N.)QQRd;9fht55k$U2ShU>9E+rrE/jsI=5Y`ZFUZ:r!r-"d$5#bdUTWY<q:CMV
%ZX"@F*F9BbM;JKIF#-@^V"I'ennS[M5M9VF-=/5(O?('.X&Ie9$cO>r:fL1Zk30]<Qf#,VN-.Eh0o%@I(Dn]Fk/Et743B^;;3Q!S
%;$9uima;nnJrQ?U7\5!2&(2pqjN]E8X:dV=GZ>B7X2pt/?'#-V(3P5`4^%ju*1+3+/eQ50Pk9+D,pmg[3$YoNV7@n(X8!`Y$*dQ)
%R7EQDN:AgSGT-K!\jl'M;sH)sA$po5)bWcsS1)C%+i^9MMLk5flhPFAI"@j;mkjCW=r]ZPl?t<g/Gt[/q'C\M_21nRPgp")Z7(Mb
%#a3Rq$;B2C-Xh<g>rZQsUYghr:TFm!Y53$FU^9D&F/!`k%OS'Xn+b<2=/2AokM^31o%oRV8&_.E5p@8^6mU#-$&YR`<J5bN/ZpX]
%nt=@L\r3X96<lj)bu=F\jt>*0"\q*j@`f3XB#^lF4H;m1`Ubp+fq=u5HWhr`jD"(W<%AYO\%Ju''1Wk6'LNonXVKLDK*c0?bcn!>
%^CkI[@4+T+FUU[]n?^+qoDB_cMp4\^-Yam//q3(HXD!>rYTaF(&Ub<aM7Wl#/(>'7ei4D$i*%Hh`q2$Lpj)\#(_HH1fFdt)e@/%Z
%8DI?J;Cb?*(;9LL\;WBOBEWOEfdN@8nhQB@O@UR>8u&T-5;._RiSDIa,^'ua53*V=@[P(nUhdh[&f/VtE?ss)P&=c:?uiZSA>:E$
%BY%F5/qe%m7PU_POa4f3i!1$?piY.NBhH:B3%1%IL?(GD26[<E0j&Dr&^g]kDT%m7pV^'^/s,Op+7q_$GE=Po'Mt]i1_\XIa@Gk0
%_CC2X-nQ)IWYTE!PDh>>Pp)nnYpH`".;Kn%9QWHKP%,.Q.[@q.U*[aAk6<'(M!C1a/Ep%U/<Q_"4._Z$lQ^g`<X]"0i!==m-5.e<
%OX%1(eEXmS)>f$nXdFA^CJ1psJ45HS]d!km'R-:NlR]X*asoFS?dH#u4sR9CIpuNI8=7b>a.1ajen%F$PU;@1@4>uj5GoYk9$U"3
%k'=khAJEfL:emgtX(4t3euUESA;iL;aB1g?gf%&SR:@Q$Ep"jFNRNhQ[!<]ZGZ$jn4RH5bk$9rnAa@[B<MiZf9XS;t+QP:o=k)e1
%m&%>f(P5-9\=)?^,r/V+AWQ9L\5F_<G_&tc+Kj-A-&]Yp$G0X'b!_ehn&@CAjX[<t17i_:lagIZ;X@3lj/o"TJAZsu)9G-80,,O*
%8=JaG:f^i(o2N"M.!&g9C"L4%Y'&tX8LTT=Br:JpRL[uA9!'TR#Aj0jJ#VAYB6H`=)b8Bl+R0^/d&nYbk<n0?,%*Gm%08tmaPF^U
%'k^&Qee6;?*4g.j8=1h$DBp_t*+,$iP8Y+`GtfYnD=UiI5\ZT[+p37UFn'#rq&K:G+Ba&GF1n8(:ir2Kkb=OZY7&()NZsLPmXh`>
%XC0".cW71cA_;6j)'s>E\MH"2`rrC-D"=<`VNj'i1leU225.RZhm-Ap^B@UuC3%5?:;>+@IK&,?5+5cO,l#"0XA\LuI7+b=>n"f,
%CuP;4g69fPensukO/uJq)::+)]\N=9NKl%&bU9o&J8-OBi5GB^kZP52nhtQ+1;C?pYRj7h)oHq8RUM8d\dZ-1P!kW/jedHbabUi3
%orKdT_>Z3Jj.0XQ,-3QO[C0M[OX8AW@-ka-paSL/E9"(D97N#!6":l2HLt!@SM*YtDt?i)6h"&K4%@[icK#BKgIt.;0c;9!,AG>q
%V2iY*'M8_$X%Amh<m?.qN::eL#>r-'^*NsVZ4[]/"Y:,$\cM75P92smDRiSJ+S/7XFe!ik6=VPiXqjXP&e$9&r`A[L+8k<f*6to$
%RV;a\8qsN@9G@o'8jKOdZ'#pSNRC.'<J4=@.s`J,rb#Hg,\pm:_mZpC1;M(ZQiqF1P&j\OIIT'8o"\=T%@WVW?q$T^1FWQ2$,p@M
%1'bi6MZT+Jd%".[aE2E$h%r]/UZ=R)m\ht[gIM%eI9"mI^'@>cSLV.#i(AZeQuTi1W92SK5eKHE6SS$AZg[ZIYT_SFRW=T9TUEk=
%P@&jPeDaB<"6gWKO![GA!(;,(8Ma[Q=QLeY[a9FVV(uZ<:'mES^8T7$M_pgP,o$2tD[9%%aBA1m-n.r>*TTpK$,Q*tg+1sQA*S&s
%KLV#6n^,e1RNj_'WBHlCOB%114g1UF_BoZD^LF:>;AH='(UA/sk6s#mMs4!D'9uVFBd3?cI7LkGUs_,an]1??2m@^6iYJUHEKd0K
%4L0Tj]/Pu`B>oe>+E<l0'3%$l%S?mm`H'#t#&k+pRP/Q@W&dJ=c%20bGS?WcTfA#&U*mdV;+p$kJ^::C)WQJQ]\jc+M9[n6\7>\k
%Q*Om,et;>BFBZ<Naf/Pi,47UN`TtbAnVT\'NV.gF9Bt-']ith9*i4c/ib/67P%V3nY9=9&5'e032G4fRc<io39k7UgotVpCPTu3]
%2AD,=Su%pVTp/P?h@%YM=B'#!7M_\c>'G[)3U-UNH53qW8%(j7Lf^!4hpBMFL&*[6#4ercCu9i,Un&AY3n%PNgaa_tp<,,l9@[$0
%7DU.4P-!n7Tp,0*,AR9bm6)rM=S=@i(OQ?d/'bGDU<"W-7,a[EY(ZAa0S.?\`+0paH7=%>+G61%Aoa\&V=O[kFu2/9E:2OEbB-Do
%"DY0-::<%n>8Bk-80tI+P46[A/i8C!X%_s2Zbn(Ze>u'PZA80(M:j*?,q`F$:;+7!ajB+>qg0+1fk$D]keD[@f?rQP:=WDN2)\a[
%%GN\`!9LAF\B^`s5ici;4p8ON9d]<U"^n,I3)ZH)9]aP$+=p^n6)N4).f_dA_05i!0<sijY:L[0h@nkY*a@m.D;2MFjd^ci\NB$:
%L+eDW0'WRZi^=<)QYN'C]OF[rfm*4)(bXNi>WEBP#deG++S$i0kISkl1SJh\OicqUWucmjf#`.+SHK*3[n&Q*\ia'63XdATNm3tk
%\M*+XG.])gUYiW-O$rMIKqSReV$U;gBIG$;5"_\^hMGa!<uE2ZoP?QE:fgg5`k6A2,CkO#FaE<sbBT0C+aY:)0#ed#,'[;V`=eHW
%o8;q+fQr^cWB=9%^N`ScO$fTn;TNisFU.M\d=`t9Jlf_D3sgmk#RHVpOS:S&8\Fl_GIGL#?S^Xo=d2SPJXS5NA"1n!J]>IJhER$;
%9G^th]KH!1:R@#h-b`=[M2HjOC),RSK'X:1+*C/&.DD_qA.qT*/>@:^p9Us4m#tFEj87\#n$+%t8cOLXkX>/SHVZQ^YP0(@6Ug.Z
%0DPm&]SS1G&f"ne<6[q2hUS,meE$(="Z'fQACO7c5-E["l92PO2<oT`h<#MJ5%2\A[[#+"S55hbF7`>:NT1<u\-_2%LM`3`RJb4m
%6qBd:Zcj8s2^5LZHce>PGFb(n2EA<!]h_JYFI0a]o&:XP@UfV_<O.l1PVmc[U9"k#KH[2bKi.1lh$a8%8kWba8tqL&#h?dH?!`/+
%M%T>8o<L>EeraDh@@>EL(m5c%-&f?tN6MORQQl%r_1JbT=DW))/SLZC$7V\7Z\-U*A.:B/EoU+L)#>dgB3?TjSLa<gXsDR]oO=`1
%GbH=Rd`0-l:9XfXYh$)3g*Pi=QV)cd+p"F]6H'9<Sm<C?d@,kQ$ADib"\9t2QP9ERRin[X.;rZeO2\EB#*aEM"@r=4fGW\hPN\ED
%d^`#3n49_1&)pbd>X)YN#b"iADk%qD"Pk>t*f2*3=KWAG^(.kj(*qeE`/!Hg;McCe*[Q0diY%(\W=E'UI'VFF%)Q?7S>QmbLga2\
%g5<"/MddHPe$$]!Zl)Fn.=Q@/.S26;Tu<,&\MDRf'kNBtCK7hq/GtTU*Dl,jL?t(&aVD/oMr-]KHH/^;D1c_;Am$ph;434AF;'K5
%]t.GY5a%hO@9B\n*iV"-bMB!`!Ni)`bR2d=pM<d9IF"dL&Z*]4V+7;'gcN;3;;*1GJc7K0`5_oj;c,-44h`FWccR2i4(f:p3t$@k
%c<6%iioU`5\jrSllNh[ee/@TA5IY16L<7d:&Rq-_4khU*FK&)"c-_'<=E:3X#I%hQ\H<._OYu8:%PF"46'8E<N#J[4l6q#-gscVk
%LuQ!jH^2T6!7_57I:A+q2](^A@cZ<HE`WJ8]<jUJ8DYVT2b_QI'ZFSd:Md1SaX;[L?I)2RDeaqVS+8meW9dXkD7Z0QC/"?$@VV9^
%a0HMJ-/s,B@b<l,48D]FUp'&%GQ8EVq77$9)nYOe/MBo)/_f@7:[J54;hg;Bo8Img-jdtQ=T0pQ/QR+9%&=<[7B/JYj]X:i2RKdf
%4Ntl'2,nCYXtl^qd#J5\YQZVOefSk79?On@'i;d_:^%qd@"M#OG(Sdl:f,LuEh.PEE]lULR`^YHBD3FsU^'7mk.$pL'=cXAp.jED
%."c7![dBCM`AKrABt+uKCc=UbeSpMsCnT0FlEL`/9MnJ(FismaE<CZ\H@Kp5O"F8.R'p^5`&N9>f)t_n>SFJ0X8'8,6%'lE!7spS
%D$*prqjRpYO[9^ig7"e+AOh[Ig8(0FPBu&h1*i=HqGmo'BrVIcC;?R"Z-]KoD<*@41/'I""nD8CU]i;/!B$N*7Z-`u3>JZ$e#ac6
%nDO_bm]",hpr$^Q)T[iO+0_]hG;RZtb)d,.CmdiD5h5s?[8g?7K#D6Tbg1op!SPu%CaBO0Qj0@hHaKqXnV/9'N3'81_^17&5?\/N
%G)i:'.%V7q,SLF/V`SXf!V$5Nq_<[,#g5N8!E]s^CI,$&kiZe)f!Y(1KH9Ici0k"Ic+)&W:3IWJWJQn8K[J9=?m+h?n2bPi.24^&
%"_ATK7PDQp(IJ#GOs"OjS(<+co3;-W([=(AB,BAH3eBa)+<44V4Ub[fG>[<Il(AOh!C6s4=U0%I,:fiR*[Ngr+KbsJl40ucU)MC,
%!71a"4!``F!1Y/mJF::6c^TG/+C,gCN7%e'3cUF!'QHFsEn7?D4Wq+m7i;dF&j8M6;l\cf6OSJ_)T6rPE<2b=NhAg(T[_H;JER"K
%Z:Y"dW=a'4M8JmM%LndHkZl2>O\3_uP>R(;$\@7gnLcEY%Pee&ci\BKbSM,<C-_\Z:7etJP&1eTi:-u%>]V=u%1D1G!.!Vqjs*`Z
%(9l^."C)Oe!A-()h*DAoXTN$m*uccR)#3Qe.f+-=#p32Q>$S6R&HIB<apNsG!c#)1E,`oSI!D(K[nM]3I')ppQK(1T#^)\e-8:cS
%e?ntt.!U188He6>$0tuf0Hg]4/5ShB&.#k.SPYQplP@0/Zn=@%QkW^n'togoO'n!1Ch3tJ#n\IXWq'`W%[&Vl6%\9rWWs9dM[%;:
%BTBTAVfEYhC;K[hd4SRu1i6=\Hfj;UF;LokiM=lM7A85lo1_5j:RCt$L-E0;O`W%*`-H.)@j[i2Pu4=%>8^5s$"_tcH0(R/TS[/=
%+%ma64q2<,1Mf_3I_Ap%^aD>QA__Wmd=6c>'1lVFMPW)353Dj'/<_*"IXX'HBaOPM]s3\N"6Fq&MVX4AYQs/E8':dCofZsZPkUGF
%8`WXuE=>Sb..M;^`jh!\cX+6t5jQqh9or/`$S;$6M>nh*Z5&;aJFdW)I[_t.Q7cK%[IG^la?<J&ERhlMdJP\ZS&UX)Yt<Y&.PAh_
%Zs3)!Yds^l-j-b?'>=_BGn/enHhbW+l*tU>S78j8!)-2)$AYq>ji![Rq"/ZKPOI..:9mF+3@L28cAI)cm]L0jOSC6dR&;*<.P3["
%Cp;C#jA[dcBSN/TgrAZKN%;[7k(7SJ(*.$:OZOIRf!-dCkC<mLmfUW%o;!eUG-+SI=LZ-+WeFn<4PM,#.XW:b:Aiq52mn=.\?gmC
%VPEoSQ%mT&YT)4\UVOb2c0L[I;fiFGd&SGAAo#+FF:=Yr@R-!q%,'Ssei7DGk_"`XE7;;hUACV8NNb@P6]tkW7NRd<2Wg[,RP)3`
%hb:s7-Y5KRfq"-EgDXU!AN[)qWnE:Db:?kiIFsfhaZ\QU'pB*(YmZo\JE=$<Eg]FkieR6;GXDrU."+TYUtci!14ahV84oh@B4;V#
%6(N5lCsJ)j-22&YJm8/Q,bG_N#+<eg8GRO93O0,^MLtL6q]dba4Sss#)VZmqi8'I?&!n:Ab9N$:GMr;8D>IcdRq7F57.AiGqfI&5
%P6qi<@SEdkM5Su$q8Fm>Eq/+Z6mN40J7G<bo?FB\,BC+Z=>FTA*@0mJAd'Jpg6hlG.=:*V?(*kl(Fs1P,[@QfaZ!._,40)OMMZ7l
%5Zt?+;mEXZ5bbVRF@<%3S>'#^.('E<XcUcV+<K+pJgL:L=SOUfblTg4T2CHedr(se=?d?U3iUW>T=5-?'jAAG[1#NC+<J9<p;`tT
%J<h.tg':f0=meuGY$e[BqBQGA+3]>]KR&F-qWpb['c;[&Ej`:=P!U[c2k_5P:Gm(?%9FbP7-fq0$j2VpYc=)O760@p\o`$<A\<"<
%_Z,58Rb:0RhaO:T$s%aaH%R+L?u_6]:L:67A<B9:UV!8G$KqYOf$$+^+u0ZAAHj>.\4BG:3,&Xa_3)E%]95/>@128*i`[RqnH_Y0
%eephud.+`)$D!SZi3&.ah,7G)W8N>69fL.ect$+%TAJdZNg_c#+#c!TcJ-jl&SiV7NWg`>:6jC#+f[qR9KKFP<o6fflGi9dkGd<R
%[U>VMPRk]f1+$lWPaU@F,HpS,F)9n@R2[h-N$!tSj[^kF/_97?+im;3W_HN1,ooFo>,3EPC=aN@^tHOs$aeD5:L0e[b)b!fhYq!<
%n_r^(kek`M@cAQi5??d3gU723fn*T99DpoVD-*k[MOc%O5WHRgQpk%C[VaGZ-^?FW"3hWBTWp'k;G!`_V.YAY>,\f2X#g*!DJun2
%MOk-&P'C6PTY:UZ,r';7S*#BsbYaV67c&H!-pH>$+A2nT?2@"F79Z,n6s0RT=,&IZo"q*%dA!GA#MKF=7j&!DhFitI$(>68md$X%
%.6V()/lpX0X'>?0$jT[O8i>]9fgM\ZOo&+`nP[S?%'guXc)sfqQ3?>i5RpG^&&%bJ3"<"TAg2H]Q&#Ii\r@9)i8t*']M9_Jeo4DE
%e&L4PcO?5kkD(@E[oJ9g;3E<6'3hVM8Db$J6VUlf5a9i.LBiM%+FZhG*4%W:e87!;b<:&)".r`s2<>/Uc?Lp0n2B9YjlEq?9,sRf
%X8C"#^<g\Qc<DcX;2Oq]en!*bG)j+r;2SFWqHdUu6FLo\kBXMkBoNV3dcmnC@9oBNdPX,;F;hj^K.P[`2Idch23(J?>F%<s=e`i#
%\LZ1h.STEAlpY&jVTB4SlS>[0,R2H+U9$cm^aD4&&'`2Vl+SW'KF70C;:on`eiE92@Mo2l_AJH%(du(RPB4`*'f9s&)*`#0&Vo:I
%\8g^$SM<;LiB9b*kWS1=71P<Qe:GBTi?<V07b/c4.t)@<,u13OXr:KFqpZ.p:KDP5?(p5rJ?3DW#V@/PU9p\#!qh,CV!07\dMG"0
%7+Q>5nDdn4q\=("TUS<#bB=1S4k4"gTZJ)"ch?6jNG#C<'=/`p:E3"M>5p0pPLkm`+:lmQj,\dp.eWg>V(rf.Fk#K:&MAI!)Bc_/
%lrI/u)IsYP;\"B_"ZGM/o^Dq4J=(NROR1Uo%EEWS^)JBm[$._KojE"rO9C?d4EZLcq2TkNE?0Ijasa/17.W#[;\5Fk)pQT,Z3[&P
%0Tsl<OR&&N!m$rULSd)K/^TtKflu*^W)"P0OmEjrprL#.n6C!u-D]E#8cPTRI]29p,:]L0Jfr2Kl8/h//mn?H/Zf=Y)c@1^`je>o
%AYfA?72$/AN>N-5/)&WG'.(pcog6K7J"FAbjs\1<"IqV&Q+7,_Gph,mEn/ZoI=[Wta/gFsIS<Q0!I.j9+ge0&"a(3k+ZdLN+n<HQ
%ZDW6kQ5c&3a&'nO0X4EX;l*68cANJZe#Va&H4W<E1AsIH*-oU1pqqYM*#=]N_+rWB7LLo#A"(2TI^E;ZKs$C&EbLl6W5Rh(:::#F
%WR#fuAGXusM36.O=:uBI+$a+Cb"WFK&9D;c\M4j>?bOH3&`e=bErSbOO(AUcJnp2<^^nVnCU^SZ:*b]PX:]]/4BX5V<b?OA5k>^D
%F"8bPYfVf8E2/!fRd&bJ^IL+&o5[?]SeW$:hm:s^Mk>BikoFs[r5DnCWF04Y+`4ZsK\c[P<Bf93:>5lcl!n8qTm-3fpMIo6mP:7:
%!P*!(c\WQV&DqJeT,jAmk)mYS_/Zs/A!uEE=g$nN?UD#;pmHq@EZa7WUiN2)V],m%KEsePDa`=1)<DQ#k9+pkW6M-8UYg-RSg>>*
%R!%s]s4me:BC-tEp]Z9H\!iBO!@caoF5H)/5+S0UUF&_+\r.R%T54)Hmh<'G*8BUDmal,9T%7ugR5sVP0\E!1gb0U0q_c2qN..Bj
%\`_Rq&Zua399iNeIhnW(o\7W&eEZ(T_UG-95O>ftm0e(pq*M5)8,Y^Y]A5>?$/kGe)]I41pq-1-rch#<3N%Xl!F4FE[KiAZep7/D
%+3RumI23RS7+Hau>Q8&0.ib(-K.d`CbIc$g+tB+)_^b9Zhd`0c=RSABcsb9,]2=,cKsp%m]V"52T(_:0]\REO*DgFGok2cfGD(ud
%8D'pWhM0i]T$@ic@4U[[aG%.m^&"@?,m9M[]dL$hh+$4,#FImt&Y.>^@h=;d\V:IgQ\A<^C=RWMn+:C1ne@IhbMs\hZZ`,#CW7BP
%OSEnBg%D+Xl_$\EfcB];$Rb=b,@L^D@$_KLGPeblbR>+/B+4hWB=DqHCc(Dnh6:s'Y@dI"EBP@V7,(sM<$beq)H"3_%lW3P7`O]c
%#Q<lRiSj)CB`5AG"$%Cr_e+[R40EbmB6gVEBO[f=#7il42iP^9r[[>:0>U/LFi/)[RUFL@,Nn`#%B)E2eGE)eoQIRi*e:.N^'m(/
%7a+-59_pVB@?hF+OgVT$J#J'!93c%O\m_]NMpt4)q/r_Q2IZEk@%`*d6:[I%Jm-M.V:r%952Q-Gldd0EGO8E*VnkT'0bfiLZP7fJ
%Jtoj:T;RppJY@r6!33&6FK\4m<=AfZ\,LUrp*TNi0C1X^3U,9Cs%6hB[7pG#i!0+CiOSJ"/CMt'gX-o/q7p677s.g-/ZHHf<\#Ze
%9d(ND9N6RmAVc@=nBVKt^k$uY?j.nT1BK_TgfY)N5QSeqV%!D%8dU!sYi8]RM@KS:5/#k#)srRW7/N[kW2'[TR^TURB#U_4's432
%P]?bpQchSWbpY-6QF]K$8qHt?aZln8iYT+N%#T.qH*IK,O&Aps=*O!4Hn]Ed`"/l&2fBpidD\U7W8\'&dVQgs?)WW7_E[DnB2^9-
%2SjNb@^Ms]o]#D1SY4g>j1b3,HMk=X!T2c$n%EPh,4`9LLW.";@EFQ:QSo5pIlA;u\@;_q"'cC^.0ouU!R^4V__b-]ZJMO&UDC\m
%$L><3KCMD.e,Ouj!%olS9+MEra3\D`6:Uc,C^_0+h]ktEapA7^9kQ8_,lG_L_N3rD!'6I!Lqdm4b!?<NRr)UeU\_r@56j%cEE_G1
%8T%ME,o#KEC6,Y)J[TW/m]TjfIP1qW')&]2oQF$D7cuNh<@<u3YN;DaO]M(uGh.7OJ'^=t5RpeR-M)htR`LJuo;N<YR?VU=)`7+f
%,Y+@?3SJ"I>(bs'[3,AcjY9"4H!3&4g;j.QK_ps)lOgdnH6X5C')'gUBF)L&'6Y/bU7`HR++WJ7=g(d!3M"DC$Ij&09_S8/aX!c-
%9RXPnVBVbpp7PWLG%glI@gQi1=TVdU;n8#('SpFHU2C6nG7IL`eCjQSp!tPS-jrM6]"O327#r$3EgY$gRK\P\-;S$_*1[m((TH1`
%OK_:;ArW0H.Q<irS?YWHcFY5fp5PF+H>eqiAJ-fdA1iY#/s<cu9'1/YL_dPV,*uNpEf41?Oj!]nL9,)J+IgPE`2r-C`_FV=EY1)d
%q&Ep+V<H7(EI8YTg4(]_Y5$F@d_?a*n=MQBUHJA^9m(d\=ulGc*o_Qf,m5FgPbWc"E7!q$_cCKYe7Ld[cDPP9D`-qRo3Tog,D@(O
%41.256u@gT6lm9;KQOW:Vf(f*7)p'D5!<Jo3sQ6"UI6es-D'7R5]>"4&$+)t2/M>&eB7"(U8ri21*3<q[N"W%`a>(-'4iU*plUV,
%MDqr%6HMM#W9U#fFt8&dg9%<=7i-rM9T?jco_IlTY9.)/^8/l@-6-fuU?#.%=g(f'8hMl2]N2;7jWif83QV!Qe74HTG.lG`b?'R'
%rI*-SAu</[h"Y+Y4h7>AR?)]4gh+>Z9/bDT':<W:qjG6AIWd_`blcb.9u4&<mp@uJINDt\aram+<R8<2B[lq?:APooV<5i(Y4N]U
%+O[W1a:TV&N@It#1`3PNLHP9M2+@,X,DT-<8i3J*B5sH^,ksD8pZjB3dhM"pe@g["PB.W/jBm.LVEB=n//G.2ITc2WC&Ub<\W2ou
%Gi;=r(PdB-;)@T,56%%?2Z.a1;<gWus)RH9h=Pb^C,*b'hY9p55op>R`+]PPAt@)EeJhqg*R)'o]&XFHgls5X.+p9I+29DaCj.t-
%psdJ,!Q5DD+ZIT(/Y(FO3j5#p5@C'%@i!@*<[9Eck'iVk9KY82Z$$cj_<-m$]GUD`T7Xb-2ob%/XI497Gll!2EEG4roIfS!B=,q)
%^&9t@n"8Ll5I6Y50+6*r5G6q!j/M5"LsF\P_^b8fi8gQ-QhT@!l/"7[7kE9^<n#aOaK[J`?\Y[`e2WI,jJQV\lk9jdR213@3Hf>E
%:Z$,T.BbYkHEYd'WtG=fd=0`9b9a&(6?bGu%d,(cal=@QIf7Jfc'XuSL]=6*;CDs%<2GY>M'a>9U^S5_Q6eLD&[d\oB't_$'!pu_
%ElheQ>saR'_;)PR4?&<"_l%q,XH7>rnW`X8a)oVmNCLVq8<)j?Zl>.kDDF(XX]EIa/'L:VJiYK`>4#?3P,d%uF"h3!=<^@&SebHh
%>_Ycj+8dE.@kr`nrj7Ii)h3Q+7R]T5>0mel3>VdT3A$E<*9>W?4?&++9oFs"]bQ5]mW,7\NTtsScXCqsF_\5(OVYCs,_bV7-6P>@
%lR]Wg'`p/')%N1^]Bs4%Fd8Uo27!Qmok(AWAbC8li$LRRm0;W0eJiWD`OQ!s;=[7g?HO(BP:3b:T?X381[hPcdRfZcO""9Q7:ERJ
%aAJ1Ok;NKUf!a^Pl'_.L./t/l4U5UsW]0/n8raI.:<oTp&^0/bb2Otp^TlKDcD&NdY&b9%U/Z('=VUNnE#'a\"Qq)*T(fQ>\R[Gd
%/n&`8AbOHEj:ThQ=T,GYV4#@[27[7C%BhK\=jHcZo5^Dk>"E-%T"$L>K(uISR-"fpeFO']h:"-)T$$:NXq8k<qN[t%3A42)\S2S4
%s4pKLRAsc1hG\#%IdK1Fc!'nM*%Y4e[=qslppI[%CR$M;(?*sk>ao<6(86mD]\:6'?-fQ'K!e%O[d\#>YBEjWR^aSa3edP"=^t#5
%(AuWebdlF->aWq3c,a4Y;%=?mb\1ESP0Wu<IY?mgrccjOCkP#JJ+;?Ge%)ej.@<+jq,-8rjZ;TQi6J>%lUK.maG6/,gV[7FK"@p1
%"kA:@8c`7fn/:(AiBlK-SaTfGUh5W.;DZFe/=o\%;/M`p'5H#ZNt@_38(@/lplLrdUs.@6C?hp)FC&mFrdA?Lk;lJm0B\L_J3,@2
%Ia=3nVO)j=kD:ju()l#1+"BCron2%@F,9j'aP1?09`N(Ar3Ir7=Z?>B'Dr#</b?4f2Z'u\\!rq3%q:u[_'o?\&,l,W*J)P9RnGDR
%4k\&l2[I%gradnNkHUO;oEr,R[^kr82sH0E3G>rAFX0\W"-KIHWTBd]e/k_[K/),$aC?Js;m_ZLEYq6C7"]f,(<LjWLq'=c>MSJP
%\C5B$s80"es8M"JoI]cdB18/*eG_+`0^\pVb%=C_0D9c0HbR7dXMpe"@aB75FPOs0-!BU10(s[*YC\aoL#0e?mpaUeZ02"R`%gSt
%?`Tfk&+]XUaP>EtN[M+)#2O@AP)f,t93afUGtH8.M'_mC<F,\tfJ?29';=<$5n_Yh@n]6AVFB=%W6o;Y24;BPrSk*n#]!Ff,&[qu
%dg^?#9=)&Hgo(Pt(&$cY2i:e.Yg>h.OBC$dg7*TCgPr/Hfo9a9m;CPp\Qc9dSZOM:B>:p%Oi,Epl=[G*5?n&en"P9>W1X%K'RHA:
%B3($E\#9>bEY`<kgo7hA-O3B)s6@ipJ(0Mi9'[#.S8t$p>UOg;*\Op#4e#?HM9m;JpZGHADb/!Kf86L=rcN_F&bINk,r`2K"NfB4
%PIAf?fU0NVrpE$0PcO4-ggk.&k#b^[Cp-]<)K)i/]M-*0_TFF:nA;1ZV#IYJ]IXCCMo*Z3n?OIT/.+%g_TS\CnkZpm%G3sQ'Ta(6
%Uh``dQmFk9>sZ&&l"/ub8N69e'0#+"o&!d<S#0hemtXWmZmYh0fV_I)5INNJrh*-W+,9HNou22-qr`5Y^u?LNZU)L15@btaK/3FA
%&"/f)5IFT0k9@@)UU>+3"K'/t\9J)(ccP.\[Q)RmIeu##gu@QkMl/4&925FB:L?/s$u>7FIe?M*bbJfSgm(+ATk'0RKDh]s6#G23
%kD#L$DP*QqU-;2C)qAu?K"8.[*'`RgbOKAR"DO09(q!C;2#KLZRm/%,p0Z#EI`BNJAhl&UP51*lK(C4O7><]2);:No/kspD4DVdj
%dp(,g&Wp^'T&Q3?)G1J`ri4RjSNLD,;^4cX6d0,+mm('8344;15?>i"`K-+Pa6788a-bg*bZ`LNAi]oue1kRmL7B2Za2gWcU5gtg
%/+''k0ro2>;9)eg1$59ln__I8qI-O:Lc7I]47@pSIb8nuY3.gr:YSV)8)4&B8?2[Kdlc)&,"M$.DIVZhO*t^ORKoLBJ*)("LPS&E
%U0?sEI_B)/<CN-mBZ*!32fd:m@8De@V3p:?6t]p]$G+XZ6.Dps8T@Z'ZYWf(h<j*u#7W8V\MHb%gr\S5(6@7m>f3K:aIU9`G=Kud
%GiI"eNC7gb##`4,-S&oWGW^-*D)_&;[KJ0pi:2/O*nP[Rd-iI^S.)uAK*JD$o2udO'nsqZQF_>)8KR\@;mt9ChW2'mPicrK965U<
%.h;rmIb7<(8Vb!"&[OI`,nqA3@OiT.6r$8.5Q2b)/G1BEAb3@$J-=]$>'u@:*fEoYUMWImn]JUEMk=U/3p4%Y4r:KFk5K4L(>7Ie
%Rp0EEMem9SM-4A11Ru_O#eOu#2Ko7aLY]1^0#oaR(AZa%j`<FM[RfQsl.dJR>GQ>X`j/.u-7d6-H34ekHpl2)8n["VPV*b,Mj/,1
%;S'@)G3u"Ck#i45H9QQ%IVInu4cggWB(/S<a=tM@qUNU[])oF[F!YG9pi#eG,o4hI*."d+'UA%I33Q]\J;i_4REkOWh/d)ck7%\j
%l#2W$S2J1KeRjAag7>HOn,M%]<@[A.Il-^qh&5(VLs7B]Gql&o"a-$2B]`Cr)ctno\HhoRr,50_kU<Q'*q\[R/DiAC^R'.3P+15k
%[5p7TP2eMjDpUWXX3koEbSS\ukVFlkle)5Z$J]p7/['[Mlku[XM9p1MHMqgD:Mi]QBtD9jW;Gm9f3R8CghQnC[;k/t879"pc8B=e
%<Wb\.07Mj&FIq$Piu(Hd"2<kJ$k'RD1JBsPOq@VrhAkV1*K2_N*'TYR`$Od3gBLp]SJ*/1C6)Ng,+>!1SoC5B#[To@;iV^o`AMdM
%T?"u0[dnX?h266l7)M`2399+`]gg4)ggm"/U.%b_Ll)+X1!q_^iOKGUXqa[THu*ob$MhI,SFZ$IgWp#+MdlEF;mi*9ShKH]qj5PU
%f;%$^asZ7''$n9VB[lp7@=;\-4HGnHN^3/MeAH]&3Y6"kBc(ua7&%MbD&Vuta41mK,=h<M2$ujJ6!Z%%s,s!XXG_-3>;"LH=nQEc
%[;e+c0^ELa*]a/Mf#E!:+>81[n@o_1b`=l8lR_0r,AuEqHu@N=MGJV)b$7DqMr/oOZNh-qShiIoT"Gq-G<$_n0GcqN3aQae?2+o:
%mYs6e1m]8rTWioKT45lPMTNn$DNH)<4gSq2]DLW)D789=c&.O!kac5`_P9;lBgZtAN/ZXqgR&=.#<2H2bdAFAlc_REA*k's/Rt7#
%5K=;&\4.`&o1"5i:=fB&(Rp%O6ek:!U/$0lUT&1M7`cXkB'*BN85>3",3L9U;"OV#mNS<1/?HV1MVamoh4WX'9bj:Gg_B13B6g:7
%(Y)*ZOCS<B&H!knF\BTCZ8W'oXm4;=\riJXA4=,''Q1LNm4?b'g1mMAHtQKKlJW;;inuE7-f)#W44!Lk$8\XPf8FBU5"N;*eW4M'
%lnoT5%nbAo,O%Y],>1)YaICdp/2E`fe^qbPbMRBZni+hORQlD2jR&tiBr+gfIgh1L9E^p#CpsnJ(\5)&2$P^&(\O)=jjkM,462ht
%Y8oM*nFqJ20FLRqX0p9J6E*'1>o*.O<d54!$O>K+b]2(M!kmlSNCNku/f5#iUtopi(X,4D?Ru>>YeU1A:h3LTC!.1b%E+3m&^ED)
%dmJ0P`.WVb_Sdc#Z[]`=[P#8UFo05SK^9c4gP],0Y86qg7^r:-j;ij,q@'Co'%DHajDhldBga\=;E2HVr0.WhHP[me#lYNT;pc]n
%03Yf"3BHu/BUT,I>Xc%/f'Jr_%JUO)G<bTOF85A:@"/njV6F>%pfT&qDSa::<-B+R##c].]hoqAc#f'_!`>/lEu6g0IQsQ;*1l8a
%p[Z?LB]&-"8Ym-2KLEKM+*(,jE9iS&._JBqCuR1Q-_roh<"dD/aV<haFTTdU>Wi#54DQm[X8aQ9HO;fK"?,Lb]/jUlDGUi?TFjhp
%lPtG$K3tIo$NS&dQ>q3B3W[=l9(?hBo8?'Ujj9>ha"GG+Vp"g=^!f3`DJsUUC(/1.@:FC!c_`(>SU4DF+@XPmV+/(C'hs)L':B.s
%?(D9'cg!+[.C7,d&ciejjuDY@,h1lt<(-bO9(C5q1,e8t3mG^&3gOi-=[jH(:L+R8mh@\ZbjQ;YG;^-Vl)YA@rH<5dgu!$Md>_Ig
%nJ8:$@#+P8p#!!Cj2jf^rpBO:/5tu-s"soT4U7Rkf;MbhNZ2%,lUOh)(ang#_O_?`]k/aX8XaltPt^,VN0'9ZU0PJ$9BM?6^@-GG
%QLC`#aWuN]qjfofi+PaMp,L4?g3j5Vp7h0X6+;:t\Vs*,1YcYUiWnH[C#tZYi:1Ud&?r=^`&sJc5HI.]oa<,,ro;,UXg.Ff/tEZ[
%jY`g_LnYgQiZ"S4eR6ktG#bp]f3oe0)KZ=5@I%A6?:9LbG%]1\DEp!7-Z7u\_J]CT*Hl3%nd+]9<p7QfmmPZ`DDWWG@75iXRAOk^
%mS,:'-"K`g'h=jOHjtsd3N/83kV4]&XWP"N%"$%frscL[,([XLe;Lnf7YR&ims^s.X7sN<HDB?[bF9gehT)bk:>!N)M1M=GXjB_P
%<MXNC:)*!,FsH?D0[GPS#.W8VHX*$N<9r%l$q[q<.WrU3/Nlibls6Gr@AD[P_g7k3=&#iE^q=QZ^trtF)t_m=UTi@2\e?O(C:1*D
%m6MgRd#OAj^i^$UYS2/12pFW53OtRnh5(.q8l=2F<DcI`K@NaO5=*MDUc=gB\u)V3Q@L7G(grc#lIq[qq@^"FjT=0/QS2]lp,hTe
%oNiTPI!bM64u*X3JN']3]2+7HQ/<[a^Rc(m2'(:'FF+uRY,eUhTqo<s=\<jE?BZ"-<D:;NluA7,L2/<J1-m6pcB`>$Nr!O%o&a&t
%oX[O0lA0?0jHk'/mBa$:'QjV>?D<m/l]ZK^CqKUb5H<6=c,*<\`]RWj%.W,Z*'%m[oqN:)!V%iAJl&mSc$2'%QMmb+)4M\@8f3=F
%!_$jE0^*_rr['H7AdHuD$id:qn8VV=X&jr!n_j>Xrcc3ulJ_rRh-)$Q7u`VB5rG'\J9;.8[tbreLiF+dl`Jl,WtBQ?L%W"nV$G57
%rF*1[#hWoo7G!\_p3q6$;/FOt@7%6>Q\4FiW/K@Pps(EYg)5c'BQoqSJ'?i,%TN8"1+#`4FCJ8Pqs`QsrVE/6%]h"T6u+<&pIE18
%,nf$+C-B-a$p;sdn\@LR4bcCVhIPKGAbg\LE#u&6q"dIn'c$SL6=ulo!c$BQf*eegKq+@MWa/S^U8_LF]>:/fi!.(Y%p)8I,WS+S
%NZ-6\4u>bEBV7&*"<fjsO0O9.W4Q9"E5h,j=LQ)?1STORB(YrUp/RVN(daJ&C`eL^2$bq$.-sBP7ZDDf>%uC%Sn!PY2X2<=Ha!eO
%2hX^<K#6553$gHH&f7hH-g1_%9AoS3o!"%W_fU,keG_8hG&TZ#.8tf#<SQ>5<6LA'@JscL043lH[g1CO=QHnprolsudW"_oCuK5Q
%[f3.1Mq[LoD$];Kd9j().H!5i6B-fn.6;-#0+kJ@D\QuoF2F*=463<fkR:6X(<59UC/$D#7P"Ki3jjgXd^jgXWFU,(l#[g"QuN^p
%NQW?'CDJeqHIAa$&]HKSU?dcTP\LiR.'._.1niP%LR&IWhsLd!<(>/s@X!MTi+sEL4?fl%E;p+\#O\6c3;ZQ$GJX#s7q`gL(SmNl
%5rHp"d9)SM7ltLmgRop:Qc9tB!J3cRTJ9!pg1R'+^%t/j>b&26R)D88==n'"T*2KK?>i5W&B!@-^#'5[A*jB'AU+]JguoNCddic^
%;Jim.m!VR6`mK@9Yt$rm5Y*R=\Q^Sm]63UuW@0,-o,JO#bBEW0WH^%T7a?Qs`4Wti?PLOr+@G.XOK(&KNSJCfpGNWRcO#j0WguWP
%`u%T@OfGP?=Bu-,4s]rD2EmR%&6L1DjBr3[*(N9WU3Tata@\\J,9pA&%hO_#@"Lj2[pU%_E'`O]omU@:7Es%uFGL=M*hs_&([9VY
%lh$)0$fk/D)Q3L`ePIuB$-1-kqhk4eM6s#6K^R.N(^>r>Bgig]`ku<Yjh0+sef'.*lQ^!p7rT^Ll#b8+Xg)14nTohoSe,LGnhe==
%lm2raeI9&k4n.=V1,`%43j=.b>NbBFGbhoo(3V&2!F0!(SELiOeARHSQV(nG;#fqt]A7QACM,X`^m%4>9I"HkGpM/4?cMV>VUJ(4
%X3DaA04uk@J;HQt4\i#CHUg/o_J[?%<7eG,[%]T2d_mlY-#CLf"BE\6W*AT]jG7X]?APG@EN2L4GjIZGjs]Ab<LndfHajC$PE]1'
%'fh3NJC,<XLc1A;aD?(?9EpU5S_@Ha7W4e0&WA1u(K.fc_RUN3gC]7/+-Z=V=aRIH!&-.\Rt/?7%[)X.+-rT-$%*5<P!m\XO=(7q
%Ljb"HN!s&N$,&"7GnRDFPAL!E(!ZqXFG8PU>*]R\+Z-#MBpPJeU.@m91=J#cIF*lpR3i*4CFgRU+Iho`#Ti=*Gaj:]*t^"gAs0hL
%f)LaKLJde.b,V8IKiU8a.hq8#;U/[Z-Y4!X.Yl%J%nfNdCboP26R>jA(:sL"(-5&4$QWEegVs"<WSngi2&pnR"$>Uh-]-Xfp#T[\
%`b.`.,H3)TVf%I2N%Gg+S<Q-]OX"CCitrsr)7P)NGc[c'4@iP+L8Qqa(M[,]6etK!(7E0%AgsJX/I6;n%;D(&Fs-kPp7aIU]k+Q"
%,&6SHhLPg5FYs2\-E@Rs<fYI(0ku?bqdNIsMq+o55<aH[4MHY%p,QiM]M1'.76GL\m6Xo(3XBGhK8O0:)qH^@/VL5Eg\2Psdm74*
%T`i%]D+/V^LK_f0;$FT*@'j'sd0)<g%f_L]#E=0Q<8L8fk[u`ShR[IoqB3jF*+<kWn$]A+Gf*$;/lK`$k>VJi'=QnRL#)NG=:U_G
%?nU+"oVm8]-3fVa*7.?QC"]pFmN4u5=aTK!h2()l>`W#@eN$F<@t/^S1!@A!)S)b[a`r,Ns5V8QgW'g__fr0-p%nu0V=!\Go5`lc
%Fo-H'HZf.8?Or(.He.Lq($k;-p?S7sqo7*E]h]14\%@9m*E9CoB1Xt>]8G#eIk+m-.egA1^D%c,Dln2/gV"EW3Xi@.\Tb[/Z(C\_
%(XHFTD/U<>Z!W"YUfoAd+']56[9%\c"5;jEBuBqSdk?4J>V\LEXa87c?4SldJ%>-g\iU2?`kAjXDiG!?@@6Vro)(&F[sPQ1DSLJi
%nWS1V(Z1/m<Q*Ye]Y/G&I,<`D'q6`8eYPR9]MgnI@0jW"YGVVXo(hIXG,_b&Gdh[!]'T<\p'4UWaOg=NWk.qQHgBpK\$RBIFO0u-
%nYH\emXHnYeoktuesp[Q]]6E3/NS`4@;Q"^\DNTRWg0U[C>$?Y:,fYp-2mg8l/h3^Q#6Q;lbJPcO.O"0IeRlh=q.\);gkK_^3</(
%<gE@)magiTh5GgK?7Rn!Sj$9BY'_.4HcPlq,68=a2kOIB0T<F8k4?%5W]k+!4Pnt#\!s!2f55lJGHQ;KlE7^=[@tTG<m/g9Dh)p&
%K?/MB/%(AJ^E.ugec!P3CTC=3@37BV%Ia%W[f,$a]5K4#Y),*4Q$5GrGG!N:qod.5S(bmlmHj7RddNCN&s2b(H?9tBo$Mc!]kS^k
%Ss6B!>&-ethph?6p%.#<np7fg5IeDtTo6fjGi9%pKqQ48b1W=kK7$gI&o=gK>Al#F.)*H"q+?"_hJ9`r_=*VR-Vl4m>5@F%A(K&^
%a'5%@D_Jj:BuVr`rXMOI*sSrAcf6I%:8X[:5<_E8a<32.G,]j]fNjM`:CZWBor[MMPeX>bcduNOYCtkeHR8"EorG3-jjPU6a^qmK
%*T!jbHRG8B.cB!Phqs,W[1AOH?_7g;/lC_q[.VUBd[S]6G+WcJ]l07`O"3*);Wp&e\FS_Kk$';]lktPWS>n)X9#eL+_03;7q:aKR
%J,>I$aYE*e$RGL\Ff!T2^SJChP:j/4Z\f)+]7OHL<uqm<K5s=2.F66Jpp6aFBh(t#ZhF+T8cOfpo"71(k%75S!pdDhhfWi^li_aj
%pL;rOZYFI?7`"Zoc9qW[3r2Z5;mma4UMb9UM%1VG`\X;.M:o/Cj./A8M9]t?I1=P6?PL\qhs?GM!@h+4pj;UdGOVH9+8G$F*CYBr
%<X\h/o0)W>)04@Y26=i:PKp<0hW#-CB.%mFV^;G^^c\?Do$5c`"Co.!6>*&Dk8S?o_t-U_<T2DAJ#@ANb]QuFNL))cD!jV:in&O"
%Mn%'?O,)H,]=ZB%\i-=Cqb=<ZUPGdYq^[`"IsB7/^%_^o9o#cBH]N@HVmWCGr:P>\^&E7:TH0OeG\24KqsB=/2^c4G:iTgTK422h
%Pffnk,FutlqkY(`[l3)oi!4.rHM.5#++Y8$,G]5Rrl57ji%#m6n;\EX7j?fjn/8aQ#DRYKq5EMjG^nM#@0DY:&Pff2m/%%ehY.[`
%>!a:d0;!S%^.:o6;%T6]]R<?W!=.D;^pM=le5`XQLi=ZB4@8X0YcR9"/#t&Ja2#btDo'BLh-50qf[@lAms&uejk&h%C.R,s6oc^2
%Gk#T%fW(;La]1[P`M43f5M=q#.Q*eJ7?lEE`)(=6C&O1!rT7qP5('egUn3![mHO@`hlCE$msX`V*IhuH5<T$A=!&s?fu?s5FkM6_
%_k+XtE[-H6@/.-_*muDfa]IeQ:O@ds+-YjW#X6*tZn$'1/[3L-nr\+lTi47A/bIDGO-"BE<XH$;-6:KBE'Uspm<JJ'iYJ!d"fHE4
%k!UPIe3HMFSIACgBuXj1K2)ud8U=$a+ap/sKTj\"Q$h[e__.!]L6>#qGa/j21uTcM`n=3Y[OsIF`Cr6</<,G<&ueGJpggIREsj3=
%#oG!8%,)!_Q#ob,+fphensIdhHmN(;6gl:aJ72u>506^8Z!sDj-D+bYkbuU)VJ2I`O[D&=GqZ$Fd?h6&129;LlS56$=:jZ:j+M/8
%502`!b%+qJR#R/*Pf@OmOSa8P:WH8bP,kQZ\SMl\'_Fj-m?9q`#r49Rb:o@/G`%9])kj:SW!N__8\]Q(/PKWTdL`RV$6V"^cC\Wm
%6UG$oUXrF6+qqu'X`st(b9P2-+!-M><!4qX[e6MB%ds7ac5&auCO&G5(G?ohI*kNf+5Y,/(Th(L<NfetSY_lU@#MR3#nbA=e^@K;
%g-9ki]r<".?E(S_pPc:mC\NK!6\lH)Bp=F/$B9<5%;K9N?4i>ZeV/\=7EKiU1#^$2,L\5ko>=nmku[VNP:T!HBn`>n0T=J0Y1T#I
%eT7M`iotYS*2[frGt5!sfA:Ls[olke>@3]"2M,diWP`e;UPDEe7Ru,0Gk0ZPn4SN^Z=-U3;rS7^W>M2JZjID$]ifc3jOp/s+-iIB
%++;E!^b_U2hXt3fI>'C4S(m8*X.A*5e7CAnSlLB=r)5=F/W/ReMt)&r#s!6FJ\Bb1ld*t:o(f?CnTt0',D=R3mlh3#Fm[Jpn_)@3
%<!e9kZ_^&eOZ8ec^[hqeo!c*+If5bD^3SR?\q&0%OU>oMo$t10C2KKs=qW`u#ktk!3U$kcRe:j1&eF;*>W?t+^0#aWP`G6*J+=<U
%\:Y%cjiVq"^&I*_#*YCt.OeB.!pqWF8[aRA9pEQS1Ell;<POGlL-;R69Ljf)N640K5G@A6fYQOQ"stB_H6DAT_Go?lk_0NmeQ.:*
%Vbc+=c?oF.ZM'0QBKO4_]&-Su++?iD0MKqFI,M33b3,s0G/.kuAaNp.6;<T<Za_9je;8V,\plT[^?je$k=9`K8o*or>B62C=+RL(
%Hg;ao]=RaLo]gB7W-R9JaU/'$pIjADQcF#ro"uB\OQ_)h^1(FYc46,Q(MB9aP>2oAZk$4d)uoKXm>[AY4/\u]^HNH"N5ZU0X8Nb=
%r"%*ej5%MNba6bCp@rfO+YFT[)ms9F_):=#1AjL;(Vun$A+X+k1^fs_MFQAM^05gY-N).Z33fqO?bF,U.H]`/\aoplGc16EAFm=3
%D83gP&igLH4C0(B&LuWt\UZm2l"+cu,ji;I(CS-.$)*ED?KJPhSo&D[IS^`9C7<hcZ["_or8sQ_%c>/0)\"+g[&q5fSuouG3aM$d
%H<MP,T9%D>2+BafAh<YAdu8FK#W^b)(!Z=;Qd:WSGbQ&`1I3h25_T[h*]>p/ZM?djH1Lt+UZ!hH<!.f&pB39)m@@PrQD/2e=O.66
%i_aQ0HfO4sX*DlMZ0h`HT2cOj"kPfmg\(.6]?P3<dKe1rAb>(7ZF%Ya[o7b"h!*S6-Ed8MWHmt9QSg33H"iKQ#5SR4pJJ-"o#Nj.
%QEWdS:nat;GJ?5o)fNLC2p\+e?#4Gl$cK3Hs/%6ZH\QZV>fF0QhcnDtkJDPj:mGT_kPJ8@iJ5Zue2c/+0nsgpca\leXo.0hs%Y>`
%rMHiD!\<0WH^.O+osoI!;T8cXA[T39nB>b<A#4M(GaOA_=>f\ZkmG)(HcPQV^O5(4ltrL\\nf44hcen)Y.4Z'n7_dl7fA6d%T7fR
%#\>5K4`l*u]FK7opB\X%:ToE"c-,ePW7mI(9p#"dmHs@<X&3m<jYcOtZd)!:IJ.9<_*H3]Vk)W?^(r9/h1qtFlIk$sQLkbB\N&i?
%CSaL!3<uCkqHuJ>3-`3Ofl>PNiYW`!%A;G#X7i<N=9N31<]g1BN:LDZXLK>n"FaleGph]M/N''1NhWY)YA\>!]P8"OM9]^(QcSU7
%j6F7;?p*P!n*"<Zqlk\-mJ6Fqqn;BV?n&IS>46Y4Qi<JPES+spou>jg=$N!pX%.pkj/plSP5^f[[p_!g?3SNuTC0894p??M+>Z;!
%6/>jLRkO2TkN.W6T+-.B;tM5(W]s+eU>[6gFrn%gpHEIX]XN!?9"n:c>Q<'4_f@dskN)WUj5BRtrF;L>j\t9a[sjU,/VdK?e$#:,
%*\G8`)uD/^8+5O"rbY5<T'jVsm]iK%du?NUP53^*,IHObh8&bK6gV=rMq,Y:]R"&,AO\^fpWBP,Gd_s@i>Q&r9d$d<N'tL)+iIXN
%iEC$i,S&QO:HNjnoP/a=8I)_]8r]-W5GO:<FS2=,]O\[ioD7/#:WA#l['KI&l=IO$M%"I5q\%>@8m=,;CV,Slj)Zc5!l:a_(G^dW
%DUQR[lJ-h+4FDY2pKkL6CVm$2?bEJ*CJB"Qg@9^(/VDM:\@P5D0m1V*YEu+oZLQcVFh]F[gY^0:mdipDlqr2Qh>>p^$G8jo%]Q/!
%PQk+f2Zu'GqWjcr04&Isdhki,FhAJheFVd0_`PHIV>>?Q(4q`mlZ(iG.9T:aZb.58QA/XAj7"42kOT9HemeHomN!j#V(?=rF`@+>
%fN.jH+SaMjE;S%_$@2&TCuf>=62FZea/=sEYPr52+\b5h'Di0prn:[ND;d35C^/(p:!^NNo^Zlr528@4Q9#6FRCCS_[U/f<,Y#nM
%,P[MA?">2,Z]FSO*k\(]Dlj`rAe0MrpNNj_r!BSWqQR6\^%.-Ddd,%rn*Dk,'K+,gV76;P#QZK$mJZ6WNqZ0"_t0)951Bh`CRA5=
%nCj36O2TO_SB2E2O-@Gc"q]DR5E[#iPa>D\O*<eT/F@h.5\[A*!cicDp^AXVI?2;oA?1p4d+7o>\Ti)(,q/3qCUG0FHFR]UFCZpg
%VQnr"H^:.`>CFE_nZ:oW79[Z6`D\A@>eQ?^q88XJ0'/YXH*I3U`t]mp<;+k?]6L%.*M7K"BgSe%G:lM443fc.JD,J'q&Z#<ZJL[O
%hWe==^%psOcoW;]eqOtXZWl:'epFW]Q'sDGL)#*l?ZJY,"U>uN=Qo>MCO:93A^1Aea)/"].qe6^CD624m_A^*$,>ob.5b2p$Yspe
%BgPMao]8.GG?m05OQoOo^`cm$JN5pu5sBYf*Q%@&Qgl7oSE[NNK6P015pn-"K+atHOH9jL4$dR545`klPt(#m\&7V(DXCH=r-WcM
%_#;bg](=u?_Bt,,.fK7V\,"CsEI0PfY2.8.DHVYI]j!kk>P2;c3e]Gtg/LN(r-ZjmG!GD2V9FNi"(=jqAE2d<ZU+*RMq19je)S.;
%&#)BRN_70'J/1p@Z(tWQKXKgqEr#W^kH<?bd=3.+2N$hk0_I*"(Eejs,CAIoat`<4Xe]O'5A]Qq,T*4f4F#4re[I3_4_L\Ea)_Lt
%kj=,n[X/PBh'p*`rqUn$gA5h;&K8n"^)F4lT6J)7Hs4!;c49:*D2rI=aM+6/$VpSkf7NApd>>N2B+]K!cA(KkLTjs#Y?a1Ci9JV5
%#Nt/Hjm9p4>J;f[f2J7lG%06V`="VI=\L@]+q?a6J6SH@ji=LlJTnW[g">a&g2]'uZG*C-;7YtI=62sFor>^%=/*imoA*#DdNg6]
%@/ItFY#V1YX;123eRXG[0Zpc?&,+,sBBqj/i0!EO<tL*K==XV.D]`$0PD?!8c)ii=[\ULI!,$L<32n3Z6)\F,S\D[61*6^FcDFLo
%-sm7_P9HIOAXmB!HgMi]pV'g,^-B7C'5M-"l+tqWAbC-/2RM#'8P,9<$Wc:`F_'3imuO',ce_)\@!5>;mCY[NHmK7Y2PUl>Ns3HO
%MiY]FY6B-Pm]0tr+Wu(<%f=6>&t)[';Uo)*pJJ!"XOi68FYMM#X20t1%,(<SUXer,gZOGb"%DXVesl-k*a'Y<V*0/MeTm+4RMO]Y
%E7$/-[m.'X6;qLTRsG!rK2q#sSO'OP`I%.6Tp)DT*[u>1W=J?DE=ST)-a(2[Ho!`fIC#'5-LU)ndS;CUE^sL8Mp(#Zm\)_jUuMqG
%erJA]hHS#F,7!>Vp%N[,Xma1CCci6clmF?GP3l<^)t+"BG*[_mbrBWn%-m5n@eoiB>uM`SdD&b^SupSbZ%TU?;[.-r\W>0'`B\<6
%Wf_e>[l;('%D3A35)%4f#)W-O>3NB--qIr?HdS1nc0`d%Y=j%SpI$T_^A+d<?/W5t^!:s,f5Xmp6`b2,bu0d0$1@9KFcrLp`S:.C
%2jX-LIUSeK^&Oa*DQf>V03bjRSpU"9$^6!nGPIM(^OH(?"14P_8(I'>jka1!/G\FFs,dX;6h:d5"0^$oYhZgclMpT(3?T^laX`QF
%.HNUF\GU?Ud27tonEk*ZGg:R%qkZ*0YiD.j_fB]756P]E3E)G3iZ@h]?qGRt8UB7\8[mR3a0Y(lE"BjEBNMe0Bu4sf`nt\WiKhE'
%oAaG&'O?M.*l/)5lE`RL]^FFA,c#]*$+EkbT3Ok!W"=-I6N8ejYWK<%]r7!Q#4E<+\r9erI.RDp2f'4*rXVR^Xp''>;BbDc`T652
%IfN<Mn@D+NL;,n*:?qUEHVio_TP;#<Lh_(F6Dd%1]a3r+6G5hB'a3&k/\o/A#;%'tcu3DaeYl:lpBlS-7S);4^rHt>SPGqTT)qpS
%%B>aSiS@P&gjYc87Rq(N!=&i`lh5TZTmEmrBO0TGp5:/;Snf_G>j^*('CHas64(M8s(ulOVB5]$6fQTfl=5m6F56QOI#_?k7spQ@
%hoEe%46Zf:j4d[*beP?k@(2J]]q(3[@DCW5="h2QAlJs]dq@kS+5e1r0D`$pI""SdIn4LO6g&OC#3k^u5Vm<l]\]tK7_91SCS7?$
%'roi6fV&f`X2jsCAD\RXM<"GK(s0f7oi>r)/A'[un)K#>NK$/ml6j&\ZH&Dm]=B=j<q9LH!2^4Nm&tU,9(J=;BhdU<$&JI\H7%;j
%3G1IWAcut7TBe7-0:=H\[]5u:^_KEaa1IKH.a>MuNR6f=*SSJF;KujApb(aqM'H0gnsFr/mC(?Xra,@ElD>YO1L=\tm1GS+4Jf!!
%@gF*iJc_-bOiE8/CEBbWm8f3/B487RiiSj)a5/M7ru"&]?&Qq.+mY_5BA!?t`ne8s_A>H9Lu)p1rT(;lO37&.[#"k1FH"4A[\8G9
%dBQOZ8P"W1Dkiq)OrTJd!Y8CM#ZInb@t[l9-U!';[pd%:o0[214^6#GkVJ49S!&OhkL`=s5#M\IINgqN40-?QkE:h2LX^&dkgJ*@
%&dJd@dE1LCH.E>gNBF0H1R8^5_4iq622K!R-VhTmR#GBFOf$W+Wf@PCNX'2Fg30NHKK>>R8B;98-DW]L^\#TI88-rpocARPE5i]L
%;cr#AVGb0N["Q2ZK_NC?&q4bU/78%iX&Sds=8:Bj$``>'1_YB1b=(RNfr[K)$$JU_=P.DOF;cu!lRDM1GKZ(S;s[GuVHLHM$L"\R
%8"S[-:\!&=aNn\9q[4e1FlK%]b5JqVpge@7./,&4P#$Gs8$hpQ`V9PM<]Wm&)m".<j"A)aiR8QWKaW@)UhW*S^E-E49OL6))ea>5
%lOVh"MiMZ."L&YkdstS:pnn8D3QH,3V,=='*#K56+QZ&8ekKO8FBR*nk`-'Q<*`/%*Va#HL94SQ!?AZ9OIn@./[_hFkXAEO*Fs_u
%-XVF*9e3fdW[0>!^dQ:gK1oDBY#nGm9%n6GY*0W@(Rft^kfII%R0!,t8%oe5-RSp=7+IGA`UA1N$&0+W\fk"=8G*:9$-7jeNhLIX
%q,`])%caADGKg`7.]08'`7t'_=[c,b7t?V*kfII44o[-3c[df^]ZUG>$nK26AjSFml4U&toqkZpJ]jR0r`,bc_`2N&h6Jp&X.lX=
%o`-ai6_GJ#L5fL&a_*i+!Vn?Fc[dfZ]LrjPLQu8U<fjm9;jU#iW&LfP-;`%'MUZ\aV[^A@!ql=G76Q/8M0d&j\t"*GR8_GH9@S#j
%9Gm4r"K6&"g!#+ef[M3F"mU6DBF1-R^P^N^(oIhX$^qT5c'7>maH/5#!F56lB0Vf80r4Ub(_ap$'EMfLo@_?`DQHt3q%l[%UB,A$
%VIlh&4,BbGgBrB`+SA50WEKY7$J_S^R>-W$'\t'"Q"Y[Y2-oK/NM:#8bW2,pJUA/?+>A^MB&G<oU2L+!R"bdF6d\jQ$IDJe+95Dc
%!MC3FeZoHh!_`bh6SFI:3TN75BHk5G/<^&B%00B`P`DgiN>re!%M-cN(jLKuEH*hU1(=;(/568GBKnBoT#"fp[Vd=QVNPg^citUY
%^UBsVe5)R:7>*/-/DD<-K/.61BGb16?3WJ1<)]?^@^pM$\jhoA"rY2_$h^6m.iJN"Weg`#Z#n^@JgHO-$AX0D;3l2Tn6K$%l#E_F
%oKjGpfUrh\VU,JP<2N5pNl./!!^hL=fo5TCKsUoi_uMh)_dl*08,rX$Qb&="U@WX%RV=@AO'.-ihVp$c<P0.Q>&1,jj!`uFULC1f
%\kF#'"pA]WG[1Rj(sI#>p/s'gT=.L;)]Y&uo?RW[UC&T.@>p)W%*BK?'Eeb_.$82d/_W7a3ru9<!N<$_&:h_jF3qFt@OhYX"08(D
%UnMCNgHou1*"&pk=5Y!&Ku*UBVX+W5[cI6_:kM2Vj[<h)<+S2s@SKFT&Kp<m2G3;?AOAR&kV7N&oU(]'V8k8O-`tE/(@*\oa--(^
%"%5;4OglG?h8j);l`k;YO'FJl-H0tl8AP>,"K%p.UYaHB!7PnC,;^Em!CI]a`r)Fm3dLk&Z;;6j['LIi^aXm01C:j?FA2bf5_RAg
%@k\/MTbH#dcIV.JL5l8aYd=O`Xn8=s$atQgn[sG%5sM7YkK,,`!'c*^=k?XgjA"i823faF\rJ8_@CQ;>"s'!*%Uj,-GMjm0X\).R
%h%[FlO&[3$>.Bf?^8@B?^'Kgb()s*8(?h*T07F_%QB*7?/Vm28e'i,m.W#S]p!Zaj/=-O3i!4?)!0%CFLDU4H!I[^(0i:;,!#m@[
%ARU-G%1K/m"2k=90_j,>"D/fseBNRj.%Y.Ip7_*uMZ@i>3Yqgs'!!a>l)54o=KY@!Wh\5K!1#\4QS$`-VV117;!+oT#?T#k_ZEn8
%->4:0;$+'U(4]l<@[$Rcd8Xj9QKdsZPA6JRI&0aGa(Yi.3bZ%C3\dVIat0ScHEIfpLMMobBjAtUTS"8`-4)L;a/-&I"3FiCYoLRO
%>]XF$#VdmaNCC`+Gq:iaP;t+'Q=]:($/$)X'nh1W$';@u`*d"m8X9b78H?"+EWm]jdo2TUUQW,_*\,(UO@^lo"4#'4!s0`@_a\?5
%1GjB&_!clOnStic%BlT[%E0i$)Q"12V.$.+V4efcQ=c5G7KfrXZ7HII$Y"_7>m6**C2![SFXMb-&X\Ei@ZE-@f1ZB)9_?)UB,MD\
%UJ:p_Fi^>'5QgW*ckg<2K[;QI9,<K2V8:\REH*/?N!&I@8\0!Q_b=GD:s^ZO\>i!j8[jZ^5UD9d3l/Z$VU4q]:t=%sU=1:GO;7_a
%AL0#5(mp]S4;oN#AL%8UeqRXi8>+3[9C1YL7iG$"CKuotj[F?CA\+0P&`P!9'2kM=#n9=H_"qW1,!QWH$XF:&Pnj/Z)'QYa%cR)&
%#d7lon9R-Kf@(nU4qtjISj43+gH)3uQDJ#M"UU"P)EQI5FO4&)'2EM?L5@mYKqIiIBVi[':J8N+#U\LKZjK,tGd(ur7e:l/0/J.[
%+DqH#BM&8uOMP<9`b6,ZpK9F9lR![2!ISTZH9;323h!#o5a%d5]aGB=WbNs19SKVXhGp!R51;XlFX.2iFnjmnYSrn9pmRF4_+/7u
%TkG>TTcW_RI#;GHJnS?:;oHU>h%YCPGpZ@$rp'n%0Fbu%NDgQLYptQE@9!kh#gnIXSCjoJ'?`'LJ:)OF@&OE'!72IcoASY=_f@V`
%;.im>0MT_Y*uY4f"J(nFU=IUcFYXa;T^.?0@dkrlBo8aEr<s.%Z#o16-=78ILG'YR_mPka5T],9LpmI'X;hY%CaW>$h116[8m4:G
%)?DNZ`DAZ)L,7kJ6p-Z,+J0$I3HQ4q\V@%T*,HuV%3mU0!'6tr(m,C9H@LT](`e`^Q:%CY(^Ld3cq3bfn@K#^`6_nD89L)VfWn$K
%ki0Vc80I-Y\?rI\`.F.CFc?'#7mI-+@i9;OWSoU#M?Qho(&6FG@D(0'TJK&uNJ+iMpL(:g`cLi]YmhkpbJTQhYt]nN=LEg2/CU;m
%W*#/8On,JCop&V50IB].$I`H'[_k-N1>53eL7TRJV?!8n'*)oTCl;_4P2M\")qS(,)3@E&LhS8r9>'%,"'KIM3jUQ5(_,P`35edr
%Lu>mMbqN`'JfWL@-3+WEOqmCFYT<#$k[$sPBq0PP,61C'I!@V:(\+5.R'J=_^cBTH"<^$%;TmULZuZXI(BLDtVBmC",]l`V)&b+p
%(GY0m[=oa>RS4J*aF8!N@!_45:ge8E9fJJ:?*G"VHfn9Q&>/T\!#=dR/A02l(1AOfXACQe6]cq+fnMgV's&,qlmD>@'`dJsM,V8o
%l#[(/Xk%Je&2I)sP*?!!l"Y$t]UC#H9q!&*jECnN$Iln1@:qVm2.FBf6VT?V=d2H"i/;9Y9k/1^;cQ/EaYhI2"7WYL9[sdX"#+mm
%<_qcnpE9Zo!)jK\3c*q,R\ZL?L9$If+<eN4q]6eQcq_5e>+2O`cj(ho\c>-SUC1iX[\MhU[*um?=^+8qJ1`n*iR'EFe&EsC96QO+
%%%N0R'&1G./*2"6b[RtgCeGb'Yg`]tFEl#kL1+SU<^U`ZmnfS&Y]sQ\E<\+:=[V6V75L'"P88sCOG3pJ!aqP-YX"-IbFrb(=b2sL
%iZL:bU=!N\2a`*o2Y1'Z+g?J@KVh=OFB0QNJM@8&=UHHa)Zg,Z:h@lUI)k?W6%B4q*C5moSKl-n8:q4jOT:Uj+i"^P+!+0RD7jO"
%.FeWqbna4^6jQ?g\^lpeNi^qmj?]Xl,2q[OlH9($L<Iq\#89hc%Btp"fYR-BiZt`k!`Q>CMD/.836Y9'AEW0<2.Bo.?ZNsdWA4Sl
%';>g8&BbI>5B'#[0+e]h-V"u#Q_>''$8>-9*_s+;4pM=&0A7%J$L$9pFZLu'!F(=kA;?31X$TJ-!-H;:VI46q-SdrG&QGqR/&PKk
%WpD8K+?<)2Q?JRSST:#!+?@X(d0,GLX:/_JIAEAZ66p3#mF'8m-7h5O"A$gYGdIm5Ec!X!)C=k^#T#i]*nB4!"TZHjBl%3eI/sA+
%j2u-a!]<smJ9qF_kY)Z3*Wuo8@'iZ+#j>[u+?l,h-NI0%Kl@W`mMO!'`G&N?Us+N$<0\_e&=]SFBG:cp::q5p`!4&W_DT6>==@XR
%8i?hq.]s.se]"bZ!t8QqZ30)!g'iqW?p'$oQhc*ReL>ER7uXo&]"$O#;NM[s5%.VErpmC"(nR[&L-hrMq5V>r.fm_s/)Z8aRC82_
%+[g<M3P10"4M-Jtip#"_G_.(]k8bobdun60Pt4<!.E&UGcIM!C(1<Tub"1IQ7D0ca0!!^+.bJ'H.8:*S]t6*Z"j1iJ+dLNVMM$6t
%<Z2<m?p;\AV\'&nWS+q$S95@Y&e?o`8#E2aME;"k-\p?CAr-mCl+e%i)E'H07:&#T/1J3*VkXen.]s0j.TT"-Wge0TfSun'hN!+?
%IRn2p3$fm4mr7ET,<@pgZ#s.5CM;)=\iT7;)a#P.HWUDC;b:L4gVqSp*)l(f*"u4A`.Ob;,S)'9<@+^`P,T^?=M$Ll[K=>OKP6`2
%dig<S1R*LFF@c]Q5mkCDBDaW5dbM+(9Ti(<;_2&u8-G<c,WlNGCPPc&RKb&h`>2=B0UQ9F[fe7%FF*jMJnbk^O`#ik6$La"'&?S;
%_f_I#lO4T=#_h\#0>d+BiGmPPOOVq=.=C"[/%9'P$COS2Y"/d%X)*l'.;Tl'hY>qBRA4Q=BUW\*X=N)5)'2[,oP5#oQu3mZZRm^/
%b'Y`P-.so,SLf@,fA^c\o<J[e]@iu=mUn=FQ)(:t1D[&g_eiRY>[e7T.q6jkRQ?<Q>G4M]0W!,Q;snC6bUb!g+k!^VU6j"\,]j.J
%@U@Bs1KORL>;g#[_sJrW\V@t%,i,i[!<dpf[OXW;.+EDKVEJ&@6jR)`aV(]8a^cAj[4D>XV%_?8bE3?UB?Uqr*LkK%:GdLUUsZN!
%#!n&Vnur7U[NO%;U,;dAY)$^7E2(RiiC4+g-M1"@0*WUg;-@U$7I%uOQ+.[Lp:n^OQ6W-goGED2<I.&1iH6*?N^cY""XmGsR#oFi
%3F(MTj=!bqiF?Q&n8WBO_@M\W._O&:AP(j'*`=@h8jKhpm#\)6C=tmUR];$qJ[R-^42Z\_*h9H2oAlW.!N)mf.]KGjAU0PB.YYGr
%_Q7if*eA4?17nQCfHd%b2H2<Sj+\&R75;/]]0rOaMGZ>6.@Mie^O_/<1eY7i_e#;e#oZ'.C%9=_<"q7a4&i,uD@F'P:I/HdShs0.
%lH/I[<3%AX\QGIYW+ZjA.Mf>#9aFR5'/1_f"]X8(&EKd%asLS2C_Lf,YtYXf.d_oL[\)QVfOSGO:nin6Cf_aOZnrbj9)qr0=p>#k
%&k=^39Q'r=CPNQ$B6o1CpJKB9P;*JdBZHnf,&u?gR(PGI[1A_6%3!-#21b;+=YP+<;M.^RK>lsE0JNtT,V[q1$RQBolbh4[nM*1#
%%)WuFL[hfU0R4K_6T.\oCgn6%-%XIP=YP+<2a]K@L2:=dWM?sPN47&`aht?a,./5iAk49M)QEpN'P.;D@qcen,&+p@=>A/:[b0X&
%RD@<S=XKqVfh_ag,Bj3Nd?Om"a84u>4,-LN1k4d9LG,1Y:_Q85@CgQl"1S9+diBE)-$.MVi<oZ8eW$.=b9sFQ3UOpB3cX#!9Nmm6
%G,tf;@]X**4pPMoMk#Kd(2n7E.ZcAHG`i+p<K18"1D?/'Js27@8p8,^H=miOWCptY*(Dp(OVH%_!0tK0jQ6T'SW9sGP3HH/h'@rg
%>a$1AYnYUneh!?lCcnHQdiE^fgmMU2JP_nUb*$6I2FdSN:lUrZ/s_iD"&"\64WG7?/DOU]?&/:j;E6O('isM;De&WOif.r4_6)%j
%a=0NiDa`!_R4&nBU$X8*X`8d?*-1rj`mYrWil/`9Sm53:I^VZgV]c'H)59EK!fc9dM"^l%Hab'@FsBZHh15Jl5&+n0p"m>tEb"#4
%X4dboA7LSdBtG==+6:r!=GBE\FIBuCHg_6[AHg1Ll'sg%W<OUK;W[bb8Hp%@hA.>HiKC1N#UiKhO/\Z+F><*@f"#9B;,68%ePBHd
%(TB)YO3!g:K($%I5oG'i?6N,KaE25b1i^?&dS.jIVuG"'cKlN&`p0=7a*;en(A=P`GG-7YG)L?9#BPNi7G)_tl%qmP7m1ij$]ZYf
%d8lfaXS5REms"P88Z*<>,s%V7,=Tb0SQ?G@,J-4V;(JU&XJ8/Os7+FJ!52`gqJT^>l2MSr6%@6+d$rZ1f,0)8*fe(dZ@aNqc*h[=
%j-O?Y:`>^P?ulB/hXObB%l0aQ=Y1>5)mqZ/)H3Ihk@BC2d0p0$'1!C!Ed&,YQ5EosX=4HoiN;IQCOA$`(VGcV'p.O_GGh!X;dR8"
%\#BDU(T[o51KVe74G:ZTp&/^*RQdGlOSAC)&WiCZ._,dLlOZ@^.V?WIX=Z09&A4q6$H&oJQcn6_RcsTq'`i[AlCbkEopkZZX;C)=
%CnYVCd+/=ub[oDm!V'=rOQu*KM)9!@bUis9DS<pVo%)p.pT#XQ5&h$^E[DA<@fpcjis,rk,87)SO)[lJ`E[N04s4$e#e'AW)6l#6
%9?\sjmrH+Yn2f1_Z8\p5]0:iV^sYRCU=OD68%2ft^X\%<q1Drd9JI>hZOb-f[#ief1D4EQQC(k^hX5]Di<?F.Aaa#$G'tiu5[?jI
%]t21Q8fVF3Si9WNbbIid(L=?X86n]Qe.jdNi[B^\Hdct-h-_jF0[+*]'V*>jTZ^C=EW(jSGiinslR_/*J@UWS$g08H>+0MIo3CE#
%Y+c"H!aI^OXXt\J1g4d3+Tc-]nSpc/&-1HmSEju55]HpgVV0gAJM"gR>[scngBYZ#a?XR8!3uSRcLu$H8.4Obd@jfW*QhsAT`E^\
%W,-P]_',.VDmES!Y_@+cFGS6;e""me6O&:9=IF8%F%6hO3`J!f7L!?1Q"e2S!NfSZX;D%!j=9bYd;+:b<2LBT!L""Yc&0n7CnWVd
%(bKqJEPGsV9VUU3BP=*NfV-I-Uj2tAd(1*N/VN&DX"JS:C4RtTCsji2C2(u8O:,eX5]!+oM?'/.MATPa>,\D(`tiEJ*GTCaTR[#U
%h$h4;6?(#r(-?'7^_UZ?gL.%Gk+'lJ63^m,"crnLgg.k/-)?774?KrI?gQ.,ZCudKB\a*8(.)u]eJC;X[D3P%6="8u?=k3EjFUR:
%3YXgk+R7>%'%0*V^G`LHZ?&`Mq[!E/5jN#)[Le$XY%?e][D3R;^#]u-9fdr`[?,sl631Ttg8%)/9?<"\f[un1XG?@$fqA[Bh&M(`
%$K0PP/F+I_"gh)i-9IHQfa\2HJm']d'L<<Rkg8#rHE>atD2$7Co2,jeP,'Jq4jFec?21)_XB2<@P=k"rI(J'YH-57WR^=e\H!+&,
%1mtWTW-E#daoZ7'YGd1^$Z+l\R5/,Q@nqq#3f&cc-<"Ne]81f4p4LYeJjAX^=i%>s;:,%lk<84"<Q_Q#Z.#Mfre1F**OC@$5Hq9-
%DF`uL),32)76]aY6@+_sq*!\&#LRWL_rVOFoqkePoMU;_'#(TR)e)M^oKo"VE8s5-*Pf*6\hZV!Hl4efj@(=#F(WoC_c(=UDaoCb
%I$+[$N"BNL7ZA7kii?`P1huY:3;;XaLhaaB_!'4&^9-a"8UVL?fbZ]0EMl9dJ6*s#eZI5_<P.IngADks9AJL!A"s%((Sf!?e+Pt=
%[">-*KiZQV2OT>13b&me3E.?f/',fJH.iYjc4:Kq@,Zo-5UXdIMNE]5c/mnY3TYP/O8_]H(64H&.!cG:+M"BpqQNCa7h>;1c]F%Z
%"\3O"1`*YHN]\mh']\-<a=qQ\oJH)\e,B5lTXd.1^@#N^Jo@DRY".1e!s_%$FKo&<G;(]'^KiS`GVk>6N$f084WZ%_*fijZqZ`*O
%P_*^mE-YudJ]jen,FrtD8#52):$ERG*];j&k>;66'h)5q*gsai=m2U;$G([blNdAh+R$;4')hN_k45tW*W."YI_4beeSk24,l3KA
%OA*DPQ0PjA1`*[Pmm^AWd0UF'-0@ae(SkJ`)n81[O>H&<r?)]n4qQ'QdKA&mDcb0u;WCEk%_e#E!G=q5W])3Si-^-S,LRcb*eF<P
%)Yq572^YR^"Z:7UA9*;qUq&(S_/L!1./63ifqFqoc%m)+9F2[[@1CI5&s\]<)X5@WC?Tlc.[Kk<dqfaRBXZ*dRS@5qbuPs#[\jb_
%p5J/)[[O>H"O2*%<O59!Jn?ME1tts.Ap[9oJaZ_/V`.7jQ:-V3%V*^e;PP2i2E^(Tc+L:tT/80K:Dj.6kA/f\(4l7)q8?g'hGKg&
%B.8ma^i?e&]cRDSh&eNFs)FXgs+i6'R59(HU2!L6K+B5rAIp)Z1iS#QZpa+?iaUJYhiO+,mND>U+_J7oD5qXE2^3Cg0kpa73h.GN
%2t?5t.iK=M5bpfIc7h=moS#[XKfK_,%>d;6.sO,7OWp?+rfFX9=2JM/kbVhZLpWDV*Fda*@>K2=lO\+`O<GB=7>I8.Os/s*c/iet
%=K.e36U;f',]jl4$A9SbWH<rA:32!@+\')/4$#rBN,N[N9+jIn]PDVQ7,Xb&N0IC:T+bQ7I3Li,G_<L2EM9EJg0rB-&h-O8^^lMD
%oQ$Q_HM+8E<N51&Ln-*hkT5Na09L/q)'Pth<ca+9oDBds\d`L55]1]36O7OZgdr'*8AcI]"L4u!2^Wk_p6X]?bp<SUkL0d$#99?s
%W3/of8:I7reb:L9RC#22o2>nEql+3Sr_Jj^-g_ukK76eW?k-dg_ac6!1'A4SI"inc`+S!_4Rm\dLUc>Jb*r^E?VRg6-P])Wlu:ij
%jHWIn,];P8Sa:#jOq$SBLu<-VJElF@Zc\k>eMMOG,'=!2mfV^<*@%4l.aB(HY=/H%ZCY"bS75_#aN"ZIH,4D4H2d'gI)H7pNJM+(
%]NXJoDt7IqjS;Qk8JOB-1"'7HCFM(g1`atCUre*()4u*`Y8]O9##!$pk>/W\kdm_AEtW#E'2imjK!Z<)Zg%*o2i3;,1[=nF=5W5A
%;8;pLqP]67Q+4pdS0h4):1%AnL.1M("5`keGfIUi#cl;nSR+oNfj38N&ujso<8R]&lY(TD$?#nMCAJ^fh>eC-DZD=IHNUL<MS4EO
%e+/qgS%c9HGb]o$J..KH`g?E?4.FOL9:M(b7'"2;jt\lDrTnmLkb>hPM!EA,Tf`t;[F)<JHE<r+=eqfOL.:(d_&GZ+fnfW&7i`5I
%CEq!320fY*kACDdP>h*k`8>0PNPY%BLh-!+.7`:"Ij756_3'B8iJ=e>=oEl4LEf+qF82F6D\FUUCm8;,g:DW1'm8!F6W4X_iN:RE
%'gtJhR9G_jI'(94WBP?%;]Sk4p"WMF2l2,'-DK&JkO_r3^.H/5g-@^_jnQ.$f.+uWl0r)CJa:$:<_JQ:9hkO:=Sb=s*YHjGNGAiC
%Hc2_;SFnW"bs=\;'iG:to>o9DnU![WFn,8`5V@ST\a'!H^.V`p[YX7E;7fKX_%5Enr+VLQamAt>0LEoQ`U8d8c'd+_Oe/:@W&R%O
%<m.U/%G1aq6bKM+3JM;>%&O`:SK[?^VM%`VjAd7J5pGMH9iXDKS!O)^&UA9J]nL0cgG!EW;Ue;;WSn"a,-#Wt0S=Bl$U&m_R#I,Q
%KtN^<;10nN,>XVkd$F;)hGCf%.n"W52Ekt8l7_h_>oG%_K8CZ@RL7k"n?XHi(+HSh"k6fg4epG!`d=XF8>7)-eb?4%NtQBnbdG(c
%Jib)e!o<.!D[Umeq#([+UUNi'B5(4XnWaeSp6NY&h9m\;/r:74kT&gr^BBTh"P+nP+)*Z/^geneBfnC=TG@\A;0'Z=U$\9P=r\n9
%H@gI0ahJ(TC<;>&<5rE2[H*`=+\s^S*&UB,\X=aN9?!Sic\'MN[&$N#k%n%)L,pa^p_:DQ8r]DG23&N"*T$6!nlcCV%0cHC.'NU"
%PL<qWl'1=Pn9'7]61q'BPc*6bXUQie35^-dl>B":.2?]fpdHD!ltW'?0bSo+CDK2s]r;pW.To3q4e8*O.UD43EUZ;.3Noru"o5T7
%n<!;'q6ZkV+&Lbo<-<tp?fgLM3s6jVH)eGcW9K?(B"G=7MRl/NCfW>aDf7!Zb&<2j)<FY,1Wo\KK,J78R*gkqL$j&\P/Gp7ZI8W-
%`.[V4eKCb]KH*E#F0X>m<6>$=5,PfgQI&8F>j..NI@Zk+*T'sqZ+8\c"SSAH#eEbt<.$&*1bP_T&u5;p!Kt$a/^AMR$K,UgaII,s
%5^mpMZo/70gY.(LUDF`2ET:plPb9)kMm8`),@&lD";=*4_osQ_j>N>3LJ*ID-V*udSX?T2b"n)qDK(<IT2saA;jFMLr(L-b7S!oH
%^(uSU:VZ%;6Vc=1)E-Xb?+;%"T2$>GWd.CM+_TjEqRn>"Vt(:n'Al=\\o4CokZRJh;^O?_qju3!r0Q_=>rGdc'OOE']l3.:&8^-"
%;mC=:%Z$j="&s+W0bO9pk!t$+1=)#9RZ4Z/bf6c]@Y`FMl]UH,Z-cjn'fq2E(2Ot?g8=\.BU1ce@^9Y2)f4;5kcVgM*kq9n6P>$,
%3iQ'h8VpOoP*4jF&9-l/UiVr[>S?9'5^'*QRGsTU*I6&'/0OZm+sOru!uj7n,31:L4il(FPNpkc\h[.78eW\WQ'crEkgl80.krP2
%jY1rD6.e%6bX[K;cPk6Zo))BMT]B6iD,&N3cAt"t:F-T<.$J6J)jOGjgs3lD:Ju_(1u>0RJ>@URDGIE*_F"53br=g*^T>Dg$01_^
%[&0pA.9Bp4_FY_)Z<JVIGOqD"r?[HWW"G1CYf%e9FYYb9-2/k)DO!+KU891YOiOcJULW@'pNV(kgu+ii5:uIJYEMo[YfC6!c?a9"
%U!'H9(^BDlc*P=qM\C\W(qBM.]Js?7Qsju$a:S[F>3Kk^hN`CcO7^Am&u"-AOD*lt5O2$drkVp+#UuVpl;`\g<\pDc#X4+UUJ?`,
%FSfO6DBrobi]1g.Z;GY(Xr8gWgWdPFD=&@Kd4@.PPiEs,]#V8DLa;spP[9n1D;#+/-Zn8s#18qj;;NmL66`4+o`RhBP5)q0:1_GQ
%qC'OW#YD=7;j&i8\O9D@HGV<5!:%jY1kV]'L5lpK*&g#R5GS,G`9X[o0Gu$XYZYb8W:%,IW.V\=]'skXAZ4NNN]oVPBq?LupYBgg
%&CP?_nsTpAW-^_>DDWK_!J0i:60?YOGZ0^k>SM&_q!7aQJA<ol2%7A[NE9eS`g_QM([7<(\g]mDK,u#Y.Q#ur0XTUL3,3FD/2rK7
%Ya,X0S]P[.HrE;g*H)9%$9&.KbNYmS3To@uJ<>(TYa,S?,+hGe4)mZE&-+J+TGpAs1(S$(4s6Fk3dHn-<"Er&PK?O]TnT(SO.PM]
%atifY/:qWV-;&@kRpm&%@]LX)8J1qg<_JiE*&R*Xhu5$'rq"]VnDQ'8>ZEgU1IA[m9bBInket0V=^;7H8)D63=Z\X6V^3id<b3bC
%5;\ILIaHW4k&_\dJVq,)V%tSO-+i?1AdN&9F!f#4'fWf9P!d$_\qpXoPsEZ_fR=m1Td"OEPdnH!XNam.;LD@+i%n6OSX/?dQ3*Nl
%kk3A7??aM*O\d<!g=Qk\d1&46\g^;,?FQ/\1da^mXFKl,,s1QU.n<u-I6p#9I4_?tjoQ9C)oq9>?Cn7B3R&1ojB3FK37Jk0)p%Oh
%W4M&NV+DBC;*rhB'p3Rqd8QVf/QnpL`4'aG/)WGQCH5[G/l7\>EQ1')jiQ5Hdk%1`?F6u@DWEPQ3HiiiLLS]p<E9LH19<)ndF%4#
%b*#bm9&pKl]\+I!kL>O&^]lB&p$uYfSC9$_8:F^6>\;ppXMZU:fnf9G)4!Z3EY_1%`p&f]\Ku$4<fUEsE<,?AQQW2Q.Id$4]j@/O
%lRk1L&rPaE)k3?EBqIJ3M2F23:NTdbD;-m77Gc#jbigKKG274?N\p2d#Q)kFbDDtR_u^[!)eUCj?Cn7B3R&3%^=F2a_(O0O;l\Sh
%S8/Ge`]7"ogGlZQBuqi!--C[=^c^oJ3RsrkBPO`;-#7QsZ\0O5c$#rY3-R'ui3[d9^ofs!*)*`a_Odh[=d>sSrm8GA7]5Ek/HoHW
%T[h5Kh/c>tKQ"0/f#Guo/0#,cUSG->Rp"muCt!1nkr%3Hm)dtOPp<b0i*\RTV`^l?joUGo+M;$Hbj)>k/J@?cR9,&K+(fM$"+L'>
%Cr"B<#"6L6#j+Yi<)7l"!?uOlqhU):am,$hSP%sXe>[>h'5/SKr)(\j)P=dRHSX^s518!"0)El"-OtLUmohb:#ebuIdt8_5;ErN\
%:ur;Oa7LGnr=5IQP0:9LhOkLENff9-W<PUJQ3Q>)>6N!!:!;B7F]pBdRI.sjA5Z*E[ZD4J7eJSLhq83q,d?W0aJCIPM\F\l3-Zpr
%FCQ9*f)_0QI!ZIBd[U-;J>eeg"PK+YjttkQ@=d^C/6#>,Pnf<`;j2im1rqi\>)<M_>sh@E92;`Dju*9JAR8s;<T]I4G:sV9rI5tu
%?G[[]B4@Hr3ZR_mh,bInc$bkfA.#p?RQhp$N;ujf+X`CbD2Yra^g!4.)8)6FAEMdmUfS(7!Dm)XJn'==:1FiDJbo($<))7V]4;8[
%n="hlZl0Nmkp>E/nuQ[_[h8Bco.#C-17-3II$sWl""XFF)js&JcUj[fH%GCe%'&Ihb$6\*?$OUY+Qq0B;H_(4jB:5HDBnXQk#DVH
%AM0DHpbM*a$Q&qf)/JA4%!*n<XF\Et:pmTf2$I91bs*=n)/E.'OOFrb>4bs`.Fd0/Y<?9Mo,8c\?429Y-jJ\DL>WnaQG$!p<XYGL
%*q5'Y)BitCl<<=-"*%WTTLa%@H#77'Bd7CTCnkW71<ocNKJj0f<mEsH,6Wd0QG!TC[D4]+NlGVYglI9!Ob).S!FuN%4SLLG+`2>1
%N?6nmet]iOH5$@]S:T<^#S+[%HP>7NJSfM<=cWi&F&o=_)2N,D5`oI&USTQ\*hAcXA3&d0,U:r2&Wk-q#]19k1%-+R)U`C%D+%d]
%,=Y!="[q+d6"m#!Op's\L0WJ"g*gh)&V3f?(^Y&D2YP3XCniiA,L>5":E+XK@+6Djg76]f7h/uIV9'd(p*f!&O7L:3Ps!eG7RA'U
%NBM:ngF1DAaKmhao>Vg`39a;3m86-MNUk(17?Ag_mEsW'dRIeXO%Pi-;(7\lML\a1D!Y"!LL=]%7pZR>UGCRK7bXB_W^gW1O!5tb
%9R=(QKs]6F:Ks,JD41.*A[eQh]01"6p9\Dae!Ag][OcdZZKu;KDGOJ[HeL7DC!3f[?/%^"BX^/TbPJ0]l_Cai+-k[YW%@80ZE0,0
%DLGKMohelC7qK.n._G@NRFar?=Wab_0s@pgNL'67RFar?[lu:RohelC7qGgFQ/2;8/F0(:XH1MAI8kCUUGB$6b-F37gL>%Fn0aOL
%4KNm5o=u*b:Y;kE-a1K1ji&;&`?'H!Wj_>0^JDb$]nfWGj>?7<UIVS=KEF;ard/3?V5q/TgKY*'E=l3-ptFujIq6,Tk7^l'\3Y*o
%auE2YA%Sg\A&5cZ!;21YcM(8:1gEEhoYO\FG49o;a"jG+Ut^9?LIF_N4Um'sB7\72!#@V9Uo\l<"(@cZ+bdgL/+PSj9_CSZZJuR1
%@QDiho2G[Y?8\C^1'2edmbk1*^HG)!8*Un'QA4V_Wdp1WTmn_prg>aMKI/3kEh,[#r6?W3qUcFrVg3%*jrnKfK2d0M`c>F,A9Uk/
%Osmea5'rhdH"fhfQ?7NT)Yn%1Hm/NS1u8D?-T:)c3(TReVuI&pB*X3'R;Q>u]*U+6#X"M0lH.,VJ9W"p;elIY%S:lZ#``ogeBYUs
%[9%2:;dp]$^1"<e_IQ\i%f1XfX:c_8`[gBc'`rUnV3d8kT?BBnEHNlG?_'Y_;+F4rP<E3$Es4SFboIC=`;ngV\B17@7dk5i`%))e
%DHno>fn7DBo&juRZHDC,*TsZSOCTgkpiche]r-u>?);rLWe380S37711H-@MglG[dh3ejUlZ'Xs=kWT?#';52X,oT_%)Rmk2odP"
%:m,<@%sZIWbWu$o9QoTs<(="u4MAF^&)I1'S(1R#>IBLYU`i,$Et?^4)F$s.SE.fcN8E]c?b"]*CtBs*iY]rG#<T5\LHgn>ip^$!
%DEe!7_jbG1-e%$M=bYg1"jY#Xg*I5YFYW's+$@sHnFpH?cdS>&poB)&iD2Zj_uH]WM8N[@aSG<1QZ>:f4dh>r`\'8jpf!$mn7Sb!
%)#igOcA+W/^[pEFa\8ER%Y'a`2uF&'+-.DshshQCi)U8PHV@hklITRB>^,AC!]k7CeU09s2hRMbIM24Q;?kRt1F'6'p=+`P49f`n
%V5FtK#E!gk^%jc/ZgXa6O@cE4U(_`H"d5#D3%j_HfAkcRD%Ao%[Kd\,cSlo,6QGh%2^FQ*.[#bY.7VgRPFgr!d)\eoXc&HqR<YO=
%iaT,66b;lP`ln!n?:rDCMpJn3XO+q[FNJkM"gI+6\]Z+8guK28QXb,S5<Sq1lc!_;q>^Y@E3FemNhH'@4P0\_GZ!W2UgPMS?!O/[
%Zhs=R>+_U^i8'H@Qlk!jZ?1n4`)Q:j>(p8+;.Jb[T)*ugqkLs%8ZGC$"!c6Ban8VZFQc"D?+</.bN`7aFLk3B,Z'W817@]-kU3ES
%h_/d"]^77($+<rDd[Y!%9tAILUCQ!cpLJ#iCS)AM<8_SD8].8+<`b)pJ\bij>@:6=<PRZ"QqFlr_"?YrJa$<P[(tPBC4WWKbQ<,H
%26E*C[(rb7ZNXsuSA>9-qaJ!0i2+gQ0IE"+?h4=mA_\oRkh1PK"!e+-?RG8FC7N1$Lnh[Z:JJmDJ3DJo:I><o7iQR=Nr1=0r*q+(
%oT!eTPH$SDUgWfq3=iO?#%i052b_J+&T@F'k=ZM.p;`':.Vd'4a&O*^4gT,qUl;3u\ogn)dH`hO5$cf@'FL<7*q,W7T4A)DT-SnY
%pP%C7a0=_`HVg3oKR`,nobQU+^LA=H<88]AMgJ!&W"UNYhOSsJkeBS_Ph'`$RuAaG$Fl`;+KtB=b-R&8\EPI2fXRg+[9_Y:q2UT#
%Ode_-?3aE7#=(FRqSZX=XSsWC5!j=5HHG;->7k_!nlF_kYi]"MgWM))OFGDmf;S_sa)euqk#+[ZR:A0>8C=9LYQEamEZ?`;<K_Jb
%W?B5TS5k`KJ0Dt(r1mePRJb`E11-=+c817B*P?:TA=Qgs-$ABYUt<d>icYq_A[;fSNj)*j'[.m)e3gQ$SkLL4asp'd<8]kF:n?Vl
%i8[ldJM>;j'(BF4ofOnF<Pn,K5X-lb!"gdB,bV;"I1cPCS3@7(1:?Q:VBS\8m+6BO"P!5B,bPW6I1cNEU-8lk16ZBTL9$9f8Ushn
%e-4c$FFZjjN^O19f^TY8&q-'JjKU$+&Z(0R,b5.3T`k(qVtWG=2mO?=_;Iq-fM-ZjR.2lP5W_Z6a3YS!J$T%4d(8-I<")XDA7RgA
%GNW)O0QQgDAJ7<l:85RK:p4Fil?h+UB5h0<(;fDi'TW$cnogN[bP2k!&>[HfS:og&c&b6Q)+cuO%]aWGi.I8R:P2%tST=Di0F8:t
%b8@158XpAR9,.h`#%soO`V@(MP=a<t0PQYgCW>r50JP59M0V*Tbe(d2]Gr9\q(OOA%MSGSR$a5X`4S0*bfaF(?4IWm^$c]m*@Bq1
%0JP59M0X<4R$Y_/]Gr9\h-jc!%MSFoY@Y!=c&?'dWVge(pb1bA2I%1Mh)jZ1XjLOtHObC$2@lh[84SjQ-``%GT2.^pg$2^Oc`1^u
%]F$_%./-)sHV2,kDuMJ@5eJ!9jOuq$`NtH(nN$AtrRso<B?#6kAXOV>!d`9NAl^'=;h4VA%oeR8`qQI.+T5=O&N75$\R:\BHce;T
%mtM8t#A3]f5.sJE^[>U;d,H$Pdo,;qlc)mR!;Y(([I5U/1j$.V7i8juP)D%9>=ZXKY[!ltc(L,,$0@qgOD[%Oi66<<3eZPF]N*VZ
%D)_=F)26r;"Y\CXiA5\]5J9e=iB,/l>D<\f\)m.5hNf;f?ICjB%,pdanMHmLg=bYR-IcT4SO]p9++1_-WOm1r#7Q[FX\*q^HI@8i
%e)fF5XThb3R[k:h"r!X/lKZC8PaY/W_)26V8EfbtHmn[WFYr?iJu6s4\R.Xh$&#[-kGZj/[>$:I]_\MSX-fj7:he;@J?hpWA0\t/
%GHT>eX^F2<S\l$>-9N`AcA>.6+B*#B9rTSN(7sr8WHXA+I?EJL>>-q#0WeY-h._!nbiZFuab\X[31]!*;qaVm;VJGak\@KE'f^Jb
%l;de<Z!7^Z6[H?H8$J'kIR:217dE$+Ds)q1AVb_Yj;*o@UL%r^pZuI07[cI&[juEHO(utMj9hCiG4CQ2O=+>ZIZ.:W13.eCd"e"<
%iau-XaV&mX)d/.^E('%&gq_mc2+d]#=\R2P"XhEMWnTg5M'0Ai,(<fo^%3Qm;fkCs!GY)6eH<&pXc2<5BJfc)X3n4H2f9)g:$;jo
%Me7U5I@D[LKSdQ,>\H#4;EpX_2[hR]6+IGSn^\$-%19`/D:FoCp38&%_!K&j.,#-/2;!n=ZJB1sjr65a<2"?0a_m1B18\B2KKcZH
%fg*KWL4X"o3%OX14Gp4Q1`B?$N"1l\qIVQb0m?*>BF@7_<.E)EVP5-@dRiauIfH3lSa""KTQ[aW+K?B+Z+A.bkX\fhD'B>+B9J3E
%#MFYLK;Vi&6698j2B$j_-KO/_49iKYqN`*6^<W\PIZ>9Gf_b%Q<@+2]fUVgu-D]pX)M4@feCZFA=G_,j,?:-K#a"?&Eh=LP0'Y9X
%<^PRD*$l'L:QNe!hqP%8RC\d/K,jH@gag[Om#c-?H.:LB6H_n10/&`C'Am4B;Y,%sLBdIIN+?N&[IoQ_IYI1[1SWms3dbb?nfad,
%_;-JpXst_^"j+IgV(,mc6]I^ik;_"XFO(9>VLH;49/](kR8NX?]brJ4>WXs,;SSu=>QGT"qB5H-[kgoAKks?T>g!K?DG,4r/"DSL
%5u$0?R;k+6N%="EgBoR??.28q.[Nb($5L@8lRF;$=/[tnf7:/HI1RERC,;hY<L^g`CSr]V'HA!Q9:N*PgP9n\OI90;c+[(n$%9dP
%;Qh///(LfX.4,uHR!i6dh:Ym#ECRZ!j.ZrYGHm_-$Cf$uWp[Y_LI4.&[heVC^PhRE'a-JIr1'YVq>ogAj7bVLQ6**6G_[?9(3e[H
%dW1KdJ?KVgq-K-p0r'FO8;)f29D&i;^/GR$"C=f]oN7RqE_,qbc6UGO=kpMnb!7-eEeh5jX@bd9BY.lm(Ur@kat70_%=j=M@&k=m
%eNBnQVt7g2"BUP0d"N\MHC34NN0]$gF1)L3RUr/9C,fIk6;<Hh1f3:S\hKNZ@&@?I'MX53)CtuBC`"39Q!bE,3nH+@"nde4$1Dla
%"a2%SAetk5]>1tNF7`=ERHsuTXp.++>(>/"=iu_(TU/hX\MD]mBCr*kTA_A[3q\G,?p/(NUn5sOe/]`?ORfk`2Oef?9RuK?#OjW8
%]B)k#U`js11(55Ib<YW@;!HU,N4@%T&Nb:"l<cSdkPhhmKGqDhQVT:#\jT;7\;]-\>3!c_H.lL7>+u8@_Hm=_2)"%ET-0Mt`W&"I
%bW;;qs*$e<<Eo7Y;T"rhlXBrff<eNA_d32#KX\*lKaS1-6(o3cIL0fDo;Oibf#1PWes6-=[K=h*!0AnfhX\=_;;q+I\%M"0T$VkY
%LZ[3]F^$QpX"WYH=jJ3ON#!ScHA:;RXm6ikVtCH_%#jKiL6hLkUM@1r2dF[JU%<Sb.i6bm/q=kBNM'[dYh!^","cI*OD-kq2-SQe
%<8=jP+_Y'*6qH^2UM@7t\$2GAV,$=oY$G/U\--QV2NmJZ(O:ba;_9:n1-#!gpGe6_'X>Z$5u/s3So'VVE.g_Q@&gf[Tj;%tFC2(d
%VeJ**Lr>&<]`b+.q3VpI-0=lCl&_IHL7nb48.m,YUYD`36N@5qiPR#[Hi_Yd!/O5m!7/nIr@)lZA:u,BZ:,FnnF20(PmAC"X)uj&
%j^V>JKg9u]cG/[n_f5.h/TR@"_ME);W,DR"R@SpeE+b_f2G<3RntBDjcqH:W]]FBmk$l[IO'8cf%'0aq=5BT$Y;1VgPLC6R/YqgK
%R4uaj[`uJu.p9HZZ"koLO`"A)A8)j<*VIVoAaU#=e4W1)T#j51eg.@+OROd@[i1os$'nia*IR0B/MN*uZJBduBQm.oZ!?#im\NRN
%34BpS]=p[4D"WE#EA^lshC9jXd=b/qnROZ?_&bs6SIY?52-\>1SFFU[9!+sNC91@%(8<F4)=(:#1tGK?0\-89A,R,AXKuDpB0,ob
%F4]Kn*5jJ*dmjkG12M)`bZ5Zt[[JtPGfqrO^#Rce=&)i\P"Z$5>J1BTZdlV5?3^+Z?NTEl,moiCk1_7M:Kn2e=pF/<>^q`spBXCX
%#l<C2b#T&h+\PO@&X'=0HlsmsTVC'Q,,t3B896)t@e1f)61Zt3o;19iCP'iC%:Z:#2.b?9?aGiIK3D40Y-8,8qO:ZlEhZ`aV*V-o
%A>Oa*g>WHmg>H:<+ScqhJI*ue;h-s-#an^4C0F?B?"!oRV9US&Wa-,c&/E!FH4b4rdfiN7pgj*AN:MN#6*9AE2cJLt6I(@h;b)gd
%M&H!*[ucIBo1O9jbhFH-daM8-\IfA^\IlViANm,71Sr5NTNoYd5@J'4kc("Un'LhQV$Mm3l3JMJ;.3P/dMhK,T/(=ZK*l@hNX:tA
%*VB$r\*i\JKU3fF:)WGgdtB,>(=?b=->kPrFbXnWd[srkO`p%B>UEmgdbWl1^23Wf7g]u3F:HuY@2r-.a'm(gd1lY"Td`$)e,'ae
%ehM89&$<l[V=(]*l#i4Q6$u/!'&>#LgF:;4[dXpZC>9Y$YHWbo8:.7V.KgbSTBTo3m@-)R?pCN/)+5i4?RE"D19s%8?u.A;WA8X*
%,'7;rY?MK"m`nQSY"r?#[f1AA!;(.30tnPD1?m"M#PUT/!9>rNg)?r`igIZXXRb=ZW8&VP7[u77e\8Q64)*3R4q7iG`GEolP*"JU
%`f2LrWG[^!@ZuP?2JH!*(G:-Ge9g&_;XI)D2,"(@2-*;d=D4?J2JiS]kDcD7Zc79C]fo50n-SGADHs0(8)1TYaJKD6D;(Z<8shNH
%:lM1rKoX>E:Sn3G]WhgTRlJK'o4=-sM:k4/0$8e`#<V#!cYeLt+[P/&cHP"sppO<b_:0_R%+<1dYnNA^f&hD7@-e]N:V"bncO-mq
%\nmj/hF:O0l.5>P&hJc7S!Q!7%-Q78R#)8/Q.tr&o:fo(<4cc\ScO/d-;]ST,s7^27b_A44DC1N!9PKIb(4XmDNUG9jX(l)P3>2j
%!@Cqu@[!1,l"KI0I!XIf29ZoFV(UMdn4a3OMr%S*I3(>'nf0-%%JR6K\ubO5:'</8?MedXM:$'^R&tspBj@0fhVn0pZFT)N^.V]\
%#KPfC;*qrc1`NU0XR.RQ%Ek,JZJ1D/k]u2K+=?uGQDNeQMdE[UNs^+WC"WO7>]@dc0nNDh4TeQJJ7T!/$la]U?2,#(L$k%5efHYL
%X:9i[r]8(EZ"WD''iRmj15Va-SOMu&o,MJ'ck=q[j=@1\YWX,MfiW"R%5ge.*AX+OQ;aLUR.^ba3M)!gR0m>fIMEPK^"4/24b@M5
%M><LUWrG,=SdBT>3b9fH$0d,AL[@BXbg%/BG+N_I(p/Te]oHfR5aAB@QF$FWR9ucF=o!7;6*W1,)4[+cL#;l"AnPgsVP_R4qYH_M
%SHP7Hg$)ns03a_8kT-%]L"K*-ZP-25l'D!-9Jr(p5mt#?\9\M+:4dLsFttm13t4$#IXi3$SV9G49[$87>$uN"ohD,]0i=X<d\+tg
%AX._+*grR(UP7AmBT:52Y%;-e7`]]*:t'.$/MK7VW=uV%C3KnpVb:Di]h41UX^/^pFCfDjQ(cpMDOk$d58:N!a:U-P/>$qna*NCq
%Mh#WtTW"nYU%JrAi`,.",,%%[PtN#AGpL"l8L`r/#TD4/CQ7V0kYR%$"N%B0V&Im-c0A-eVDTV="BJ>(KNoOt1L3Eikfk7TT]/j&
%4Mm9d]PG59=b-\PTam!VDWJh/PO[L_(iEjo'?-.r?MHP'GnM-L@r(@.'7/]dY!*i34Y9t3WC]jtm:5#4XWH^gK1,0+-SoQ>,SJL'
%X]l*9I=R**m%0K53Y3T[nF))Zd!LFhBbWX8HsopGj,8-@[s=XBEu0"(6gnCD'I&P"q74V8$n_H>5BKX7W)$^Pj[oi#*Kd3&C`IdR
%ZO;Rn*<RVm$O>e+[?Ssfbb&qP2&tQD8KTPT3Moct:$\AGDWs48+.V,WG.ou1&2\L8+AHi%p:l]]9oj6i3_'otZ#=R9c?l:`EI/YW
%`V1B3a724S!pt-^M6EuoJ+At;oPCU,K_0m=Z;]7-eqpJja69`XBljIK(KE"=%tJp.dinR68`C5>j53BUJEFqB]R..<UoJ:WacU%@
%EWEa3R#Yh/QK">LkI%U+C!(+OmnMH\<V!aE:5OTA>_FN9>f*<<8=FhVJN+s_.U`9HQKhRm3i2u9#!)QWha8Ag6o39dAR6@03V-F"
%Z8uVTb9q=SD/"g>je)h%@]itQ86b*Q\V8[?9V80HHE+@5PbnNX3s/!g/B^ROC3ae1H-:!bakE94/>!o6*SSpQM[2QS+>fHM(jSYW
%3k#ZYL^7>B9qJ@;3Rt+E\%rgnE!-aCN9X;GL#T17<S8Zgb\38;j?D%Whj4?*&O)#]":5/JM4<Xp+nK-P\shntF&'bF!!&F>q;N:"
%V)XMZ"gtXHC!(+O:ZP9J5DRoL#AK5keqgK\DUig:+Q@^X3?jfqVs([e3gQ:rWBe!"(6DnX^0!jc!`-ca,+!bflFA1@F%3K`,'VV(
%L8]\(8gqJpF+Z1M`LV#W;$H31D@B02Q'Rrg<$6Yq<f>L,1X]Z^?6$ltoNHOG2J4ki-ZW;SOQpjJ=JWCE7ZpjbEKT#rd:6hWDbF)s
%SEa(HSFI]$Sm5REW%Z,4.'C/tNauI;a_6f4jM&G(KT0mT:DoEU;jING1.E0@PXVKU94\dCjl?]SQ\4C`*rV(Wl;ATYQe0BCV(&0.
%5*=U^[g`6&T_=PnPZ`@=i<+M_$-BFD<6(0N0bsIANX,cPDR,5t;B5><f?09,3MT`k\&D;6NtlYNI;LV6K(&`nr:<_B[5it\5VU5+
%kSd&E\1#A+l^aZ(Ha:@reYa%j)L\X?lNEX^4Zl#;>N>>LN]<o^eLQb\BFf:AQ(P*)G,S*T\9Ftn0t>\9r.Y(qNX]3l(4,<mG>K8*
%R=`No^$3]C?M'cLQ,-Z!!9iR,^Uu'V.ih"(WQIpSa`P6Z#[^*W]ZZYVRD!^k,JW2Q07YVrKp"Ub0gQ.,S3(GG`eOVQ]Q#59qfT\b
%obu@)?NF4TjKXPA1-`dLogt4*MWRA\M+"/Gj8lQ]%a&-(cfF\k;8npoXacDc?\@5>M>B2P^ZhQVl&gMOFkg=(psbH(7rUib!Q%Q[
%VOi:"f[kOE1RCCC#-jd2kd'c%##!4h+ZH$A]F/a-^[?DSXpIXKmnk;>T`#$Ko!+H%nJXQ3dN&.P#W]p7NZqHkMb\e@9_Rh@mNPh6
%B\uPjHOf!9M8q;6<:K-Pnet&%NAmEZki?b>F9?sDkj5B[193LI&k_h.&J.]dTYbe#+k!,".Fh%Ul!b+CF?Y&!Wm%=!1GUFY7f[X%
%Fq'>cK06R1L_NJ;j[049SKJB:7a]adn]@UcQ`/n"1>8j;#uc-*M-6.mb:;N6=IY'*35o@Ib@25,9Jcg^W6nb/O2,DCEJkUpK9)Jt
%6!f>8JCj#'4ij,jnN!jd\-:^kX`XJg",]LM4#,]o/;VIQ`\sKZLFZ*POMdE;L]:b,PG<7U0anKLko@F<)>*A7'U.5r@1q%VptgOB
%k:Wk.,Z)oObEjb<U9^sGY&5,<*@%MB[Km(ULMV'/8DAFb5?NuaT@tk,Imq6D[q%DpaaJ@Qr`%f2r5f=j*<)"j>]KNh&r+.IZb"Wa
%3"CEQE'+!^a(>$iMM)q'5<[;N_dAN[r#qJeCXUEdr2IVGpf!6oiD4pUj7$+QLVK\V\uY6M,4:59X%Y)g5L;73IZY5\?,0k54F;3W
%?YQg06ML';ocR&mWgS(nR@M()>VsQ.jV$XO`@*0Mk@pH\I&CuO9&NF(V[Sf(0CcD>B>bJo!:m&Bk\CTp`&qHsAD/*M-7mh=FRgpW
%f;DUMEaMgN<C$7bII_';XN5Sg.lIi.Q:MUi5:3+Y5-$PRFC0R&0Bq9R1C$psEZTM5=0J/23S1)ZGTB?l3F1B"hnojc7@aNPjGAaT
%kiT?>KUgj61kSFri0!;_>>'jYIeW.SW!"?;GBsnhk;=[%e<\Th?RG8'$b'@YKU@\cH+;-I/*Qb4'^2J*OU@V6-qd8^,8WH2jE<ZR
%)k3H?KAW2t2GM[mi.tXHfW%)+=!jXCn>`]'?qfV5gG[gXKBG<C'4KRVId8Y&S%NT301e$j?HOF[?ILA[]r668bUo6N?;eLNHE"^!
%oTEZPe&slr9WoYVoNF#6Vb\fr'l[r7l,Ud8nl\dC^"18:HEf-IoKk=<WU6'S?E?T%l(sLX9eXOg#c:Z81qf3t"mY^%91@X(hIl>a
%gY\2),hmRM*5KeQP`g=P_X>&u>DQ=jGPO)Y<(#*d9f@W7#_r:/*(5Lr:9I]EDo=T?jK"^89L*h(dOirKM%*Ut)V5Oh:5i^.,V'Ns
%`4QK^Kk,To+aikD:c8?r\Z!JjY`a5YhhALiYid#FF^r0S16uH<dD;heeMcWSQ!TWGr96B$2H$TIna@ufB28O$_7*ig3Q10fWZdQ0
%Iu=mVgJU]*I7Wh!>CBYdqCPmsTe,g\h<fZZ5[NK5UaOo<dY']C%BG^eV!Oh(-[S:*eBbObWKhMh@LEY(<O:CGc"ns0St(O`@/&il
%JAG8SH=0Q5+IUj[VZ$*9U<$-5V@V)$B,R7N#WR'+BEFXiXt$!tY&X.XVLSa_N(\R_=l>Q(-f\\%F\8ZR@Xq!eLRh9ZG[=lX/@gTY
%5KfFfmRbs"&Xe>/:Y(g?l[I8!>".5k"4Vnn4CJ+qo7/9Wblao"AofMkblcH+E?;&qZNR0ea*GITZ-<A1g2.n8A6/G?>(Wf*gNe<u
%>il'-p`JZ"50j`1J0JDCJ7N-I3CH<'#H5RP*`*7.o)NoKS-KbEH,*='h62)1Xs3;r!IhmTR2;S1>th4FYjnYin<LhYGeHF]VU)"C
%=?&\XV^,'B"D2t*e-;:^Z^pobp0A5)N4_be:oYd65dHkQodb!AjIdP>4Z^I@FO!gDkqT]HV1t9-i*BKk6;Qq9JW/\!R8[/Q!XD:,
%l9Q%'\_^4m4hWq4"1/[Oq8W"g8>_[(PGCW:<+N0f*$q9u@mO%8=t8&=QfBf&WF9f"GT)0E<uDb&UEi@f.*4b<8tnK&.8;R`.Vup/
%+C`@1EK):9b3N3Y,3-t-Q-DU(=Ul(fEfaCH#Dm"P81_qM@bDbIQK96o/-h#CGE>qhK>]Me,jp!9/%dr7/B^>RFfUobm!U["OA,">
%=Ul(fmNAbc#Dm"P81^6_`3L@.QK96oHuP/qD3U'lb[lItb@X\)FBm:"AdBl;-W;=aXQ!L)"d\\3!C.!o=ct:$3q>+o)1kK=afOoA
%XJ9D'FumE'c8n35h<LI:OAtBtH?,s7+fGI0D"K=@'PB0RE)m">Eh(6BWgc`q9Ebh*(%>1/oeOd&-D@Jj33U&"VLoVXN9-6D.a^IV
%U+k&=<P(jbaPZQpT-0ik:+Bgl;s@n;Q:h`t*aQD,A$""mL;PlG*uM9\`dTocf!90TMd]o_]@n[n_/@FL>8cV')7%:H!RiC9e#M'+
%AU.H"Mq@L+8rhgpG5tA&f1emH,2Ur/a)]25O.8;F[<pVpLm$hP^d2RmBX3QQ.L%.sRa:oj!2!:2+21M.7BRLZs-"JF;uTr06f,=j
%3Ur%3al]\q>iKDqE2q[Y":c##Ii!0?NH$%%qS[go<K*obVaB,M(u((rgLJup;%);R]a\,d>R)P^ni9aR#2SPgS^!BH<1&T"OP<i)
%\]U;qV:dG[o##CL;dpj7objpC%Y?De;!I\b:h2D)[f.[.nP&3@Q5h[Nm5=L^S(t7$olWOerjlCHYf$q9`bsX>hu^O<U:eU%U_q<F
%n$qIcbq?7'3c;3ph!U]ohK#-B5>Ws)!pFJ8/!j\3:tC&<PMQ$'5uQB9G2nUJKQ`^<poV)3<KG=>.R`",Q9'-)dgA>aaiQ1Z+^o_$
%4A!r\8io:]V[]S2C3.9@$Xhb);_*eCfQaM-XT8+L&_/u0`poq\8#YfH<je#`8YbIcQe]C2U(gF.QI<m%a6W(^%!!80!lQ:)H3BEu
%_FFO#jcXg=9aSsFeBHL@JEl.$d/j.c#RHEAYKR[`Wo*<#kil=Z?(e@[ipm5P%VsQ:crd)%IM/Q+OKn_2.WoK9pbJ,p\&Nc7$Ck.m
%1M*9F&?\tQ[A>@,7T&l5XAu6)7&1@9EL/,F8tjGY<SZDVPt!J)<5XW4#N8";?=DW8PI=!KlMJ\r%j,n<c.sdq?[ETB)r!jC<;**Y
%0'Y<E$oT6`IP8"dm1%3S\).\4m5KXWp6uZ^&A.rhLcmkS$ZQ$n0#4HkL.`i)![fLHSH=eI-Wr3JAJ6]4)\W:[q=PLcU=O^uKQmso
%6O,9]"55+qiHO6m.I]+Jp!4;?V6K9)[g@:$%]E]i];>!9EO?M>7bfPKVfO<Z;LB4'D^k0^4J6Ps'Ro.\Q6KRnS#,V-AcVaL*2-lM
%'Ri2_QGW+2ePb?(\6B;6Vc&ms/`LY""h>\:]2cHfVf=WO6e`nI9s3jIeSiQDJfLr3n=%!%hn7+fe$pd'28Pge)AhK<A\CF;RrWu(
%VO-%\<Skesc7S7i8VTS((7YT\GdrgDj_QXQ8l-PSGO<+,5^$T(W83hfG(+@$DEd]=e0ia=:ZFP\`Hob[$f%45KGWeP'm[pUZ<hd:
%X)i$@;fAf*m_#f?&@psC\*)6pVd9Rflgr+DjEdT(pZL&F_d.n#TUWd*$Zsl7]0K_f.%"E5ZZF3AU"u@HFBkN',o^`$jas"kG!&"^
%96:fNjr>#1l5-,VJ53Z@KmRq1'"^a`-u$P<QQDjDQ[%[99A45DXm_!mpWH]="^b"e@LXE$T$W/"/+p<8hR7SIDq,m$HZc[TY'4Ku
%K7]P7n:YDom;C`32I<Ngg6WPH?a$LN&(g,Za$$!:es@-/mZ-,(NgK)uTR"N>/T5epFHP6r:MAnDDqYX-=7)%AA]<i!m:s]3ZJFn-
%VGl1EZJtcF_O]T910Fm$g]P^q;>$[$mbE)_1@F)Yd[c,X>ohV#HSZ:s?+]\l:+n<A]mG:riZ1k/H)Eu`^L=m9ZNX49NT4g51F+6L
%lV`pdq2U8:^*>TihoSu[kN[6f:A/YnlgXa6U2p9/?gGDc\::DjU)\3!S^.VH)gFX@$D+&nEXA:R1)Wj;nFk?*e=P#K<q#!K%=!e3
%=L8?PiWD6EilPG2EfW2_id&#(okI@midH<WQgm7dgMM=gloNuNJ%l5c0$AS0aZ&U)rUE@K-OJl`84"#"grZbJ8mCedBfDc4.j*,X
%/Pku^n-re"niW%HjdbPR4<KlrU^<mej46m&E<LlTh9?1H>gB[#EpYu,h74DF5hPHd[9%.qPgG+$p[bGmqagspkQ<ka%UB$M;@/4q
%VTKS+Ugb/55(2?`4eUE43UfnLP=i%h2Q:p^Qf;1,#J1@jW-[38%d_?p-PaCT[n.lNg=rF_$#Qj7CO:^mRfgF8[n4PWmWDFDRsUc,
%0V(gU/XqBRDXSO8CrgI]h;0r4-9toCHAkotG^iNQ@JB&5JPS:2P-*Qj2^6-2r]Z2e@ofcb(pEG^nCil5WO\dI>4sM`7N;`L`I.sJ
%nGJ3r\ANcLFNis3CM[-7&N&p/nZ^574"S!-S^nd0^,Zn=`:M51gs$Nmhc)&kZtp?K/Y7_gea]jPjH5_V-*s-!e<1]tQLKSAl0Qea
%6CKfqh"&V)aWWbrF4?5m.(_*(,RYeG[krWbr/Hmg9IN6[;;!MdhY<B')/<=#:s40>>./(BAN`C4lPXHjStVJC%(.X!W+C=1>1PLZ
%ZC[b-[DJuY4[Uge)/<=#:s8P@[B+#>AN`C4gG@?bStVJ3%(0ot:s40>>1PLZO7)qJahk005ipj02$>Q2<C=XJPa)U_<C?]PhfL#H
%rWB10s/$rYr@]'%YQ%Ti+Iu.K%"M@3Xb$Zg5X:_@@/9ouql1a##GCno$+8N=$%UA`3<C!^o`N88U*"pp@/:J`W=WX4*8`%FHnX)+
%-i!t0[[!oa08Q26h,uDX.6s-al&2622r!'JFHdsP#YO9iJnE4#K!`MfL$SSJDZ]XXEbLal%2hUJ^@h1>]Y;q^Rh)kkRR?fFEkL?K
%[FTWZ[[E_&P>eGU5$fZ@@VLm+)GP,qN79M$;n6Ug\bh,Y^RJ4+RNCZ1d.BSeJ>NR/"u\W?oqht_"uJIS25'2bW<#_Sq1>V+<s+rK
%aVrOud/AGkdj&;]R7bQkY^>]Qba7sdG>mfL8%B#`E$'DD?$.Q#'OUe9BIK5nkl=.q8T%?lQ_]7[HcpWS_-<K?e"ZK%"13I5.=FF(
%9&HeBdU1U$l%t*:I#bsDl$k7a9J!D$!s)OIKW5J'lPKspBupRU,!\'("a#h_/@4W0_$hg;$`m\EC7?YaYbM?O=@@hL/eR2;@s42O
%2mnRJAk"Y??m?,HcPoG6,'*g':5"j=j<tY",0I880>t@f?5qrB&_\0WTflgiZ`A/X>ame+nT@;qQr-BcH"rfj:7h8Rf+0lc3d&j%
%q/Y(-;'jQL9]!UL>iR>[L/;KY3-utg12*".*I*FWd!5m+7G0I/AbHODf13Jt-,gGf=@_uknM\O<Csb6h4>%qXnBhh>EgNm**+@/)
%g@M!u$@@Ll5:&ZDcYsb'i5?1+YA9kAO<A16?NhZ_+le_24!r9A8BEZD$@-6j9+cpZ9V134\1XJ].!Z"9_9"JH.Pr$c[&!"T<)3TS
%C,+9McO*Gm+TQcl;;(^VPj!YQ3AJjGR+Pa/0S78.TD?*(+X*ru%oG1?pbC8G#8$sY[Z<5F]nUtql%*$04,j,BV3'&XOF?"U>$0?c
%c$eIcjl(V05u1PF"+k<"N]V@?8*(cNKuO`PWh/]tGi+:<n,!Z]I33)\DAJKN1Wn8!d#B,KYkBt$<&%qD[ukm@n`'X4?C_(C##T$/
%OIBImkPr/mdUtNEEF[p#)'4%^-")cpf7VGJf&oQ%eKO"X6_-QMOVf]iUZ>%A6.B$o&S2m*J@_sKQq#!?FWk8WD>mR]1i/^edEg@[
%[e!>\"S_6b?/lYDn7^Gq*a'm&b+kA$D8fLI+O\%b![:?,qd_RK*s5OGLbtc_T$XQn&o$,d!07=LU!\D@:jNOP%H,WaeaS5EK^`Y5
%ddF4An7X$"-EEj4(pFpoUB.FS$-a;8O![36C,M5G"'.eb0jlkh8-;lp'<2nL>H>CuX&19?J9j.N-4Q$Ff$1`.KrCoKd2uNW["%gC
%\/`Yei<_=+drT-L&9JD#m`M>6D=1![/Ae2ke9jS.+.VT.Kabl;&hHEF0g*$F6>hdc&%Xg'(^\=P*1'o(1Qa"N8u)JeM):<bdLUR.
%(VPL2ad'iW>"D1=HI;bG,=&"1TEn3,'Tb`#m<NDm.Z&o,gq"bA&e.q1]&]0L8Mo4:GELX,-.-]#;SP2J#&LG_AtlRZNFnqPBSIt*
%nI?Ub1_F:?%9G*]_i`!"ETPO+c7)`'Nc]tCcYD=h%Hi8eo+ZUM*Y%atnn8kTRZMeO'6O%bmq?!4+V9]hb8p:^\JJ*VChZ1EPmb8K
%JFL^VfsK2^er0]l##OF/J/L;RF#/jQl,LOQRMf0JNE^4ld/_gc`LjGG^l/AT#0aS)FOBrjptO//T]SM7M=SlK5Atd&j4H_:`]^"u
%B;NuU">h#bqm,uqH460\i6d&ma+PpI?P\,5n7^HhA7H)TO!^Ts+(S!Lcp3sf1U\ii>hLTdL=(%@%gSfUnCP'@>,K]+%:'^_!Rk^+
%UbiuXKgru?ZmT;5>e8%@oakAmoACH8C^FhEFr)T\\$?TD,#(In8]18%l_,LYBm>`"9cc!&-?LqUq!7h(#Q$ociN8XHKfHuB8u$B"
%82MmHOcV?9_N3M7O:u#?m0UI1Kgi?4s0p)S%ik]e9gj8paV#+c5"_RfqsL7=rBd91SZ^=QI-O`J9gFq2"7s7t1cV\!:+a9P",CJ^
%&4a]m5m6>sCh+P<0db.<aU,hXM(!FYGTOP]FF2L0L):EYd#935X(oLKpeeZ!)[@Me;@ZDhR6rdK/'<AjZG=&s^oPk.5.)i1$c*gO
%NO8Qh"ZS=NSbE;bI6O?tR_"pXKJoMPLW8KeT[3[`/c,Skn2?sCb?u!@-ZgN7ARD[8csY,QDI9%N)OO?c)$:NZ:hX6'nUrer."s!7
%Rsfik:RFtC)?UW[E+iWG_1X;X[Hn8bi6XTuktbm_$BSp*H;m.:#C;nGT;N'R-Bk@f.U35?cqr/:G.D$[\dY;2m-/p4:WU1XHSj)_
%L>gDR1>aqE;*-_38?!=a1MlpU@j4U&"j8&4=l1jmOg0";kYR:iW]Hf!E^g0(:aZRIc[ncM#tLQb7)BCj@4,]G]Pm=67-b=1B0i8s
%GTrV>AiV/($tFB%M*d1W&o#?rXhI)3l/WDIRlRM3At3!k[hge7+D"#:i&Hq;KIVYHS#t-,D.)%gW0[*E[B(aUAUC.Tee?T>S>_b0
%M/$0h<6KT^>.,fYAN`mBl\Xn%0;.I^'@jC[W0[*E[;8W<bBfmdee?T>4]*fsM/$0h<6Ou'[B(aUAN`ohJ4ej=L/aUt16oj:`,>-N
%6c.rVPm[mu6]=WIb(*/(!/3u()I`gef+;K@\;!78(Lf(42Ss>H"IV(Yjleq++%D?3rBM]hlN\]bDDrn:K[r03Qo(rf`fP3=5UqcZ
%7nBRVP^/;eEMt_XqS&"p9+B-'B_.)oF>f_E*[l/;d*f5s'^.Y3=[:ELCg9Urdq#SD:u&S0'/2K6Tb>B:2[\72CkLraL&u-2j+[8"
%]IT'BF`Ib0r`>7R<eWkTnY&2o%tk?h?Bm1hY"I(dfcS:Tdj^RKO5#)DLg,^26']T`W^Y](PFh\NNF,1lXs2c07ZKH5'W>h-N_Dk%
%[")Ld(.9/(CW$G+TNf)(anMX)5.7E1rBbuu>6<h!;d_[ZE[9?(epABm'dbm(-D8t'5?%??=WK<T'JQi>-$.2>,Hc_2`&Jm-Gd!lU
%T;0gKOR*t5ngImsa$%'2f\M`UhdcF^Tb(r/IZh@IAo#S1'_R3*8./AK[B:l!pBV>S;9ACuP"DqAL""Gk73A-<>o"*5qHY(n1qJhj
%:!B<Q`bF+#*mVcr#)+B;7kbW)8&u/k_XNme/,rRNmB1N?63kK$7_n1/5`Ei$?3Q0F*]sjf3$)62M)ZQ$$>D=<Q3iC-*jc303$-KQ
%F7=]=8At%;0M'.P?n"XbnPCE#`$o#"+Q>A<PabD5-kYXBkrLU6(0Y5**[Mo`\kfbkM$m++;<QB\*ucgnV/GAiQPs0;]H\$/HPMAs
%*r<eM.Ma,E=Y0[F)%t?5PC`)#B;aiP)$fKkA/lZ41=HNO6Tu7u+g"I,\_<G,jk3@F,@hc#i:>Fr1QQQH`m*&jdILg5F.#JP0lEfu
%%YL^N21UacZPYou)aI:PJ(e:ch<:pHEbfHibtEcU=i.Q,[S$ET"nat#mEGWEQ\nuIT!QL7!c+G?<Cl0G5e:IMm?ign:L1h).W2fI
%F"(*4rm[t2$1"&7,44,!j3Kph&lE]76P[(THBnZ#5EnUSo0Kspk-gNYctDgm't;t_>778W`1L6+4CMH8>GQ\:6N6M;UGN(IQh6o(
%f;!@UF5Nq_-At@ZK627\Xj4oVViGrb5L8_'9>.#uYF_C8K]KS(p2,Ze842(!iPa%$ML2]nlK(mgM41O]ZJ^/&mV#72!%"ZVU00#'
%>oVp(U%+h&ShMb,XjXpX!<J/nr[":MW3HTbU[92e!&M2QD\*TodN*+@a'@sM`W[VG1TN7kf%3e]Pj6f*KQYOVOnNXL%sXDXS&%r_
%e)H6h/A<oU3PL0g:a$;8#O0[*>FLIu__?WhD*b_lQCBb3Q\pdkeanH2c#&U:D$h(Mk0!rt7<K\eCn^ZlGL#=FR]ZA7AWcs7?!VNP
%F0TX#23:;R:h.[CVdCheVJ3!#,m;UP[oM.k.=0o3c&u\Kn186PgaD6YjnK6jTL(Qc><6+$=De-7"HM]B't;uP=t2?m<6l2S-+?n.
%[jd^&R@=]o5VGuET9utG!3>Z!ZIhk>l&IX1@kRHa@g\gO+eX_i.ca](/YGY=XKdG$c#&SDR_`Xbip-e:AYq+E0kXW"^c!J8\tRbM
%n*/8h>FLK3:XS<bMYem!/>\X6V7LNJKPetNO]G8-a/]&Q[m\^-#7blao:pY>f_c:BIG4V?Fr6r%!nBK/b`.D9MTVTI%5q&M+hXNs
%lt^cm/sgA&k;p?&W!Uq$9,)15ePpl&U+s)D2aqP\IiO=BidQh\+cj(XIsI+Onom='^j8dX\dLM$cT.e1\qra6KiB<O5tJt:X-XN[
%Sk)D?6Ri_96:aOkFE<5!MMAeB`'Zn"Z4X\mNRL&sWQ:LR+Vjgj3M[jM4bQc[7&,8$K1#Tae:*'M`'bhN+r,BVOGYU_*)_p74+pS/
%p<+VT+uf*5;NX$$QpW@cZ.+c\'Aiub*)b2"?\a`#<;tk[S*C\MU%?=@$+;!VDfrVWaik(bIEtZmWPI1#3qmCYK^Oh;:9_!AbR(^(
%Zb#lJd(oj<F*mWn9g:7:YjZoGkeI9GGX=?"<+`YV`an)dqT3JmK2!XEDQrqm0Y"qGr=,@F%2nOkggF>9YBunt@&o*QWuR&/Q[3^S
%[0W@FoYbr=[Uq7i@\T(L3I9[H+Is-@d1bC<Tlg>4*O*j5'b(9m-N#7q`\nqU92eAM!]u-9,bTjQMM0J>UnWEL;O\qJ+f$=F*^V>s
%-0C;H>hqE9@VE,;0VH59kigV2#_?/.#"%6kMa$VF_;Xk)D#!`_"[_,KQf1a7%rqBnTmRjZMM0r,afOnf#!t!E\&4he>_[`H;]l30
%@NYe@E;3ou):uPrJIo?0Ab]2ba5PqA'F;Md*<)8HlX$JS#U\P[plA6sM8RP5+Vb6<+VcSsKiCb,a*nMtaC#:Q84X%1("69ka,l/_
%b-]24'a\\"U`ps`#cVKn9\UNld?CQ!1X84<<(r8qO4>(FOha&3<(qDW-\5Z#Of4#E=uReV=G\7I%&lcgRR8R!KHm9:+ZY3T,ikI^
%.T1K_&5nXP(.'K+15Ah>0SECNj9d%F%JdZcPA!0Npcr`?3M[jMB*bJ-P&pu/."@-V*Ru;@WCWEs+f$<k@go?X:^F$k8.HdX)4<iA
%'%en6,'Dra67Nm/>&f3p`+1K:%j;[i:#7e*Q_^'E0BEa>YA'8i?;s',k*F4bD_(G%M[E]_0.BpY^"i4qoI:JIY9gNdk@s%S!cC^c
%rOA5$lAB8$Xc^m#@UGMeKk+Xk>FAQ!X@9J[AS2CeoTG5)e#NbC?;'C&ch#:P7GO;;NO/AH];PV*OG_?or)8B4MY-WX67NUGk)bH/
%c63o/bTWc++_M([R-5$&%]N!,#pC#iZ05.sAYP!JQ_C(6CrApkUkXtg>iH`$OXbO-OG\^e&5nX%S3nb]3/(<WXG2gogo;b$SVSp>
%6Ri^N6V'X4/=u89Iu=mVgJU[t*Etm%7I06JBK_-Vd#W6=7BUV9WQ:M>67T:2F%A_pL*79lV[uaG83_f-,VY"8MM,4XUnT$\!ut2N
%PIWq)KN'c?hdT,FeqH,[+tI@5WQ;X^67T9UcQO#n1'jl#3JEQP>i6T"Oh`K#<9+&k67NltZS7/6oOKAs'gaC=Lq@q_3cLYqX<27"
%0Ene.!;5i52P-5me.6O?TE:I*JEe-;!?9$:&)_-1H,,SGh2c7VXo`M(!W$f(#G*tP95r=_3"IDMjoJ""#+h&3c3%&*1(U;eoQbtu
%29l;]i&kDH]^EhQ"BQ1Zo72QF9QYeELK$,"od:eYOha)7<909b84E*:e)okNHa(ADO]?*'C6a5g6Rnr7k=>mP&5nY^'Os0Jh\`)2
%W*Yib6Rku7G6k1h--dYKWHr1_WCZS`*+8IWDM[Zq;G<sQf9<"!7T<p!Ee0u2"Bu/28<VZcP5Xkg,5.6g.Uo[q/!7-K6:aNtE=Sth
%g(?Y$P%8bBWG%*TZ#O#Yah71jQF+`C1Lk!;OBCXt7.456@s)jSkfM&-Q/s-nljaZOEfaChK>b&W81a?u@[R`>GJ.o00"ZbS1*7cf
%\!e28RtF+&-MFDi#Dm#9OB@g$`3L@.QH_^)=Ul(fEfaBe3(T8l@]rpu&j3U[jt[4A84]8o$jiiRQ;!QoO>rSHJTFB$I..eS#cU?c
%SBD=,-1GFl:ESo$=h^F:n;jmc:mD]K<$^B/+VbFmB??6OoPHeT+Rr^pX9)A_30OqP6:aO45Qs98b;0B[2[Nan7e[uXJ+jV7#a\?L
%IpO:IT7Ib_Nf]I;7KUGCKe(+19,Rfo+aAb:I4<c.E1S7l&AJa>bus/=`6T!pcg(3B5SZTVG;5H8p`.A9p#OZ`_&%9OM!>6&\[%8T
%HIL52oXT@tD6)#(T4),_"QPq3c.K(,;WY`Gr;a`RR2(&iNJ&M%(?^tIlM"sqffnVdp^cO25;o9rrE'7*hLrR'L:&HP@/0-`-:cO6
%@#15P;K]uc*Q&4h+(4m207RA3;*+NbFjVU[]4UE[0s!nB!5i`cDY^q\,!p--:NC*fVW:T`Y2V;WlQGdMl=V0k\gg;E)R^N1FUW'7
%5JZdC?[gmf,Icr,kuOcIA$:o$"mumTr:WX$Oa3t8eB=k<*]*Qu+BH]Mhh(Y!O5a6(K#iiK5]+gbHj)3'/:@Z\k?Qb^*1abH5';7=
%?IY4=[F)G'3CjV7qc$d7?Q)HJACGC^1RHBDK<G903pk/MR\p[fHI8hq<N)E8O-':,7(,<[\1e.jlHCL>-J.Nf9f$2-(%od,p^1E-
%dEX)AH0PYR'?a`X%.U9q@E)V#Y1FaVNPE;gc0Ld>U_h,;=Jj6YVFmrF@J0-BYD.@V==YR^=qsH%b*_"afe&3S6Rb&4BalN[ZOBKC
%F3E#5-Rm51/p[#Z9'+n`4_AB#m0*&d6HKGkNeW^>if8_UFmb7nN=Fs>J>O/Uep07k8iH0_/=]C)./R:[n5q*l5iJtEZ@To'Tk'_4
%A"dFa/#&_J,?[E%a[/=R&F3;e!0njpXHRo\PcV3:/<jtDo2mLG5#4S5TX!s\GmPcYF*cX/40j/63lQUM@ZNR\&'Q)9Sdl(Oah;\@
%gmpTkHN<GS$lJ17F`JRMbadI83gW/lk,Z#%/T\\q8Fd)N'E\R746krlnpJs34X;lQp!31qB]J73\N]0<hT7tHjrVW.mcGS>W>'c#
%F8lj28)oL3_@M5fUp6Stn"E#BYu%`WhP9$6hZ8;-@R4M]6a6i]_)l%s6cj4K5Q2n3IN/LA%tZs!P',WBKoun`+8iJuTk'_jA"dG(
%^L<8R!r9lg`Wl-47-@CP>PaBk*@(UcC(qcuLZ'3q$\s9Y+P/hRBU6MK5].6s#6\_2"/Z&381d8<!h#nSF=r91JQ?dbQ3-kI6(fZ7
%$;c.%+@`",=[3BkBEl7D5n71iJ13_k1/$T=+LMp)$Z\mkku<O$#>FrT)l-=r"#n:faZ;H'6HM8Ma?muQHB:R@FafF+P')A<7?\)f
%+cAH!-pe\Aeep<<O=Q'K%4iZ\r<`ig6EKd3!!8lk5joO^(AJdd5;Wp0/8cm^e-N>)(CEuB6HOhl)G8R06P`9PE/#p.XL!X4PcW>g
%/<ju/%9Y)^-OuQ\2<#24b;G'<h%GJo88;NB"n[bIA<e!B_$#<OA>*NWd0M&aoH=Sg)u)eI,t]>d\?X=&MU2u.elbBV8esrHW!^8/
%cqq$0&;BR-PjF]/jG",s6iiiZI%Y[qa+Ju4Fmt&ra,O$Y()oh6JECF^kHlG@j+16AG21QW'R<jOmC5S]os.fl)8!uW\@9-(n^'^:
%a$$,aB4i&)ZruoZa2mVWPDn"O,K\$o32TV'o!79PLhL=M6j(mDcp9Op:pSA(Z;@iXCh05M"5Cm`aZA8!,/cP"#Tt60"gl3EZ9Ua\
%"]8YNBII"S-o#2%FG*2W6chCRa?n!0lc=[t#22pBVbj\E40f^.8j!.TQq%1Z+d=O>4uAL?@"%gAg(Rq>f,.,'90ff@We#^(W)A^6
%PcRfF/<ju/+Sjl$8Ou$l)[crpTHX-ln,*t2-0ksa\,OH:Z;@ig&4J*(PjD(5ZJ_a6N<H3.OXu`uo8tSgC`k!+-s:%*=bKnT,QS%<
%UjubpPcV3N/<jsY-!;YLOO-G.@OTn]1!-OK;Nh)TbN?V5cR+pMW#_=ThAd@uaeoY[-inWFRfac*3iN8J@$?JGF"*,\F0Hl=6.O<;
%k.mof5,gLJaX39<<jG<9'A?^MF<u^fh<)KZ9/`b/@nA$_A1[PPK'?6lA(_iL`*1UQXF[ciTk"7Ba[4)RhNESU%E'P%,o\g9(,Y_*
%'Nn%/Y:V_2QRoR[TWSF)a&'(W?I;TTJ\Ij58g0a[P'-b]"cWro(-q8k9LHo'KgeAN7Lk?2P(eQAKq4M]ikED'OAU-GZ67dd-s9rV
%BIMQTAC45ZOAI1?!ga(a@gOFhC_dI+$Zm-n,ocV1(.pJ1'HuhACmK3^r6"^A[4Gshd+`11lL#&q&t8>@lPXHjStVJC%(.X!W+C=1
%>1PLZZC[b-[DJqM[V)OM3CAN"2WIk_B;gp=Cg'uf:s8P@[B+#>AN<+0gG@?bStVJC%.tjJP;QKN4#uSR-Tbm`_NUOr,NHmAffc$D
%Li].](BWh-:h;eXL&gU41aLM@<'qe!b9kH2<SFR,"S,KQ-\YC&^h^53p:u0`1NlQmh$siAK)u5!d6:?d5_9XI#UChIO-!+*lgs2I
%+[QL?LV7)ErC&hSEg:WPH2Gj+?dMkB__pu_0o@tR&gUB/nO)mLe$5RLLgnr,_]Hc:IQ8U%8kgqQ_LIj^1\uuBa?"a.@Lc?[\Km<+
%\0n(bkr,<?Lk`#&a!g*>b7UpWCZ=-;PS`s,d?&MH(nFbmoOhKpL*rOgb8h$p?QZ&LdPPlXk;VlC5GG?;L90.M.-<bup:A`$[\0g[
%L919mkcCUE?7olOV7rV+Lk`"?j)C4N-ntOC\\X-YZ(S:V#$0W)*,b?G+^@(4+$dL@]*&8:GHB?G!c@L6lk1!<FpX>HA$*0TBTqmo
%Qa"8H6%`GMenSuO2YetK#n'E7)XLA+<a,s=a`k!_=CC"Y^cU+^COnD>/p7O/XP5qo>H=k0g>oluV6[L%AS7?][G"fW9tlNk_?/K#
%&,4XiCOnD>/p7O/glB9rXOYl'D=V!!&ep_Bj7"()[C&8hHm^u0f<1o#\hTB'4=INL^FXK5e&)0+Aidk_#&8HPcPZK2=Q^62);+0b
%Ph?`$27ko9bI+<j*FC#u_Mgg5aA^h%Y+*AWDJQ"Aa^;fW.GqAWS@]$Z*G[O'+Gb/^K&?nAScP(si=3qcOB)Q_WAWa[H>Z[)r*XhY
%iD]B$j!6Dsn30_s'gJ<&_UQi3Y5g[c2QM-4Q&Xk?Ln78<Ca973W,,rK8uQRge61]f%>p/3^kej).bdLD*\&,^JK?*f,TPdUN#h,U
%ZB60kTsBe$BVD_k*9a*%NBu^#ZB8naTs?hT7DLg%@"cZ8.bi$q*\,pcJK?9[aar:S8.M0:,q/KaBO4#::ZOcsA-(c,LebdgN:Z4@
%4-1HGi?08:L$_]WTL\2GDBOIX%W2IK?su,`LKW7>:Zt.;3OmV")[M!GJ/]?Q.CbX?r]G-)EW\ID#:/AT*5WB.^`<JNJNH8Zk.i"[
%q1HI'5RrI_*LK[BkY'io&'0;C1`=tt&QQiA#K;-&FaB^9b!m_N#?#s\FY9-g`I8>O3^=2DTm[64^#KCXY>,]ue6.A8m4hSKd0)U3
%2UV`g[ri"BD*1)jPq>gnTsBe.kWuJ9-TIemW9bO%&B5:n"VGTm3%3he6*MFR$A'mV6F.S&'QaEX4@&u5*"L-TIpb-a-O<bj'=n`t
%%L9E%$"D/_9fOQ]#su-DV>iik+5dGl\0"L[`^"g$#[ML2.!6@c=UjKmJ^jap+BT(HW+)]CXn(n]L;c/BVP&^e2Q!.&b-lsE.N=e-
%*lcp$JfZDrR"?A7':FFf>n`'H&h<dtH#p6H.n7ZNStLkIp4O1]gN\;U3DV?'GDqc'lme'WN&3)Hb7"\'"Lc\\"-Ve;fc[@aau59Q
%8'4;]TL[-_NhAnb2NFG#b!qDa8'3`M+IHE1"@c\-Q:T[jR\7]O7[d^QcPS*8(k<Y\eS0UV.2rnZ8D-HGoLRY+'>tq(R\5GT2O`P,
%/Wm>u-KpStNER)T_,_<e.GGL?iHpNJ]qYmc>m$O'7&RGbX.<I7e5*O_T$XRKdKJB6"%s3@]WD'rr!-7B=Fsr"4eW7GQaP_*-&=E3
%]="9:"MotB_j_C]*c`e!$-bF[9/&]%[@a`-_29c?&$.b;"Mot*65:^uCVLBnJfZ?YBnD-r:!b(q)b\O&AKsjp,@r)mcm**@9@*cK
%)bU_cB*h&7`(8QNmt'R3n:3W![O8E^fL?O5:gYDX)c=s,AK+Ln@q$Z[E'i_Yfu=`U0\F5UoKSlmLff@%fglbJ8D2(tJuuF.`6PM?
%;YH+rkg?/f,`&C\"?fYkYlm3f2R3JE$p[pH5'&5G&.n"1_R-L'1lIT8bWi?05S<WZfq'l'<aqlkM'D/gUQHaVW)*U[;RTF*4]419
%"?fYk;?T,_[S[/>Ef+6mY8A_CW.,j;)``Kc.6F>HdB4<8HUeYN'+5L?7+8Fn0^\H<"kD,IPUEgE74EgPG5suA^gl%5pjfg[-!1A@
%:ctEZE@fjr%7:\BIdXWJaq0447>ZLJT`@Fk-596ho7Sk%&NY-j!k"URTd]LC-5<*Y_M!LI<K(G@(48@Zo[)(.&bJWIa:\&8fuOc4
%8D-NGoLRZV#5";8n":C+aK/it1pR6IE]!@',2-P&Cnl9$Uho+EH2M5EW0+BF&*>UOOUm2F*h6B/Cu]edUhh<0H),7P#\)H&fcolh
%4;*df"!K4i/Oml@SsMsi7REJ3b4]?]!8H^F&NZ4KfgZ5<8D-K(njqHT#P1L>+e]7:a(DBZHQ-(q#HD>q;"Y<B)d%:hWfYSD?s*t=
%bO.X'X9Yb:4]!`b"4a[uW0[*AFf-$^o<LMU/^&\pFL^!he-ia:T$U/8=V"KTp-?$e#HD>u:bCE(eZp6pQM!N9"/_a#));?r<MglY
%\LR[lNnf17#Y4<S:c61YJu/rI'Eh6WK!$9:s)SW8U7c9-,]qE<;/dcH<^Dfq(r]&i;RZ,qi4p@hJoKZ9$+8NI-jU@q"VL.n*,,O@
%f+2C!\pf<c.U/P.a?RQVr-n1A02Bd`ZW#Ls?-lY@UW]j%;9XS9Mrr';Nuu04f<q9TLk`"ca6;U;M]uV&9u(6KL&@If=%#F,rF9s?
%RR9q!V'b-Y.ea*p75SP'IuI-_XshGff#4&B_H9Rs/#'j/gA*I\3W*nc:6_1IF/,65qMJt-3dlr^bRKG7W&8RX*ee3rcrWV&f(iei
%F84jQ#,p5Y"m,u:75SO\5"78^?]ID%3aNqJ?<toZ6poP[EOa+l$M<ii_kLBDqMJt-H92Tqq7ci1T$Jh[Z/c@!c!9k!^*4K8:u./5
%2.&4Aep8?r<LqN=7&*o=>/rL-2-,VdCohgQF#9>^Xk[^+C92dc\::r7+#EbNBJ`@d\^u3tmg^E??=5eaN4pJS2!ikTX>O?B<[LI\
%F'R!OUT]JCZa:`UCVFPb>S\/ZWR'cYU<tN/j^.OYA*(!]J`W9H=%&fdg<.+k.g>col0^L;pc.X.rNg=\@G-[Y9tkAD>S`-nl/T!.
%rNC%X@G-[Y9tihE<R@Ks,4!L+8id:&6;KX@$m;GT69NGMYp'cCA)p6l!(*bXTF+"^8Pe!jm.ss>f;?l:I#TN[dq*A*,#<(I=e_fp
%p`(5i9)eZ%:&0O'jto9CmT?OS<'dU\;[!KP[Y%tPTGe2pOOaV5WA\@4H?R?3dCp,on4/k'TD@P3aI>LVD@:[D.C]dD?K$=VZ_JZn
%!'@ulE903rkh;Y9ko0,\4h(tU(Z-djU8.8U.0V03CnchaT!6?:5UPBUcem!BBW$L#LscEJ;S9$9J%F=.!#^"SMO^VCFH/a)oh=Dc
%p^sGFKp/(R#L&N[Y]A+N0>`bH-ng6QilBI#ph]-lZ8TXjH;71^UWYUIa#3inBINEJ#]8A_fnu?e_KWAm367@C3doQ;9rXdE2[<We
%:m]WU[aP<<XQKR^H%%);YM9@LNeA5%58.g]DPU?W"5Wa(Lk:@g`093VMiLr`TOKbFP(Fjs[GPX@=c[a@=PjmB?JmRho#=FH:\L#d
%i-E\g$sh4Wi9#3H",?E5LYq2;H;!Gt59$Z@g9BA-5KV#F*`+(^;K%17$#R71]ln&%Si5R/;P1Y6F=2@IV!]f%KD?BiK-ahq&Vhjm
%,B*eY,*PFC:nZSJPH<5^^1>WtlVU\T`dnm3GpX[9T(1L2Y,2$=;`aJHZD[QC,Yb'1M>DO9#3'j1%7[/Z6mRhGqLm/P>:VAf^@q!U
%$ArHc6Je:_(jY/?7bGO..mJi><:nX6Ni^MuC3-YoP+L+2CQ!Qu^V(qu4Z\VqLs1P6Iag,8R&`U'Y-*-9b,UM7p4bk#_u[FQI*s?V
%^YFR$'/fJtpU)A4D``rIV@_F9%qtBD%+RacY3<8W57AirHu]'iD&P6$hM1j#P<SR(AM$WS,gY]#TYn<<P`_l`6&0`*gP<(:(I):R
%U5#_b6!*<M^T<Eh>"g;\(V=%(L>fs\rXgB7L2N&$Wf>j2<XK*,r54jVCLt5Q.TsHa]kieY9&M&&Ag>ufq.fM@,-]a/$sOUG2MpW_
%I]>.aF/dsA/.$.kQ)hDl.rJ*hme/9l;%1*OIciascQ%A_Q^dED>DJ*"9ma7#,:9X4P'\oRa<&A4_$X?=,BdOFnJ[o6[V5j)NG%?c
%^-"+f4[Ea!Z[1188$0&3:90!%TO*Xlh>K\PdIYtUn2b5mX_g*uFMEY-.6I%=s88@Q^\NXLrr-!6q2[0nrRoNra1&NBIJNctrpf1D
%dD'u&mpY%i8&bAUb%&1=2A0O#daS)DS?dUscD]4)HbO=YB($%>cpqq%N&r;3L9O@jRap!9e)afIY[WV4o7o$^4b$[u=WQLZXA*!1
%0&5$sh)e9%+1hp\gNV8XJ+L>\q>"t.j0-4]XKRu*q-SUBa-WFtn\=usTmrOBp@M3hroW[aqt[F&Ieq7FrU0Gnq=2@]hgYJ"hgG1q
%^]4*_IeBU'r$CV-nEXGpIJ5u)jqjJPL=a%oJ,?-.IeW`SrRD]YI!q+M=24P?VZ"!%8GVR9rT;?T<o<lTO2$&=:Qhko"9%YsqBbs5
%]%]#-mUsN5X8l2>2Yc]!:He_LdQRj7m'jb.[>=\Tf>%:%GJBLqoh2L<aLP]rCJI+EDCNo+l`nmY@s(+BIeW0crUXAEg]&M_%]eD-
%J,]=p:[RI4E7IF5rWh$aqr7#15Q=0snV9@,qKF%`NTG@Q(esbNJ#U55E.M#Is7!'rI.rE,l2UC2n,C5ns7G.A<6Kc9RcKNmqAF=g
%s1&Uspp[\$-k@89rSaN'QS4EoZCHF65GA@!a7K/T^K\\TQOrP3:P*e?#_+s8lqM^';7-4i&1tRC_7Mr0H-o*Cq>]`SjnC$FpP1u:
%OD"S?6n@^tnEpfa[$-)jVf/lml?a/Vqno$Bm2HpY?Rsj]6@KlJIB>iao!?VOm@\)#s4'R8=u3H!/UnG.IAQJk>KCa#N-s`O:%*k/
%M=$f![BEkLD+4?F`nJ1Sf"/WrbEgK3q==@Wl@8j%m>o$\rBIsnr`B-oGCTK#K)a="0Zs2qrkD8%]Lq3t8,8s5:ADlWC>g:CcT_*;
%G5n46*gb+TqSI4NFBomZOq)!d*>BX\e"*(+i)An&2p$&%J]Ji0S3F'n>%BCWW4Iuk8&hIQ^ADB#H^:m#3KLd$btP4V>Um#Pc]$Cq
%jBOl3n5CjtR2X)C<Y(`P]Y]Pb:JET;B[U*s9+1?hHt`"FruM(,gt=phhbr\,^\6'af15l4?i0'An"YB&43:-^D=SLB\Bn=]m<f;W
%jO?Z]npJhjgJmX5.>F7t9fb)fN@L+S:I?4L).sn\=uCEF"MNQpZ-&uBKT6?P78:b&A5,;S"iXWW$WIUtF8e#iO;=NAijI-6>?gjJ
%&#-g^cSsWB5Po6jI*:@;R(%<SE4l,G+62XIRI_Z9l$oDArn$=?s6kU=k8+J%rpkR<?cU>CIe*F3pESoerSf4)c)")Q\pUm.'m_C(
%=,.K,QX;O.HKM+;:A3+8$b<F6qdf7T_m:Ra,0kLaHKrUrd<#b"So5&fC&,1OpsoeGMuW=L<Mf=t^(4-&N?_C=I\gmhVIqT1J$+'n
%V^)`s)pA0O<<'hH.:NA2LFB+_D[g/uYZ=t4pL!D&ETS1EqmoRgfe::gB4?cBb[h$:dLYBU[)e#rMtND,NJ*[HdVGicRD$Yg-q(Bi
%:c4$@rpPpcZk-_RGu^^\r<C?t%q]h[CVE7hm"hkFs*p#15"[uq,G+_+eGlg5M*gg48'U;^cfY-q]1GsBgtsB;Sn[Sd`H+%cqDN4(
%5AZ@)P=X=(mu+F*,^q<6?Z-Q9Imab"%dAJFa-*k\#dR>*h/>QeY<5P9b!lc$DaCh8]EHld,d"tu"jt'Tl:.+hhdWd;jb;GaZu9N[
%IALV()u4?,p6>u!$fKZSrR:QOaS(mBA1JVd&\\G%^6VBsZ]X.dB`#qdHYebW`BO1AV:I-K?TQQN:#a4:kO3b]#b+\o$(pO;NIKk0
%b.,h`EX`Odpd76N$<qrX0PpDb42Y,!Z;9LmTCKGE+8#o/I4mQtpUPlq]0C^\nrBokL4=Rk2Z0i>L@E5lbKk.[nmc1K;LcTTnJ>I5
%rjA*,`Enud!rptIhdeCb=+T<Ip%"+Ma4/ONIS?:sh7^;^Ql;DU*)u*23iHB!/j\oM<'@r*8(COV.l&"P&$$QXLXho!33:,?mC6>8
%Lr\'9djQmi=NdW$^j>E[XRM!4lE=LdYGA4Jp=HJDf@![Vl?+75"$b4YCO]\2Yifak9)KIr=lU:Br@+e[r7t.dH9900NNW+,h']g"
%,B,K-K!,\UX[bZpfM@J0KQt;X0*jS7pqqJC^ILe!KcZX:7R8;ecEbFW:HbU$+)?S=TN(.,_i<Dj&=nQeOrbgV2D3M[V0hR,N<r4Z
%9"&q)cBnEW1qZdQjLt?96aHEb,UVkS?M$ceU-Wa\WSHi/%DYU1@/O9;N^p_C'9`YMSC,H](_h67<FsdM#%H\dX<(qufgtr$?L4?-
%:OO]3$,HD8lf]/8VktYij`Vr9s&/Y1+ZXH+GlbJ;P%7S71FXG``:Od1"K]Nq\mIF=O7q7HNs9Nt!<t73]<XL$9B7tnL^u.sG]+-0
%S)*tGs1mssPj!,GQ\\PhmTuJ7o?->>d+'Tjl*sJY=GW.\%6$uS/A4Y/;Z(gt!fc'HT$C"*V1SA=^<ce1RF-7?c;A78&E7WWA%4uG
%QI&'FZ>2sZfuOLm0FBo7f7$=bO@/Z6KbsPX*Wl!s\t/17KnQ=,STb0,C;mB16b7a=;fe]ff`=^s0V!r>OI77P#=dkW>UaPFPU_d%
%UK5\R\nFlW7uNI")mk3%AER_VEUD)FijO*c2W*00YCof@T6!<?"8S3)LY$CWC5#3%k,CIQj;I!''^-sUCs>ptH7aQe.'2K\J=s5'
%8OoJ`;;$kFdkN#"PSeg?c?41Ak`E&phYGT<'l@LRXr#=MU)9mhQ^c:Z69q3Qd2]iu_FR!0K*G^H?T.HZ<M[]\7=W!cdcRb3\d-s1
%s!RQ^(c(/.T005P@s"7R(m7MAiHY_C2YO,n\^c(&crn[f^K%X(\[3OUF^Cg1B<HG,=!24uIZtNZ\nmVeq6H.VD%iL(4Vms-mO"(%
%mbu<@dEW)qkj(Kp:6&6YjYhH+IM-lP)egb2!N/(F4oNN;e#-j)=VSP/ZH%=UA),48V.n3JW74L?4^F?[De)B$VFSDhWri,YcuQIr
%;L6#0nJ4+Oae=7\9g;@tM5"4Yee+.=lj;\9f-0Dk$8m0N5C#T$0YH&2pZ75I_bV9pHR7c[jD=^1e@_#=^?lUdO.aLDDo`)P@c[k,
%3C226'tp2-!"HuHgj:S#Sp"nK%l&Cp#e^[maV.6:poKq(hiBK?r:b/ZOu_$Vbbu'K,]BI):<Uf3JZ9bJE`p5tk)6,J$I3aaVpkhL
%BtJ]\Wn3G?'GmX,&mDm4"<BL,gDs@5UK'&QoV1]b)`tV"VG_1;cm1h$4GN$_6BN/2d3A7p"NoSCkKS'Ed,SoBh2>aB`ffMq0$8;N
%=X!oN.D"Tb:/sb[%>)_Y$U'S>DKL]8eS+qF6c,c"V!FZ>..G-):6GE!;lc?4kVJhQ'O2?XHR?k[$:5>C:P@RoSP'oU=@*gVimuJj
%BU'Bn1Db6"Y7r>EMkIu<1Q@cFgg#OFN/AlA:[W8o^il4J8Zbn%8kA_Vo]T;]CMeZ`<g-*#BVr3*O=1iUDDHX*LT-UjOS"-*&/)!^
%RCr#W8E@aT_XjfV/4GMuA'pP*iQmM.r&W3`,:B.@VOF3fP/HT<>>`B;/8d*6=@:)^Wq@[4jBgsD(I>Si1!7gAo4U^m]d6I+$GDF&
%V1TS<Q7u/u^<r:.Xa7(_5WiE&TU$<CJ<.j9)1p(G,X9a=977j?5XOT`7Fag>U1inEC*P;[@V/\.qJ49@[f&"uk>B_)Cl#S.cVRHm
%95grB/c)^I!\)+X^<Vi0Uu5Z*GbqVn#Z5D)rR.r;E=3%EB+kk!K3L[A!_EoeUKga7s0'+[CU%DAecXe?SH"[(#D?J4I_S!;,n1+m
%Ukd@hd,[#r"C4NlO/-4`rRgk4=bOh!OdVKBZ>-Ss3ua&`gG0u.h;$f@m^=c#cZoiVC/:Z/`*Yhd.9Qf#BQE/7)UO/WY#4So;DPkE
%)!.I[(%!:!9XLVS75\3.-_]ik<![?t?koXO^E,:@igb"pAsV5g!E;CK,rQZb*;&UlI(4Q#40RUaTuLOmIO#lKjYMHGeg/;J^%sLi
%:IYh>Kee@oKaK_'U1bn!:B\/>J;h=A<6F19L13\3^BmJP"eg4\SGoZY-T])C4<U!W:kTUK4<tQ<3>1ptc3kn.PebIj(P+Im&o[->
%U,;BAd.[J'PTk9O&fN:7-+(gbc:JEm^D^"#PWYkXcWGL`qkTM9*9:@pL:I1B``?1<QsNBB%kl<W.\X1WLS?<:Ls!S;r.!COq3VPj
%4KWsaad&7E#FBS,_(rBfX/-m*1S6Vh1o"FG[MZHidd)[*:j@XiF,t"%]e:Lt;2Doe%q_3sU2==r`[D:L)9oD!ld2=1%:@:JTY29l
%[VAkR1?>o!Nt6-oK&J$u+L]_k,"#pKo[W*q+un=O[R2EYUL8RbO%9o(F=Wb))d0!@A3<_<Nl-KG2HV15;[Do&[pY_N5*@6R<@851
%[uZ)FTK7,C7XpkZpb"*&YoOljQ_pkFHF8Nt,s(#EY:t:Tfr.>r')a2`hQgE_!nK.A45/*2+Z?6%Air9.Bn#!LC+';u9TFPtX#i/5
%E=fn9SQS\nf^#I?1,Sjo[KkELjY?>Da^PckOfU\ka>oq=##S7EK<m1$VLToX[$GkA9sA$gjU4k^hfZBW:t2d!eVNdt2qS1kOGkl3
%FLS[P_0uEh)oFt-Dc3n_^?n3W[G4<#9GB)_AKS:Gk-$72$VL,Jj^S?AW.E,\kM-j"Z_F1<V\OPt>69j-%&;Ei4]%g\At/ueW`jSq
%fBDs[+M)Mm4Zg+ke1EH[l*c+Y<g=,n%M/:#C\YsPJ\7H*[N5Z#-qX>;SjqoT.@)[t@Q<_RQh@V+=c'6FHDN!p9uBEFqn(!]L5N\M
%T_\d0l7fMC@tf%rgHi^mX[5@.VC\OrfN&JQX"^+PJHA_?e,fq''.uOh+?9;HUkb0bO8us.App,k2TR\P;5f\\O,5W'T?:%'"11E$
%/5h:bo?b?&7"YtV9/_,W^4l64d<5Q`S+6/DOfY:^Q!CJr&69PRG)1OJUI&p&?ldOlC6KI)/$9GJJCAl<!1ZjmJ-S!="Tgbhfq8>X
%T(\'(YKFGC<PorFU@$#'`0L/:+aVao^&[LHW*XDTZ3o[Zl'5(BXLaNO0scodm_C1OKa$.9f,,N1RD0/<JW@^h^HC>;02+WCa9r!X
%aY;Door7:(M=Gl<#[<uLqbjV4N^3nS[!PcJ6;'[D[0dYID$q4pJO'2drh9MJLikha6Sg#sJIE7\6u1g&=3*1aQl<r!m4g:Wnhf9&
%"otH2s1#Q1_.,4R4p9M>Sd:j4PVEW8>";"A+&d,Fa@M1-K.+SDgHk7g61a%5N['G$GmB.eCpnJAmEC.qbEj[cWtH%!&2pfYc5PcR
%m/=1S)a,@K5bloEQBDBHX"U9D7qf=%;Secn%V0_i1bpkU'YVmC+Vr303s\!KOd"Ke*?DjHE!@T9jj4eL-<$72k[W_:^1$sS)LX6&
%!G@YnTGCpgKUO!K:I,'tW?*9B?R[/ES>k6:p;aVP7s08eY&CkS0F7>@r+Thb@])lNT'p]*$_Z!`91YjCp^9\s+?G\hqs*`S6NLh(
%C%#UQ+`n+WM[kF#C2sVP78E1`*3.2<##T46`:h5f4nqoY!Ofd4:-udMi<Q[(ieZ-[8El#l-c1U=DdS'W"2\0sIQIA%OVf(>FW-0g
%H2$V.O<FrZ$8J9G\cR]p6SJK8bfQZNgA4JJF#T*k?q1DHfBO>I[>"j@maOe#hEM/R*-A\qirXMg4A0mMd)YjJbGSa$]3aDfAHNj8
%s07>sLebsmON/s9&ua-*B7q_.0;cXAM&Sj\PI03Ap)"aJ=9$c`7u/R8dFVelk=oV!]s/FP>"1?)U0QdGH$mh;PjOXJ>2tH!<*7^r
%ZgDu(7KValEQ`g!%gCMSMcodBc%ur:bF'e3OCpD!5YL+B4uNrl@s5&1)$A=BYSO.:])ZT*&_Odc.*CaQ)RA&$,;(FP\4@nuOCq=r
%jg;gp<g]O$<Y<.@QOc?pZSis'3G*ILTmb_u6)B!:jpoQY:n\[LQip-h'@(5Ihro'6k[aA5mZ04^@5..NKLuR+k@C0o*0l;#PLMXQ
%n,]Y_0#4!/!@p9BpjO+CK;5u\^l-\)!n$6KoiZ3o_,=XraVHS8'uJl0IF3VY?27Ui[B(3uMHJ-I4dr\*,7n9.:]-Zr$Q^H=(!Rr#
%>P_pEH%e)W`.5&Y5]f.<gpU[hHC?FcP38>C`/#_J_dc#bTpRFD%Zk=/>\?Ln%(8^;4=&'9.;]7_[D3:Fo`.DE#N>-aBkgn-`Dr"?
%5L-D9%?O_)a2f@3a!:;5>u$<KP8Mek\H"FG;0fsTW\2eE\@Nro&csnUcrWP9-I8X!L[-6=9QZ\BeaE':%mV:UFE4#Y;Ogb&mtgWq
%?[jj2Us):tXm9I'8tRgK&Sp,.JT3pNM[mu#N[?lSkB7p*R)=aB9f*,^N9l)"5.46NUY0F3\6e39>sm*^mXB,9h?'d)QuFJ_G?WEh
%LQLh)a3gH5W5(74qA@1srtLuKbC8fl]Ygo"Q+).`Hpe\rLTj+:3Rud%lJ5YkDf35R26IXDEMEK\S9P$gmS!XF4:'t()/c$+9IJ'7
%=,6%U$![<'(p;?U*#egg"2s#>$dcP1pf)-Zn]<@-m_6;E@fG#o,4jSqYApB=fuTW<m:D<iMNHA@+8(K+RafNg!9#!&oB<Torhcq>
%KW'TMFP8<3o@Y:QhSKZE'.6-h!E_@RmVRBPiN@.o(7Zb*3<(^Oh#^Mfh=;_1_-s/`UnatcAehWcKg)ptLQ8t3"g4XJj,E>S1cHG*
%]sYgP#M]Pseb$O`omN^4O%t52"fj9eBLAHKm\*i-m[uXlkb"%Lc/>9"Z]r+_B+Q(:B\;59fX`,8^/li?jgB=*`-Qq%>_MbK@gZ'\
%_N<q#,9o1%T?'W=+"pbD#i#<J+=QFf-&E7l?r=j<%U,]pqDE8s;B-.Y_NLTim@_\,^r*q#S!Pln.Cb-W2g\V*E+'-5*:^JBkT="X
%$TR2T)Eo%C/.M/F<ql5YEL-&HUuJ45NeLFNY4V;V$`Trr'N.6\l\c;RfK(L]JEt=3M38D]6$UgZi&_=G`!LcfWTTOG;LP[@_=(Gs
%`F`CFRR&c_*p7+NPOED3@)SF)O/[u3eNU.#$MlBh6(Pc(0bl(_6^"VbcgP0Hq8Tf.1gs#k=m*#tE?Au.0q8/aD.mU4%r8e^$Gn5d
%k'eCf]<ut(9PU`Ca*kS)kfE#B^@f,Z$3n.lD15-sJ:E3aKcGk]LHUO5380j%kcDk@3tf2l96ceW1l$#cJQqtiL>PO&Tnt)tb-8>H
%LCITP!Bfu8JX2IXAj_OJ6icQ`$7mOXQFAdeoBh3!(0K4<9?l<g8;]m,p<M@#1U_qM*6t/5^=:t6(J=J3f?6;pOf1lC7%3Gk6r.J)
%*SM=fh!SXRW)0Ma"WLV\:qCuMM!'1/[!C`e5+.Db/GSFaG;kcSO)Bd25'LX$r;=QprVOn]qo*aFKf%J,C!!i[`-srRG%>9Pc0%Mo
%>8h0E$3Pcd:/o"e,Lg8+X1G@L9DqlSdYT<frAjR8AF)g=)cJYT)9iScJBt":rh=^e27oKZ>f2GcBDW8%qAU-9<P<jho&u]5]p<a1
%Qk4rN6D;haA?LlAeC[:&(/TH%p"F!u7[p66'%9in_XCO/PoT*0>o&KEbTE`h^J8]s4S?;X]+F^TY'S*RlJoB4`$a?Vg29ln:Y1n*
%\Vmlo)"m_hB_#3s)Nk23YO?JgDH3mdf(Q6/m@[e+)3Kd,7M$^T!b(t_lF#D@ls/G0m>$_dYu4=c?uNt*p4')PD`@2=&uccn,'HLX
%3J=AT&?^eFrr$">kSMr<bk0(sO0Si*Zn21o$flRWMM5j<_LGia5+1^1CWV#uR*LD;)=Y^an2.!N!W=7nM3S&2Yd(=$/l_/r/5[EQ
%(5N*/dCM547XFk"mHqiZf&["-L]cPkVt1@bN^sa&$QP`rNF^m0\.SJSfF_PYQ!lg>boO/CAq0]fmX:`;7Jh1M6sepOq_dK]?+]!"
%]>pXDU2-W`]Z3:P=N@?a[3Lnm0M8TX6:&VC'$iTC7BMcKAF5;B:r?oK$NfkL-TN="KC3RN\e/M^J.bb#kBPY:/U;:&!W,O?R-9.'
%hi7r(WtMEmbgF]a9n[mJV\8NJJt<dleCQMSH&?\^L[4su7J[s&PuWs,T8GJ(,`MSOT/n2@2T@ePd.[rhVX?m8eldc5`lQ"!b==#0
%7ZK-Ik&4.ngRh-"Y4nWrh!Cn%*0=*rorIB*VeaKO5&:?d7#u6[6'F7>W=bSiqH`ODc#2g1[=.@d41_C';`T.9JM9%Yd=8/;?0,+=
%Hb(DD!]$d3Lg>_cembLABhbrfJ%/s)LN?fc[2+#n.D+pH)3ODo*u7[FNrs)QqqE&qW9,d&g=1FO,p>iN*YgtJjSZ%GE7*G3K;"<u
%Y!Mu(B\$7+rI3#&*d+iajo0E_/.8E\qD8$1C:E`*56+d>5aa@Ao(G8<NKl%SBh'2'"n_*VBP==H=dKY:jF/h,A;DqGBRH6Va;;1t
%I9cM1d#Oi;3]eOhEINNNqK(9VG1U'KXDc[,Dc<cR*(]K(N85'MeG-AMjrTmUR]4KNN6EOsdk,j5/#:akE!neV8?QQJEUGLk$uiG0
%JjiBc,Z>INgJ1J3,@J[dM]2-Y0L&DZ7Wj;;5GeJDgH*BL&C4.#3)sMP`UlLPp6`$tLVKHFCpQkb,<8,*+/]Vg1!1H1aUo15r,IbY
%5?HM2S`h-(lGI#2WMU(!r'#4`>P6s][H2cX])E5fL[W/NF))T9^tdJPgpUG!@%Jq:>>O"-2QX8;@U0`%/rQOto<dHp7BV?;.=u&t
%Fo;n5)aE8l1bJLnLT/1?1%4\\k/8c$?^agP-dRPNQPdRDl+"m2R5B_P^#SO'IJ.ukn(24,;)8P[L2DR@Nj>L@%S!7eQ?"lje)$j5
%mo3g!da!KX]n9.ir:ou/#k[M$TNm5b]hKk]lPI)Q2'\@9@*8B?BLLu=X4(r.1jZhP)F9o_$[;J!(XTT+J,*R(gFt^@[`P=\N@qW.
%[Frkh]@T2m8XKAcAb%28(!:P7U,F6P4,VTq/Vq"HWs_akdqH%1<ElqkiF6fQcrqq<W3iiq;\KpIfae1-6YN"m@_.<,%kS"UU=OWJ
%b"ku?O&;*"\oBsPU#2iW*eh4!XgLi%?%p-SjSCJRhMKh[H61`k>,tQ]&+SZY\X^1%_9hqZ[!i3Hs%[A,%#05gg:f'S)A8/\F?T<P
%_ORB[T;]2UFG;3V^tt*210s.'6%kckC?jmkdoTl`3j!'SN2g94X<]=O#0*?'`)AZ-X+'QMHbQ2W?4Zc.qW_^Plp'9BN9k1fo<5Z>
%0BW@c]*eA?>N;U-]a*@eO4m&I"gY&"Y`,$>!,9i)J8-0g.D<T5b6"ut>-jR#4t+!X@f$@[:q_jM_@h/NK(#t))512;hP8(SWcA:8
%TObmh8S^lV9P.\XLkD:Ab#KB/3V;PK)Gh(&T_fOKkX;k+>+h7E-nR"F2UOc;?[uT85&ggf8+]cra0[i\>gV]@"\@-0SHc?%CQ[W<
%3W*:5rEqS=nt=`Grp2PMG+7o([inSbad9Hf-Co1JnnmhWBXL&ZQXgQ(p)9W,7?6?r?jrW3O833Q.nK@uC*C88Zm*QkTMeqmFMh`V
%Ig%$)@]O9fMHQU;L"q`-B9^REBQb-u#'nR/Z@JZmOgN4i'IDg^/ih=j2D^5B=/0*q:NV\8L_\7k*u%*QUN3p>-QtXXL;C6W]3fqQ
%Q@nfg)J'P?**!C0Z4EHp1.5)`f-6aijeC/bTc+\X"WMPe6-kCi<9'S:<&>.TM9*?/\q$Ap*4C)q+(UAtC`kPf#"ZqN"#Qnr.=mMT
%\3T>5clEl8=]6@aQJYq5&P0?SGGoHlh#fLNe8<K7?^>ak7-:W4/CrS@*/=br5(38STHpqd<f]$agLO>s[<JB(ji&R2(*/#fZ2,X>
%=lBUt[X\OJ6B_jR-MeP^)$7iLp$a(VL1"eTJ`gPK7FZ51&6PH/4/a0,Z`PLPURsVkQ`VJjcijoF#MDa=6"nIM:f<mDUDp8K>/:\n
%N!D?Adub'bTgjc3[4hSnUF*Mp[9V`%7<kNqC7.E;5"u1)J64-!A\FTSA/*G!!p0D(qN:XP9-JluRFmHXC[0U1FXW\Rp%5J9%dX_6
%*'*Gc/*L.!*#)!AKDXY_2VgN!mnt3kKCri+XXLgYeY"MIMI:VfX<q4N]S-tON/%8,\UZXiPjaInik_Uj=n0%*q?k*@VUP;M*C.=k
%*@<Jpa56,CY(I.H2So@.I<#$eC(D]X?-:UdbM'%&k^Q!a)'XB:PnhUj0K*%JJth><9+Lm:e*2(9(_`p&;QL"Z.>+Ut.l?3RbT#*4
%SM(MFe`he3*V?FSANT#H_1AC;B+_)H9+[LGc?(&T?SrrHQOh9Ka?,"`>&.>-c\dT?dp*u"Q6<s+B";76JIpMTci6$nF4Bs.HMIW5
%*D'\l%5%S).kjJa<A&\#frR5]k8bV6.Jq^d4[O2XgN&Ha`[U5ZH](AX)8XYbQj,;cc8*T%_0o`Xg!e&HT<DH-,W'5].c$c29P*HA
%6;raL'Em!?puCiNjG;#:W,NAr[ZAuRMWEf8ot+_ca?V.5g'-af.%E9:>F1bK6Z$F)jIP*sXGX2$RA^^Y4&kjA%!`='?t-S0aq_$P
%;\/)LQ5:+Zb[Na&n6eUf`+e$p.iLhfA=O1Dj*U<?*K&G#2/2HM=fonn7.4Q/i^4/h!Bob=UD9BW*o**E[;YraH<3F?k)M4Jg,Nf#
%U;'(]>^A<U)bmA+elc]Z\q;uC.'cc44=A9BX&_re]kURZ)FiEQZTqBsHZ4eTm:$/<E7>`a!og794fcio%k`cJD>![CZJ(T$G4[`a
%ZJchChS1,*7Cui^E+")Ng$(S=<Z*/I(XTM.dH2A5iPC12[`Q!GoNm,a[S??rXjD_^kR["2+JKFTB`=5t&77jBGqW*6&+6JhaS)eJ
%-d,d%"+ukJIiVq9()WRJ\)/fhKTVs`AB-.k:s:De\q"Tt3KJ0)YTSPMgT:hi+$_T!gg8ffWU_H(b4WKk*KB%0@1?aoi:C.ogt.k=
%Z/]B*#Kf:@6Z5!td<C5a^sPn-R\(9T9=]Wi\b>1VJZ$uC3fekfBnc4alcO!e+M+dB\F-:%5E53KPE!D6(&D"QZd),0k.X%!-<!qm
%]qHMJ5pj=>;m5ob?(kr)#9@FPRT=i1g'B1sOCt,$D,)PVfJ\4!Gt;CGb<-=YU_Gn#lqV.@(ZiiM:n"o8YmW"-YDsT>65sDYaC^[=
%4o"_Y7ml+pTBl:Q6M8#Qr7rBNIV8R^Rbj<WJ@dAM)T]-i]k.!4gpStJgQu\=]7C2kkTWCqe(=3$_N8k)Z;Lu?-/^13%ja,)[[I*H
%,.ep)6\50Y"&kk@jkLSMfOGVaF4Ji!.l<qY6_aC_1Kt!TJC`rbKttE*%XQ^Z<&P1f*ZV]"L4Y)A"XgOK"Er:HqINCY!,Ws$c4lD(
%YKpj6NZd7k(o/(GT`"kmVNjlS*+TG>$Y6=L6>+d`@$jW@(j5o$L#;f6LM!U,8A+/D$VE9s,/TG"iP+$H$P)5%b\c+4"^6%g&BebR
%HP)(IIla8.iuJeM2qS*<"pjOS\O*>T(da(3_?Mgk^jt.1:plQW%iiH/-aZ$#4r;VtH.pk`rDL7(dUAnRS/*6#?AKhfqD2?Dm5ohB
%$#*^`PtZ+TG'It5"B]H?%k"D`H,qc6U3;^'7jsh!-I$u(_3#%N.-=Lop>7d%craGuT>;7%Wd[GjO*CYu[7f@W@_h'F%$P6C$4o,\
%20-X(`W@pVbMK\FKDY;)H43R"\_^Z!UT<gi1C_Y,oa!-aS3S)'\W1M"Pt+h>Z+%/lSs>aJR-F)_2IcQR(>IL9-?$4ODITWIXKd7-
%CB&C7RqR`95ZXgNBQkL=gm8$d%CEh7oc@e@DR9epUYY$q*HI<07=HhYeHimS%5o%GK6ltjo'.C)>s?p<B`9m1I0WR_<Q<p=.'-!C
%=5ICFC13[2AQXX')JsZse@mPY*fU[X90J@?=:oo.#sH1A69G\Pls)8=rZbT=8=)SH]PN%4mm!@k<4NX3>7&P^Lnk>7nEUZidC]d,
%VWftm#@K(daKGsR4mPdW+6E!b>R\&tB_IT0'^_uWW_Jp_-jj$A,?[3s7D+4P#igrT5b8]*,<DM0H<a[5ANlV8pHX<cQ>mPEKW<Es
%0:JV0[=oAVWNM4",J'4a6Uk8[2Q,8nbq>'"L6;%:d/4E9&7b63*K'0Ula#j?[R+.ppH]6r3:+?N_diSTMR2ZMV4NN%aHP1uoX2Qk
%XgBM'6>J=qe5#?a!\r*7NM)+TH3l1qHE@P\ZX`I<0b4fS^)Z"g&lo;B"`(AYr@A9Ip9P&WNA/:IN1c4G"?'3Z$GGhgB:Z5B<o&=&
%Qb\dNmQS:u6@55JJ^PjuR^Id-7fYTl)c[rP&UcD8MUoTYD:29]R%4TM$@:9#")><I&'?NcBs"'V8jRGQ@^?iAdJB&Jj)WT2W\l:1
%Y\LKf1q.)mB9'7ia@1/EJ4)s\$cj+3@Q?V#LD<P-#TA9cgHc-DXjZb@WfD+1gK3hV]O<WdD\Lo@gGXJ2G3q29I(c9o*<o*X-U8^n
%p<*VmBNR?\#O'7;-&m'<7IJS;9BmPONn6ON<]Z2j#@X&K2aWo'8@hG;-[RekU4o/Ac]SThW9G:[;:j1Kr@:]f%4Y,iQ</qogYh;=
%'_DC,Z\2O5*@<d4)E)]="OLP[@nm[F(MJE%)#<+:(@p4oZPf!+lUE"ah$aMi=k8\]$ZA.4YB=Ekqn1>;Xsj&#JS=EYp5d!54/37e
%UU*^p3$&@2.3VFXn0$3GNDE!M!F.phgK:q/*=;g4d9jq;DDU^#$sW$!iL@>dAmV+af8q+:+!A#A<<,:fp)^?XIBDX==J.@b@2I#k
%]61<Jr%Lpgp>o^0*q6*FkMa71U6j`q3p2FgZM'>00VV;/HrrVAmBiD#R-,be^_F/`Fk-fl77=ZVbJVG:=.3Mamc&_e`GbkR0mH&p
%G`2Y9<Sb*g6$gNMX869:S!/Y*Bmi[:32/A3##26CCq^4d#A?A$bet9P_>,Xn[]Q;Ca>UhH[lh1(/0pU4XquF-$T*cYefK,]N5Uo1
%@]Bg!T+p"]0Dc)FYND7>00GeSf,55_8/Gd8,r_+1(FXUq_/:VCmmfP!H,]9TN4OP2F]&7+_t?;N2\QGW*ZGH,5$gTTVS*)ZB,s*]
%q%uF)\rFiDSIP4mo?A_C_h7h!1@!DcLQf+eW3DsQU&PjM(VVpeGe7__L'8t7BC[oFZ,Wl62t/08AegcX62"]!n:uHeg%tt&nB#j'
%dss,h#@.gDBBj&3k$^r;)#@2"jnP2rbLk1`9$cQb@[[cj[%=A=Wc=1(A!J$K6s!O<UeY?IEs&kHbm)R44=`5:*?_;$T1&J'W"fOT
%/MPCXI8K@n7/oPAoM%4>:aZZ\gc":'8LrQ-'/j#8PsLa5$Vl:8-jn(lm9PLA+q$eZ*#K-FBIJM]FW#3IXItPs0L'E(:i74p<\tMp
%m!AYHV;8YtS2W@_d50Nk,&:q2LK<hNqd<B(Pe.BoB[1/g;]d-mfotJdqu$G$K7&u,J:Vcg"N>,9G=#Fs';tsc`91q][0"D,\/J9(
%O:)1BcNT;I!\!C2#O?dN;KpnbNRpJf;n2XpN[/iZ2%k";#+$hb..AaTokf8STma_BU>7\t\.+Ei]!=83BBg$mL84FZF6lJ8'KcK!
%Yrg30L'OL^8j^j&g0+0rq/SI](b=fQV_$PM3BXgS/\nf?ZJ5ODK+^*@YK\&%J2RVkn.6=G8O_k_.iQEkA=e2MfrR"eB7Fg7MJ4HN
%64?s^FFZl2Fbe\!,%%)O*t;VG;Rqa$+PR!jhX]U=[#Ba>-`]DcWe^k:G32[YIg5/L?d`23\Ta?4RZlEZ&sk76SUT0=&Vl`C2%\%=
%g=:G%6J4_j:.$:,nWQR$An.c*?9lgt/NJT-I1SM:pCa*N`WZWJ-4\eT=Kk/tETEtnf>(]c[paR\DP1X5Ega<U*o'eIcXe)RlfB2C
%grqeJ^Qr1Hq^F=C#@f#K<[/U4+LqF@\@+M#J5%GWgm<fc2Z;5%7<?lY_ACEqG^q8B`5c%93i?P'):Lm+rM&/gotc&V$2p5e(:rD(
%n*`K"T'md2Pc^*12(q0*k3QO,QTqor`2,='F]gJF0@`aIX&F+WEY/HuL6<_Ge!T3UN!c:ZB3KX$a\(d#m$*2DRN#MtEW'-sW6#7l
%gUML;#`/s.3`6a[b<G9c$q&S8h;%`;d3>NG?la(0EHc#J\p*UQ/;l%ipkH@BBeX"*EFDM:BZ89.H%,#GVX]:D.g_)9Brd@*2qT-^
%/3VDCPMTn<MaoiC]&#_Zk^%SuX`KIs?t%RD;D;FJU_de_Fc#n%,JGGmlEi_[CW;mf`sURr_\KeC$4L1e^s`h9U2D>]e/.@V[q/EH
%TAN1>rU)N-f1TcVfKAF3?H_<A.?D&j]?Su8b+g"k2c`Gi6"i'uX'E$h-]ctnh;B3QF!/s!_n%c+\8'["G7";71T?'ns+j7r(Ph%!
%8Y('s7")YTHV)5j0o>ai*<./Wdk"i>/usHWad1bM5CL,OHT>g_boQ8K#2QE:&KZKS,4Zh[:Vc5Km\Se<7ru^4.FWPmGJpJ49DKX<
%lrNP![^PX>&V*9d*`E_T?6k&ha&RVY2lfTa-H*W)>lkb%)Jg-cFG8HEUE\D%[Yh?gdrH)URP28RB_2O'1g@*S*TTZ1pU?4Vb!GA+
%!=sNkF+j1Ck"#lCSV.X,Ep.nUV"3/qRcOFHP$ke<bI9CDEA;8AD80a"P0\(Jq)\5YO(Hc6J[R>uqfK:$KTeT#8DfcB_06#uh`AS1
%hgVs_6TXT$EU9l!K^CQX=iX0.5/GMN%UVQsaj-FCht8Uod)$[>]L6!PFEg-S0;/2YB<M!tA=$Z,_f2kX0)"acU[Aoo8Ie1FQ(07:
%4Jp&1q0p+]5@P%,k@p%H)odtl44eCfin['!$9A$F@F?+%<S?"iHS(9Fm>J7jQ)V>tgXq;8@.ZfC+.Fl*XoRZDNq_J_%.!8B-UND4
%]*b31J<gWU\.!p0Hb[Bp45oUYrNc.:iIcM6k*Pi3(Lp3I?D*.Q\*3+lS/hQL4T8)=)gnQgXkLi[oPnM::[jj5Ka;kK7Ofc!J,XSI
%GoLEM=0kV6a5I'JDmS]SD>FFEl(n`jhs]=1X\DA$ISqVm`M/(#OB,5Rb%V"_AIh#XMNh[o"S_&Hn1(PI&(#tT:uTC+bKV13J%OY7
%`&@_#`jH?;g<Xd(%lnX"S@M]rh(U5ERM2UEWUg@=7:b)>NmQ:?*oJVbP:fsJN$9\T[oCVb!7357)$s[.F2B!(fKa@G9Vh\*h[+ku
%MOgI!6?(#5*1Cu=Oe,D6S=7Pmj6X*DW7c_*LBOp5=W8bEi+=P/_TTFcU6$eB&7a'Ahjm=5X<'*CJc!%TU(H/LnR^jA@eZG'I'1O&
%)[P=bN/Lo_-CC7uC>k4qZ5Sef-?]A,V0tA#^Sd^eb45UV+6(FhgK3n#I9g2sHLhMkZGHuEXH&`4V.;tNN]]tE(FRe7>C;>Bld_nO
%F(2gT4F\b$eu+f,dn9LOV>[dL^@m>CZdShfh!n.\nQ,'[1<N!jP^rdDo_(=OgV#G#qIo;A-^XM.gp&"cD9TWIZ<Om"g"O0@Ynn/?
%dUF"%2Mf3idnfUEM,Kf,_oegN?Sk+K1X_'KaZ8S8C>1soAbjdKomZQA@nmqd]t)JkneOXjgW+2#0Hu1icue_l`4CZEK%1\'=Zm[]
%Oil,(LGBb`Z#l@_Bk&2#K/,kId*h:P><oo[rU"*UUj\o<8(';bFKf\]$b)(sCBO$`hnF2ajmR8#[A/<FC47OgG\Oi=W&[0%9=R1=
%QKu5rhV`0!3$X]TW9T$9:WW/3>b>lVe_Zj5nG?HmiF+[RI,.)?Rt6eV=q]BGP#45[rmCXs!S,/X>,G4l#UW'jlqFc&Xb^ad1-KII
%%s**jVMRdWTg70Ge\,9;;Soa.,<hib)_@0^q;;<?%=oC(hXt6;O-P-B*L9$cOe@nLknj:O-aGDWFSGDCfq,`\4rr_Yjrcn]OF;#q
%]ku4k*jY8.<8H[Z.hgUtW5d/Hndl!1ar8*-(Js]7N>M(Kr+H+"7KV#hZ,Q@!jTIdb;f2a.>"'B*PL_8iRt^*!6o(Mb`P:DN3H<95
%\Sodl4=:W4'=ZAsIgI/H`(I93;4`."&DU2EZ.N3@gF1VJY^do1-Mr&?hhBO'S'=2I(8gL-8a<odk-'J=au'sWicRRN55+9s+&"(i
%_C?'";is_S#etT=j/2/7]j:*Je'E(TTa4HJlp`opNl$,_8$?+f0E"B=O6JS9HDiKAN`=0Sr@%844@be0bBnVpkK$1K`up<geBgG*
%EtmNWcMOBHN]rGtT>o8Sj63C\oX-o2S8n1&j,S>HNHZmsbS<jh0",TQ#<CY`*RE<&ds[><7ru^4a]6'?4*D=ATCFPClrNP![^L*;
%C)=#to%ARlDmP4\g.uf2M)LsT&eG_F$:&7f4i0aO656\/I['5l\W2(%qg-e8eAe7a\.Qua%E+KK&5hJ!NGA.<G;hQ:j%r#(3#Z%S
%]o87I)P_Ta@EsW>B'Sf8IGD9/jNF7&.#NLi@icH(6J\fG7-,*;+hid2h/0]7lh+[oCXSQYaeV;&GWLS:D[Y=Xqsq47SRD9j>Y"a#
%3BW_gaZ<a3nhkHj&bm!=:Nki1n#gm0KFZ;+jX%dT-GaIQI0%l2]5kT/-Th5Yf+E0(h;D`H??GOEJM'ofNB'5-/:AS?bMd@:CgULV
%$W"M^>DS?>ZH(Vk<(%$Q(2QC8l7k@pEI9W,arehHFh&YkDscbV\c1&bHVaXp;if)a(>[FT^#VnueZEh\;l+[PCC@4F>:B[I$',bR
%g(e./_Mq7p:-aG(\=h3l32/u+7YdUD-9;i5f(Of)2%:r=B)!)4V1X*s8Mf^,#'+Ap\NK'#Lbl6RM/VFs$$'uqTZ`_:]/_Y;FUc%>
%=%C7qTCfZXQr'Q;bde8V,YJ[5Z3]%+.ZC)N0MK1M(6uRHT2?.[HcXW`K1<Q@$e4sfEBT_p9I:l4aa7BoDi)_`](Q&=kSo0#VP7pf
%=)SSsP>JBd"LK2+o3hZnn&=g&Pl9@nQ0G3B8Q]Y'+^9be>ujo&%;RV*@*VW=.LW1gREmOaV""!i9A54:JK"/&iQ`n@n`ILLTXj^W
%]P<H+A\C)`Jg#!2ifum/U*t+8?$&<Y`_*lSLQ9\A#s0(Na-8d3Tju"X@[/5UiSu$Ccq//f)ZM2qSPPI2VoeMYAGKrFI-hFdB<qHc
%\Dt(0EkIZ!MMU)'\4GMGpHahKElYMoU&;kmXR2dnA%iIo]TkRQW^N9:0":1JmWc1KD`qh?LCO`KAbI:K[`0"lmsh'!Vp.Qo842E"
%"Q`-1ItpT@UOdf;h#Ed$a4J!X<kUN?km+i=LQ49@ojIm?r[8[NIG!H6aM<a5kV,jGS!fJR4jgruN>hB(Wg/X">P)F'ja2=]!L&/L
%-N%'en$j4CjS0R%>A(HrHl`+=gQKfMi<,c4Y.hSDB=h$jXu-]d\8>q!Hq2!GXV4BXT1<N6/=._?4B]]t90U2;#nC</pW:^Nm,.Ig
%T?tFm`OnTD-ZjT"XY6@EChKpFmpqdBj42h)rn[4@VeWHW:KOG]l*-[elKi8^-(i>N3O>rb\[E4_dp3l,(ClKDabRn.k/1fXE,S>_
%e?X7gTHqA=q4q@4P%#@Fp6\?S,h0kcU$W(+[9K&&PJq8L([THWp=%)&97YA2$9^R"H5Q6jdJlZFd>Rm-Oi5^QA9I%Dq"3b+P<\fk
%[Ih!upU!@B\X%,UmbI#0)FZmHHL@2`2dPR^*:6QL6Z?LC2a$o`;_<'Sg;o'sRhA/5[o0]`aQa0'^@:q!?C8l!PQ=l-002P)]dG0k
%Q4mm>]K82seuc_*#-9hgcocNMe9L>FGr4ncS(*5Db9F<e2:t6.k;GSgG4gjYfTeMr/q&$jq#EY-QW(gbrB)G84K2b:N0E?d5*f:+
%-C6o^=$$ih\iuDl&\436o!.i=MN@^b4r0]3Cf@,:R:I]fk$q7lN#`)a7&ENtQo($+4@q?$<l@caihmO]du*qS+$Ru-poADTGou*l
%.sHpfpN@\"E$+.c.sF*]>J(Jer+PMcmXlKtjc7e68+1H@DWQnVC\u,HG4`&PW_31s+%rd\WTHD!aSZ&^)s-KTCrMA8IlT'*?`+cn
%kG*k&0V4+">UBk"4")<:hh'\Om<C=ibh_nhm-TYh8q\/m46^G%7;]QF4qr4qOaUqR)Ae#M.A>.R]?P6pq'q]>_nhGB%hsW/mBbJ`
%&iK%"UFjX>[=O[`qj1'^r-b`5H*l@4c0oH\0<FmN2(&ZW$.ihEEj^,C)gk?`Vkikb<Lj]Z$(8MXldK^]gq/aZI[=9Xebn7U@a<,Q
%L'0?mQcJ%Cdk.ke:hV6o;a/\Uo];NRSo,lV@(UV`ZjGctkL-j@,qqC\I[HE/gM]lqi<o7n+CG\6CZIUkL#=cQor!0,hV=$e:57)3
%]!lO&dEuocWW+k(KCHgNm<s'd)bH,)+/1'Z$lP\_T*D[-i)`IR[!)\NN4fXuc5=cDH0GT:CL-%\RV.%sYSO;TQW>,f$%6\`6e2OL
%99tl)BM:4mm4p,!@e/dg63bI"<FepN]s!V@4\t:QdZH!.Q?G7raP5hCn#lV0[f/H]J'qE3^JDSHH'[&'1BAk6*$<CcV%kM#(Iskb
%XQ2]4Lk*)+Fj1H-fSuf$k.''4d!^T-iYsr$Y?bUDF[o^5/mduqoBSFj]H,q0o>3PBh4O;uosUt]3%p43lNfN30&I`mkIelc*p:M5
%7-*6?T(>^*pXk2u<qG,"g:#:WIk^KLS`D<WC7b#<N;'hn\!lL*eoi]:mA%5PSJ7a/PrjH'de[Hma#b`rq:SC+I;A`2UNU`ckdB;_
%9VmVE?EYXN+6^?C6cNrD8fi''o&R3fVA=ap[:K*p%s)>fQWI8[lS$gur3?b1<qH<d1B'p8oM=c>T2apeXsectGQ+[)r<n>GhsJec
%ll0o!I06Wn7B$4SL)<'RZTf5mTL+Q9N[uaphe_WW4#Kk7Ek&LNI<bT/:E'kr)qo)rV[XD2p/Mo"K,kH,`.B*kD<d5]NcWP!\Cd1H
%[l4!);ZGG+rnb6@T/oq8\*;bXkp;,-X)<n94XRj2k/dgl`L?^%"tHBG(n)Zl;e2>XB',\"<GtK"_?2Ha-5^KCBMJaf(C5`LB6:_Q
%\gCIjiD$iU3a@"Yc93$&XI5T$,$tEMlM!4/_@ks;HoU@a:OgMi^\S*Pnmb(g0CW`Da9)@/lTg:gUb^Bu2AYINOmf*g)Il4J\S+F9
%#nh(+3,!(DRJ@]C=<D(M3KkA7cr.@6Udf!.Di_jUMk04Ue'IWbG_`Vdn>X(Vi-][H]]pcQFK)qLl!N&;igo5W4Y!Z0UAt0S.^(cC
%]u?aUe<l@.1@ct<=E5q,mI:"JGZ6kDL7^BA:Rg=@c1&,*I%8IN=6#<b6B8Nqa3P5oIgkai-^XL=LT1$Mm9>Y*Kh(6))>(sq<,uZC
%TpnV1:H26Kgk?IhjC`[,b2j0*W*ED+s6:E@YL^GaUu_JG@JlI,kb"*o^TP\.>uL[5meg4-qA8GL^Y>7Kfe_R3H3RW!;Q^t_Ds8Dk
%AAF\m37#gc9r$*pq3q3=2MYFX7h]WE$"=s_?[G<lF$C_+h:p2&En/NB5q&X_W8P?\I%'F7(<R.P;(/kNRJ+!..Fd?ST1P*)&cDc=
%BFCAf/mZgX]EugT%QqG4MeBKn:UfH!\Lg%Xdf0s7oV0OiHi4kl\PkmSR]JE991fbT7/"`f^73.iKB>a^aG0/a46<KQ45;8h#PlW0
%YkOQ8_j,3'F#`\`S@^K?<i=*/cgMG6:qscU[^&DapJI$RLV_J5+s[j9*'i]o5=[=:f<*ogM7N$]s.irZ>H1Eh?/gAV&RN'*PE%b7
%/6l=em(h=;VNge1<YJ-tQj)QqA+k,ujtZZ'A1b'gGmk>#12CjBd6-QebKO*BRd6h.?VUpdl0!>3NloG&R5&WX*\;3!<uj)`?CY*/
%XSfqAS:c98l,@q]0Dt;&`Hek`k:L![V8iJuq12kB5>U=(:HR[9Sat6)q.ZaSm11:OVu5)Tj.2u[h9$a&gIhE!\Ds,*Z$s-HHJdGj
%or).R:3fu=s1r$3)B2<>LI\_3STXlCH7^/?S*E2-b9,lj\LqX"k3(X""86l6pQKpm09qR4/i%o^M#O66odA;W:MSfpf5NsRoR9gO
%re8ejmrmi@<p@B*.fG^ZS/5G*hs!].?/9W:[PMa5O9M15)9+S#_3)D]oZ\B1cDs%jU-\aA!rHKR3N4`:\/*>E?@f(>VOmc0kPE@0
%FR\o</Y2\e5(0p7jL[Qt-[fm[4`/S>Y,(O[l.kDnC.6-Nn[-6k/FoFHF*J;6f^(4$LhuibkjfBOC4VQQK:fNJ8%g_3BbC7+eS(oA
%RNL`o8ZXiU%#6TEnq`gH:/2c[Vk0:#RtA7<hqbpojgr`@=mN-qU[BnciPC>[,'u#PK[qVSrT<';]'`;mUs3(05p@4mJ!XG0.C5G>
%JM(T!QeB=I3"A4/:[X7#O"p7;Mf=Pg/[l`*6HW_E0!SU/R2mR5+(&=NeWe;UFW<nnQU)ZSYT"N%9!Us0VIWh!4HEG1@m.q/#iY"q
%3g?^+g.+,e^7j6Ui_XsO7s*ulHIZ$gb;tlr-?UsU>'mY1rU8lFHD@+r9b&JG`mSG7Z_nF#cCn5:2#a:HMs7.Yo[@:GBeb&'%j,F=
%rRJF<B+(iRkDl/d[!k%'pt8"")uN:aEB3+pLFA!.rBu-5X1=ura^a]OXg7%Y)dU)!MQVlPAG79Rr\/QEFm43.JD\qrqRXQCFWLIF
%CAhd&rD+pC^XOOeUn>Fof7B8,'V+eN39b\WdI"g.m8EfIa`*"u)(mi4\l$0/<p!8UG@NbTN'dJ'5:/A.KSM[q8+^*_s3O8De<F#6
%+*)rm6kR!q<MYh]o3Zm;0=oXt.3&M8(aYdn,.,f$@bsJL%Jt%r",rh=1qN+ZU_]FhYa%tP<UcK4RdaHD$0bP@#c%@h!_#5b79+!W
%Mbein4o(:;*DE)0FAH-5P(W!g:X<lqVESIjM#(h&UdhmHeNgsQZn@jPriQqcIO*mVM7n4'Uha979R?uf0Sda$`CmK;G:s:!H("Ee
%eCAQu&ijs%S2j\H*&6(%RWGZ-5Xi)b\pps?4nQ11%3ENbhP=^b>iW\snLcEogn8VhaWPE?,F=^4'HhGJ1eXJk]kJ.MqUj='(?+HC
%CkG(u!;rJ9+g:F1.kRcnXlW6,j^[\f_e#\_7@9_&@9>.>_BJ(PQc:<Udd#GIla"OJK5#Pkq<*nW_-=t!)jQF2gkren]=3@.\9^*8
%S$r24LV:;oL#/tj4=^Yb3MjEeTBOuiW7Eo=[bd9"p$0G]Y,tbe%fNuAX\`BoC2#?:fMVK>jJm;LBi8kkE4sAoeR'iqGEZ+o:ZKt$
%1u!JJD*Q:RT4Zj0rpXo>gL#q%cMJa)>IgLfTDkF*m.\dG:Y-BNK,d+E4/Vlta'6*LGK%;:/\@90T!%H"O4r!\V-UfDm`_Cfp/$44
%;lchMRi4e#?q95q-^tD7&_3iqh3W9[_jjo^Xj>OsFjat&U`KD,Sa4Ujgfl#sm<#9i/KKi%W6$gHLZ33WZS-0sjC1r!l:oIlqtq4k
%Y@;eSd-H)taP4RMZe=c5@tT&2l4"3bhsJdZ7t^'Vr6?)J_Ko!SF+V2oE.,/H=*o/)_:MY*8h)JjeHl8JOQd._52DOJ]fXp*G<)un
%]oLmGo[k>sV^Xi2(k_o&`b)'b;G6Dn(h\/6PK;km_gh2n=Wa^LmKl8.-/JOiL^Gph)HaBU(bFl,[m)lCqJo;`:N+YMR:#)P:Vh8<
%2a;GWI;[NID:;-1Zs14G\+n>LmJimoDjCDG?H_un2&RrS6?VA/6A55#]$77JUqlM!5m<D,PF/XWV?(<te"MTY[]1J/?_*jPO:I1U
%V511-qh0;dU]]R#kY_AQDfkbYC.:M-8Pmb&C')mPmf%)WboZK]8-4]l.SN6\T`\qU%)'>b<?*OSpJBBm=8a1t;pMAhO>%FFDVQAJ
%@MqU[/jVYPU9Bm'hA%\!Ch6IT+j!4"RJb2.%O1]\AQom+i?70m)4AI69GPuD<.oY1Zn`=p:sp)ZBUt/4H+.tM1daRmdDh_3iSC^i
%2a><B"=o!>GJWC`or.>bD5a/"QQu5X"l$JC>Le2T[KUbcZ>j)br$(J+A_j,WR$Zc@eoq:kp/FOub*OmsqV*OG05<d9NV]OC@j`cj
%r!12Tn#\P^AAqmjRZ"=;7$5SC_4F.AN`IqZGm$J`4FBU:1"<#71fC\C<>Kf^Q&MeT'n^@AfX=k3OksA[IgS5MXDKF8Kr/"V.I0Ht
%'q)hiM]O(9V;+Y'\P8h,9H+OOYVp)6FZ;CUVQYG"c!k5,WgB)ij(to<o_agj&Tf7d/9"_1bZ]TQN/f,(PqZAgaho&\N:]O;C967E
%B=FY%C[5<e1GWEqa-jo4"W>0HmD5K%c\hVL6'l8TCD`T]4j%eeru3E$9PlQlCt)!7Fr<&#c&U437T*o3\g`AF-lP@F@@)b5jh?:E
%\Okgpmj.><1+:.IAT5U;9%)/>%eAmPMk>_A$m_Qb,cHY7p"]q.hf(VZk((Lckc6JDm50%+EhBo.g?*Je<:JWR-u4l9CW[&_CNUD(
%UdLQ&4I&Ro)4q!m,B5u=`k:@>m,Z\uX8PkZ)O^<>0M%;%+U*!LR1;V%r`0lU_p50YU)gPB/YJ/T;Jp8>"sFjV41Le(@@":ZIcu)F
%:.djd&^Bm2]OT!kK%"l`=,%[4JmdB2,4r)9OW2sUjr@"`GC/B;.F8e)Y)F<X/WN;lPP)Y@e:a<r]TZ*[?5SPM/Ej-$CFBB=kgiAs
%dmG>ceB>1nmY7:@K]:F7dkY*),R?D+IBXFg<>5a?[P>(]W]15R.n3b3b_eRu<)ugg2%_,*22oiG9V^V6fFY%9aVPjG$5,gk+&3UK
%TboXB'iJe2>7-jD7OQXrQ%t2S4(D,Z#a6R@.nCiP-6Gqn7FEiF'\3tEp"_RpjS)@iI6U-Xj7`^uJi(cbao1+A%>%PpZ<""U?"!sL
%j,%tMna4QLfJ1*RlkkMbJ;P[u9Ju*+/JAgA4o58g%2HG^eVTp"9iu_9'O%`#'N`[HPrF/C<9>Q,4r@m3BOmr\6!+T)1m)/._oZYC
%`8QmH1Glpanl7uNq!lEZ#[f,B9gbLgG9KLg&"\g7*1`gSf_H@8\fm^^WpNQ<\7YsZZU$qOqcFC@]hESgXV3(=l6('_LS@_n>/b@h
%hhUVjO$$Gk)dWtO-a0c71-ZJ8s7X3r(8M3NIaEq="DskLk>ka)DLls6D:pA,R4KGK08_Y)ZnpJJ2PEsR!p'NP64D()kdTkSOnTia
%Zt;99a9E*"PKsG_[R+(o?l=@p?Hi,n'Di^icS`pb5-hI1WWg9s<Vt8b&bM<?#7(g00fcOAlYhU6DA3d'"5Z$sOfA:g!^3MN-8R9S
%97bbAMu0!DD@Ga<dFKVdW&*o!UTIQ26'\g/$=>3q'U#c[eF[eojHKLI&V$fU\Q-=!XF^\/q"->O>4&AT-Kp\RO?<-+B,7b-`SrR=
%P_&5Sf';4OkXe/NVSVR*%jpcj@".YZQh;+1BQ9F"2!baWHZF[0O[;<RDO^4&Uq;Aq+>`n3g,,<46):`!TT=[S'6l-+RhX'ol6Qc5
%h-Oa/BtS&pNL5RO3&JQ16):Ij-`d2JS8MD;))OOqNhB?AWSIAVJWis$]H*k<T%:,C+,dpj3&\driEOj*>pohS=aXbLAmd)RJL?j4
%8p:lKTPk[lWS+o$Uk7RQZ\]Z)AK?[sD'a":$8pT)Ga[mk1gNF`1]^i6odtR6nq:qrRmp>KL6VfmrmeMENOE.j&/:fuD64O>cl4t=
%mMLqd!+RgrY;k6JKNpYKQu,*m\=ruN7#GJCLc$)-,]0>_@WKi>MQ!UU.j,a[ls4J^cFLI3gLIVHT]gd/g5j4Pd\sCkQ7-T[Pj!^<
%=,@V7e>R7r6<d$o/J'[$ZJHaLIh\AsJ0+B*qUN'XJG7;/bbYhb?8@os\sZ3.h=e"o<e2r/6D/U'd&8oHB])ji`IaEre\W[%b"b?Y
%:.1NQ<)i"7>6glOR9K#JqJ!mV*R$@"qIMQWDc%g/q-5eo8ugK2le,^Mk+QeO:m,O]Ra?9o')^=l=RD//?<A-\3_iiGRCPo+[2=#4
%:<q[leq"'7r#lf:M[LfjU,/&-&q%Y@F+NC7C`tr^2Zb=A#\^2=^HCMWp0]IPn^h8*:h).01;mi>$$B3;Bq<6;(DC1t5;b0(`mHE@
%Mq*8-:(Iu-aD&M^M',d:)DQ"\)BmB4%j.H3mPI1^jH;h:XtP=d:8eL,3E,8E[&KE/&DBoE6?8Pk&<.Z25jkjsnj'udfCb^;2!P<S
%)K'6-"[`VW'#$7o-`HVX'aRu?kaN,^G_+%CP"M5EOo]<D$*GS0g7oB)G@8_DJ@UZUET3e$aOu7B^^abS(oZ+Z!E:=GX-M8/&g@!?
%Zl3-i,U5S8O;h@Y`ojB)f".R%%Xio3WpLX**MNOAJ7&I9[>N_NEoQK&%/PHOW8*HB.1t\BJ9'Qk%90HOO?@>7Z%]Q7OOjVM^@eKN
%1Wb>b*#%!bM?Da0d0PNf58sN/YdJm/HLq7W&>92*#AHuOEi:R-HPc5W*R/e="J^[>jNjJ/?=#Z^8P2H.,qi2p8g>dh6sE0!(!j]u
%gC4=f0o2aiS456[`U)-SG-_0_/Ohp:pIOL=gIXm0RdU<A91dj]kNX>+@1S/;N;.RHOr[aL,W+?fJK?EN);G_=d#^mqQD(GtV>DP/
%7c+c7@a>BU^`#Lu?Bi6AVPFGl/PQ9?:>!!gW9#.P`<P.X:j?aYm#+D8g`Xa`!FChlS`sn0%ASKG4'a4>6+&5=2Vk"0M'LZ\_LN>t
%Co+srS:N:,<!DWBO9XFu''Sei2le8b$/MJ77V*T4:c2&i6baD#SflEZRu`G30]d`R+:.R1TgK'>5=A'm%"B-!9R^kUq%!bbR)Ptd
%;mlU.!Lc&Vm="7L$7qEPYBh=2&bY:bRqb"bMF3ClZ&!GB?UY_eR-+$8'[Bo@<gltWaUESM7\bhApCm:?.PJbTE'>sQ1!q$V"\"8?
%TXF%*+N-")W%NnsK8H2f9(pNp8<&RW4dkV`_N\0h33.rW$&2S+*C^o59Re:\'m<$8,6,K,:FoS5*#;?U>9mNoZfk<ffc`nN1RUcd
%i\R"]N7uiu+CR+m[1W(QYc.6Umg9e?>6h6!gAG_7,YV]e(Q3^bCB#ns7_S:9]N^,hfi7e-d%+0FZ*rN]`_T9l,Y3S0Jhh3hbMR(S
%9'&AsbkIXo_J]VcODQ^;$VUqo[1,*eN(O2R1PEn2<jYiKVZaE$69qO#VB"OPfML:=Ig`?G]LdiRY:Ik)/G;FcC*F?E.*#VIT^^KX
%]C>qi(1ZUbfE_s1j,bU(Tu082OW/$iW_=TJ3qVFD++1NT,gmn^Z;pI@bA:ZGBLV#^J=:(^:\YOf,cK,p$rD`'o;qCmH3(9pTF$S)
%j0Y"RE@6;6$($VE:_+K[9c?3_mFkCs(T4nV"(`,k8"V]K%ctYhCg[;sEJcSqh?m56&Z[fGl0<#k5N6WnXMQYKE)V0B6lV*j#\(SJ
%a=Pet`DW#AbV`m6['J(;I&<;?RK@bfXJ[JG5l>JVis]@aTJg&T!h'jtgag@$LdM@r.SOK2!_/4pG:j`WLAB>V^0@UH'U"U7J/=.B
%:lHIf'Z^SD1)sNZC5?Pb0'SB+-ji'nAR>-tN@-q-L(e!=Ao-Bj+*05b;3thqEh?/hBI8NpHGoBY66lbPb"VkI"_7Z,`;1VWZ'r+O
%7(TU2KJ$8qL>K*M^_!*(i7at.8Hq6n!^oRt]WqZ<P1^hS6Lp9W0IO_s)56-TYk2-MLsZ6RoW3'P9aceJBJ=b>EI&:q7P,42#UY''
%%AJ*I2iBGK=cYe@N<'(m@Pf_d`.@TTTkPFm!Dja^q7CA9A/qM/k*!u7ApI91aFap6]4!?:\r*/6'_5nU]J'[s#KYfh-jF+E#!bML
%6O2P&%0^T99Rs95K19i;=1"dB!2WBlA]-=VYehgtRTPH8\/Mf:M<<ZNP84Qp28c=cD_1*%<pO]3;[#g7K@jpT%_NoXAb7[Ik2:mB
%.12p%>A,f1EM>Y-IUjR]`h&a=6G$n5FI\!iMn_d[.S*N9JkBnZe25?"/;&&:".JH?V9q6SK-d4-&<+!P*bsI/:["[a4!AQeTJq&K
%lQT=%T]STF!NVph]29lb_$HXTq5);kk953cok\$^b#)B@ii,uWW/RH`O&tW-\Z#-a!gFj;ckKHE4:tg6L;2Jh2G3C6g3pkT$W,Co
%2C4a=6F%fi66DVg1:iMY]Ant'#65>SaE=jHCh\USSk(*2I=Dr$r<0)<1ekm(d,IJR;lC)?!<NE-mY8%U&W%GERQr[B]I_^\HNZE%
%G9cT9LP*h.8j_ah.$;c)T9Kc-eD4XPlYu%kEUHf,b=3aO;$/4U:&?X*-:ERW'3,cE44`*".s&*/O97V9I+62/WqP_TTeaYiKusI6
%5AFodj.M`V]?q9%6Gf/97Kt]i4mP@""WMHs'pO;>8LPC/i(s*.<k6%aR$<Xbauu3[%-!#^<'k6E4.3R/A8_qM+fLt<Iuf\c*Ma)k
%*aN!V=<HL)XH<G#HM,Q`6Rg(M9goK<<s;''J3YlJI8I\`YKRDj-i@:")em<&,Rgd=i>0!oGSu*skq;.]Kf>==cIHTn7<>&C$W)*&
%2uqr-$1^`__?RnZ6h</_%9"Ing9_)Rs4+7BZ^I'X?S,:JTY?&3BMToigce2XO`?*]<GnI<\l=T.'tB!7H*V9U6.Ob/\jC"+#a@bd
%kef4!L"BHN9sF\RZkGj9l7RT:+,!;"B>\+ISd"9=**JjOlE]T8;)oMRdi#KY&CAq.UI0S#ol@#:C4M")`>(N&-P=1a`F`FTLpf$;
%lUFsR,H3C$"%>UkfQ)Xd)^=j?qV\Ti'P_I5=iRP$D@E#=ebFU0XBBYuV%;VOE\Zlpj;K_64<K"(Y)Pn?[C\V"PZ:7SlFL0$io3jp
%]X8Oo'qU^?1;dOuoL6#*,)>HT:tqQUg.^=T,$[(j0Ok)TrBQ)BW&<%!>5'd;-(D7_&Ng#omiqV!MG;,k9N<L@+T_<Go>'F@Tf*0I
%[n.<H'YW3=9-c"Apk[/tVW"5Aem2(?3%4JQ^$MbEiF"l!1oFs>6UH"tk?ujT$s*`):)0^'UsTMH9PW/,!]lA$@[PFV+[HblVV)Y`
%6(bRF\hIpKG;@)qg.TX4"GMPCTl]&V0Qj=56)\fDRM(2jblK]'$?W4>!;dV1.:3/cqans`=j96GY8\[gB]9J$*G&IP2lf7rLY1,G
%!qTpMUC:@Cj8AuMi9pe/C>+?b%YJM9bXAeja=PTU!hfkM6-PfN!Q?1/0,%39RhC_3?B4tBXckoClY3;+#S&W0>%Hn8.n1CIG^/df
%P:@Ian]JA.@5]t.&Oar"*_mLJL0j[>A?)Meh&Y$@9nU[]<@=0YDW#M;Y]eT2A.Z>'CA*;04U;*Yn*Xbf$;5-NCgC!46)H7eCF)-:
%DkuBKksO\Oi^>?Q&CDE%Jl63D*C9dY+gj4<#f@B(!=jEE#ZAgi\=E--a`9T[Vg@`b]^7#0-k"Q3g%knm+UEGSK>g-/C.)HY;Ud]3
%pU8L\5)^1DBiYQo`Ki$%,n^iSUP0:>cZWh9<R,,F#hIcS\pTSU=a=*=#ZUug0n%QIGI[\u/6$@>*suF=fu[\fSk:`Ng5@Olq@sLt
%8+Qm#=EJ5UO+*#lN(a3dQ+(]^c,IhZZs_7<F<cB,1eJ,]%&V?9/_s:iLYAe_L'(tOp9&>R?E5=#RPf5!"lMJ.l%;-WdEjh`m7!ll
%$gdP\)gej@+%)dEVug_o:uMub`1V-'&kVuO3D-J;,Y#8E0nf$&okkl8OB%lI5Pr:p?_e'0d'6$IWFQOsr)!#5<CcglYML_.PF\H%
%i&":!_mT[`_!V,TCos:R2K-KcfDtbS2ej5m%9-]8;9,3%=lmJ;H^FE0_7lK,I)MaKHb-aT[.>X-I<'d.[;d8;TMrR,mZ0>3ON<=h
%d[HAO)&SUu:eqX!Xj]PC6L#$lNU..N)<=r0K//P&3iXeXa5P(%!^"'>Ag<)jm?^=CC_-mnc,o1NO3-l8dZ"a+@e=0`ZL<P$4E.8H
%gC@(HS0L@*3Eba)U@^dpIW'sOTG7U96iL2q'M1QtOXQCPU;bpn"Np4o#.3M5b)k?$9M)@hM(^\3Br7;#^fWi_9i5:9UMN12m:;^7
%BKRCAY7Jkd9,6@kAVj/I4&Y&)$RJK=Y).mdk3P_k5)$$@s)$0=nCKXI0$3I/!I$N"[Xq&lg&4Qlk\B$%MW"EMU9XdA0Q@X\3Fel4
%9[g?L<T2;uNjMK+0+@["I(a,)I%_Lh&S.q2q?+SHq*fTg%0oQhHFe\P*9ud1Q%*"[GaP+m@L-uI.\IBR`f*N&2lpCX:aJ1i9&??q
%>jstcUEuukfo2*a;:PjNANZ7Y&.P]+f@$<8(b&G/L@(Hb(D:)Zog<0)`u*f/)Tjms6dTsZ.hH+5&fqlYU_K21/oKs1!dZp:4kFIT
%om"]MdTg?SN1.6VX@@aSRgk0-eZ"J#M(^%YW>Yd8&36G;H_DjPa^PVZnZ>Y&`(3:eO@=j*3h0G_1l;iFZRp&M:0^&Q,XkP7T[_$k
%3JSs8AJ(T>;:Nqr*7q`iFC;F$PumaCZMABkj-F;T1K5tFH;Cld'UTjXR]$Lq%.8<1Ht<;ZP2nIOKCqM>RbLTaoG(.<BAaQX%O-rj
%SN`HN.COMhLSEj?aD%KZc'd%\[pS6tD0p0[r_m1LENoah@-H:J3H`LQ!]3f-OEYG.`b[3[=&lNCX>Z`GjUGX,.gIW81B`CL[4H5t
%cQeTIWOX]V[2=2k!pAq+WU;S/A#=;SmgeM<0RD++dYhTdmX$X#1e'ShI4<.pbOJtkSa'b!#J,H4_Cnu&3AbrBKX_U@qul-j.=kMf
%5c_KLkt+e/SS@;5o)N*Ef.>4+N4)*=E0+nK3L`1&^aV:2#'1nOZQf>lFssdf6$6@73%XU$"@-XtRg%@cB5+)D-qR+7PDi2c[(Rpo
%2sJ>=YbHT/3gIl3hJ9-8-][G5D;7R\AS46eE$Wp(U6t(/6!Wd,C(HQ]\#TsMiE6m3Z6%#+OhniQ_b&NDi?[asR`W*[8sYnHhc00#
%-b,)%H!h:nfSBaMlZ#B<`SRU0ocWTn%cgB0PIb%Zqke&R2*d[fHVBeY7qf.g11b(0Yq!$f:0)^N@&,Y`V%X&`<4*4Q]pUdO("0$S
%.3g7FOLS:8+K.0BStcOc1V*VW7grsZ]0^(.7/u46ckE5k^IDd'D$0QBU<n\be(f'#Up1mF1hH'IKF$,&YGS<SgpGJp$#7P,</1p2
%7?onVK#BLCSr]%=@?<B+i++AlTIn!qLS5Y)SUb5U'??](4Ja4Ra%RE:i#2sI\A%2LR)pE!Y9EP%epDthYu/Ei@#]l>d#L(r]$d?J
%0>Lg^(U(EJ)\OOB35mKMeYX,oSG]0)%-fdg#8(mmf9t@0koj]&^)aV5$Rg7A'7:Op-8ZRV6[hiuciq<p5BY_=aqe*J-+D7ac;7YQ
%#1b,Q=F3='-eBg'n;4/,Jp1kb[QU[N'"AGfpC.(2oi:1CNKDYULToaZZM261P0m,taf=3!%<GO$K7ei;fMIO&9/$-VS@i)<f&bu)
%g$T$2&Kf3\Bi-?J1ICc1O%A[6"L7gOa\d@WWKnJTHulCn3eCJW"+-/lNR";V+L[94$B+R#CSoc>WZ>M-"$%_kQ,$="_196BA^ZC#
%K^oC2FUb6`;hJh8VcfSSqfKsap5C[49sX9!'dWn!AF[;T9LoE(8%S/L8A.lO`B+WiYs!l'S?2E9"n5gM<3,;7<?^%0&JhA)Re6@l
%iDhR[HE1-n5e.FtTKb377u>eh(=4khP+b'lLN=W(gmT2#MJ1)Tf?_Q)bAH!nRRh(ndTfC<"ik<?7`SZVX:8LEepT?/HGfs?Wc?\=
%I=G)^j^bV<MG^u]OMN_h-R7XLBr;H,$c[lSVJOV4gjR=U(m$+^&MmO&oKWI4%rOa4KXJAs;gEN9bWk+CW!*F^@[Z3JMq'4-M#tj*
%9oa,<CNr#$F*\WgTJD;K(`M=(BL%7_c;+m"HnZu4@_"^T8g+B%H,`%K2oQ8Uo]&sd1#5SSgf9.q+%U"A?iZq$_oQp`1)><`,!q[p
%`tO8VHG6C?G[i!kF1f_oQUJjd)*+eL&HR]eWanCuq+]H"$+:qMLJ33LNe1MLf`jaFlH+'r!1e]c;maHhW`*V/lp5H,QRJ([>.Tg`
%2X1KHF"iX&YaG=2Dgj87T,DC;O]id*=4>)(LJn3T-u$qAff3V4`\kFdbe4$*(ZQDfkbW+B3dTAWMX#E%K7g<]"T*%@8U!P,U,Qlh
%CXdrpJJik9Bb3/:QL#"d(97rbX"l1R&G5:_$;r^t:iGpTC4F%8JcRW%56o77qPqn>Vm2S>Or;2;%F0XbCS<gV6R<XS!0uV\S';J?
%#e5^%:8[c)&9r_=dN$enhJs_&)l[uji#5J]OL$EoSSDsMFu3[5(ZCKIa^5L7poKJc%M8<`Mm\!^6B?7)Z6bh8<jLr)60f3d>+'+j
%.($aJW[1hN",Rm$G0BO5(Bm7G%RK3ufa@ot)L*/^!Z'$:/[@4#630F&/O2nf4m_"-$/0oQc.<#=BPMTS+ZPji1SX`QrXR*k&5r'Q
%81mpc,f;mb<%OH]AG1H.$dD)Ib+LOi*n`en^BTX\kFe*naTCa-X,ZTsCTFboJlQq".IEmFU1,Pil&+^o:!bH,)Br(0W5eB@"bd/t
%L;#@KC^Q\AXRHMUR+C^k3PD4O(1YcB+&U4OfXi>m,[IONQ<=Hd*K,9_\A4Ud*ZfYYijI#KQQfAd1,$eDqcft\7V,IHW'EFV$&CTd
%?VY>!p!dW?dM>frc`;Y`>$\2LJ/]sG!44()&qie.2P>`];N9H]$DW]S'2u9B_]Fnp"_uml@C&F/@*g*95X3]9#jPT!#gl=WHT0T&
%JH)Y7]:uePa\4$H"4X^/'9)JD5fRW%"A*:m3p!:d*"!NR<]]V6Q\uu#X%\TeUsn[_)=f1@)JIIm_*N7(WE0tY]D'3&7u(*5'S@OT
%YjKJu>[)pj+KI"9>O$df*;g!FD8;"V*2B?M`Y`_aR\S2[*AtAkcs//W#RKQT4W0q8%fk\<D$]\<#b!;OP@6,Qg*M$3P_EI2#oEYc
%<Mgnu5mUHf0l0AmNmte&8SW8hR3I7%1+g^ni[2oaphWUKm#jBL0nr[SMiY49/.FBBA!\B3<+3qE(?:9$f'5o9nmcWi>@]Z7FUlc$
%m7oj4XKWNk0#K0^@AaR(\g==cF]SJN!ATT"#Z9at.,"2d7SVfZE\GZHHbC>\1T]Q*?18(TWi':GAdrned,&3,gU2nc=:s:HJcN)s
%e,ZAJmoG1g!`Xo<4ku7=G-/fp;&+/_8V(l9%5SfBq1`u=bV&U-Y#%VDB[!a"@76UfkT1,)4&9c)nGL-Wk%PL&f,M4>h<$UY/=!k)
%g?N^aN>p9e1d`B2mVU_hTqj\ge?!;]CT>$uF=-^hNdqn:._2d2-O]mn!#=/K8-GB:$)WUGs(&6MM'>:urltS&,Z<2o^_ol_<XT=L
%(,ZSBc1=4-/DGf@Krcsobr5l*b3Y/8WTh+k@]T?uYf*7dR0a`hpmb[>!\.F;8/Ui!,U$)5f-=Rr,A)n1S&%^jqNSr!E`uXl,I:6d
%[8WZV/geb+>d*lhOfI3I=RBI*@7gFSTKb#M`VZ^8]+jFj(,q+SdC=7K]du02[2K8thgJ.AHIq4tXZ=+q?GKn_g9imX2[01#J@&')
%fDo_n]FqVG@C?G6C^MfTAACf?[]iGgd0tYj.7Ik'c=nm5Yk7?fQ]\e[+N4Z0d)!*j1hg(q>iKAi02tW&ijkiM.clMdpCj:-+])LK
%o`q!>gc*Ac1ZQRdTaA,NX0W71DeO#Lpa9=X'Nt9SdS1L+?ac]<p`:r"@NDcofdDliMB^l:9Xidj$q``>>Po\DS?o9AR3IT.g^?jV
%-YKa.(K.r4<lPAA=AYj+d>]PNZLVP2+,\I@l@bOm@8^>q(5kWWPVMOE*SnUI6j(lK%\.XpU!5G,LcA0GY>_0P/TocU7,/F8%X8"l
%i?ke8WFggfSWpU6'kTIFYZWnuS&*%qJF[O]%=0f1Fj2`qPV:FmX5)F=6'(>[j5a#2rl2Q;V^d]&gi3%7%B2^1!/#hs@n!*&#fLL.
%CI$F;c%M4BB%;F31/(N'ZYr-E1\L+]m=W)/QSb+#Let'II#MGT'FhlDI9M1PPUt5IaOn_"\d/(/4&]h[gGg"-r(p(Uq\nG>]kfI*
%#Q!L!?*MRSdP.>A=tt<),2LhC.X"/jKB&;L3EkDL+DB&VhO/M==>eGjH/!n3PJ`&ld*tl=cNT.!c/.f!+9?S!V)[c+FRYc<;NV]/
%2,LH)`^]\nRZrSAF.M94L`90a)kJ_fKb"T1Pg)g]2W7J<'e`Au&6RG&12:G&I"5nCePkF83+u^HRTV"a#fYheHE@Al/57UH6mXkK
%80CKpNE\<<#BGL..JLr!'ar+46Pq$Z>!kh;NKu-F?DUAS\8$c]'\i[BOeBSYT&#ZtR^Z!!=r32q^5H0t^:SIU4EU6<X5P5sN)BV!
%(j?lPX?JWJ\u'&L&(b@f.d9I5NCAEnB(5nq;Ha&(gP2AN%q4]P&!C=ULM$b07]?T*8d1rVoR=[o?l"&LrU(Wr/hi66o9!UsOW*#J
%c4);J%VTu06O.U8,.GsAdJsd<j:jBk,cc?h@6<9els2u8U@q^i;&5)N$/1;f=/RL'J82h)luHn\.oTqsG+_,A0Wl^sR,Vs%0L7d/
%Lk2%a'cXR?&l1@e<j($Nl:(YXHuAIJ[JKPUL=Ko@[$d2V1lVn^TpaIpV?_8R=2`-5RffCQbg%tG;\Nrs_FOB%l5&6@PE4tmRk4O#
%(/Q0(bL+q1=AZl0O1Ln4O\Kb+\p&7K.SF0TLk$GX1/sI$[=0Mj\&_.crh<jDpW1I@K!U:T1s/TEjA7O=:F)f]g6Bdb/.=r8).fJG
%"d&cqIl:8[Si%]IAB-s:)nV`d"/5gpY[dg+rbd'lNT=c463q=QTOQMo!2,(hai`+D!I:>?kiB]lIftTtc'1'^X9k#Bg;.OQ+rGZ"
%/h0?.Vqm6XX)*B3e[4#</WN^:hr.MYp86+"l`,D\,-o\K?bt=p.FVh1;!haD^87LbO]>8bo+a<\7UVPH%p#JESh0M$Z$Daq.JMR^
%h%%ieEK20moZgKq."[Z8dV&HTad:'g@f9SW2ga>-FsU;Qhh`i*8Aie\)9>SWZXDWgd<`N7YSOK0..<:/6D3Et$?=bb's\Em(RkjG
%nK#gF?l<C+VKMJ2_APbd+sHi4BOYJ1h+Bbq5Xum6I!^!^rB429Rajo^B7@-a^WnI:.MG`)'d1`F('-!ZM]jn.;NjVG2IoAo)$#jl
%Tlh]3.U1"95l7d[g9XoO4k,e>>-&R[@o.FZT[9d9G0!h89JpIQ<OVL^Au_CQ;V1aJgl87d[p`UBl;SKMF!rHW'&@3P)2aAm))S>,
%4g4]F$<msG'#@e,F-4agl0n7UZ>bn"0GJ_FUV[W1)42Pr&1o9*`.Il"..n$$l\KD`.tU_8*"$UC;fAZ:=QthPHe%i!(Z-H,Gr6Tc
%W5fQ[I*(MJ&IbU04$&El=+Ll#eWH0AIn#kS2^bDsLQf,p/4PI@XV6V]#$D*W%]cEg61B"F8SM8-`2k5\]:=N*K$U2Qfp^Xq(^Bg"
%0l'89%JXC)EH'XR.AuRC<.C60;U+).2Nu,dR)sZZ<dHpFZ>&>o`jYBtU/!(3;"YJd$aVFgQM[r^[#bYD%4j7a#7]7RYF5riPkuh-
%%7RK9R#'><9G$>L[p2T%-JZFSj'>^12[qA2_c*bm<'gUo9?Q\fX\DXGbEeBpD?CG&"C>]@19HWW#N^looO;r0p9Xms!*`TTUc_(=
%\t)U>/Qm\rEOB_Y1l?,@c5'NNdp9&C5Y`*02VE_[l-QDp@FRT>/"t*Y;#2+8aAu5o/DX]SR['R&abW`dPDH*(-c7V?bFU9tGpo;!
%*n)i&/e;G4\NE1cLOln/0rulPOfWOI>s4bT>d<qrMj8`B4uX*+9a.tuc-JN.Z=Ll9R&7M>h/__16NEMh_*_hA<[,iUO>\,*n_H-?
%1D-_i^>6NJEi?>H,cK[9DY`uaD^bY-1;$W9:8jm-1o%`d0*1hqST->M_e>`hcd^g00=Yb;\<\XE6F4NsJQ3/=((.oS21)dcm\O?;
%d:Q>[`HY<;jQnXYPrCA.V?KF]kSU]qbnRlom2PcOpL2NeL6-5:6QfPfR*@<undV:6=OMRt_g`S.DM7HsM^<A44Ti,%_t.8!I%WnY
%YU3H`JqD_Gh$BK1#\MS(LJHS/#$(sb]YkXEZ.ubr"ifAOa:'uEBL`JsVYTPSJ-t\f\%>i2LSAl`B'u'<0iJ_ZFSf%fkCri^A@_@_
%$t]d<6&?_+Fi#EKIC?O`F*p;+L'%\(e]S%H9S_`aO.sGmkc\EO5U\f8\fD8Q,[+/J,s`gJ+A;n%doqH,5X!?I/?;L)1'1[4VQd)$
%)[@?`md&F&#U2^'b;O0Y,"429\qm,i1*WZsXU9bVZ^(kfHAr60HZfoTl'!T";4G;)?Ee\jUXa`&ZsMHb<]O:J'N:RH<YQFEVNoXe
%m&2al,!Ce6-fE;I7f`5<0L&HPG3o0Cd>n1E@QtR%;"jnS94,#<VDhP(qY('dGQ4ZA?iTY'rpQc"r-s4pqes4Ui1L"l?iKl)s6&;>
%o&'H?f>%@G5Q(,froJY0p#.S(nh1jJYQ$uho^L1Vs6IH!ci="=^HVS]s7>.J?U4,/p;0&mdsq;As2RA'_uC6p9L&(~>
%AI9_PrivateDataEnd
